// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: citadel_usermessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_citadel_5fusermessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_citadel_5fusermessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
#include "citadel_gcmessages_common.pb.h"
#include "gameevents.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_citadel_5fusermessages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_citadel_5fusermessages_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_citadel_5fusermessages_2eproto;
class CCitadelEntityMsg_BreakablePropSpawnDebris;
struct CCitadelEntityMsg_BreakablePropSpawnDebrisDefaultTypeInternal;
extern CCitadelEntityMsg_BreakablePropSpawnDebrisDefaultTypeInternal _CCitadelEntityMsg_BreakablePropSpawnDebris_default_instance_;
class CCitadelUserMessage_AbilityNotify;
struct CCitadelUserMessage_AbilityNotifyDefaultTypeInternal;
extern CCitadelUserMessage_AbilityNotifyDefaultTypeInternal _CCitadelUserMessage_AbilityNotify_default_instance_;
class CCitadelUserMessage_AuraModifierApplied;
struct CCitadelUserMessage_AuraModifierAppliedDefaultTypeInternal;
extern CCitadelUserMessage_AuraModifierAppliedDefaultTypeInternal _CCitadelUserMessage_AuraModifierApplied_default_instance_;
class CCitadelUserMessage_BulletHit;
struct CCitadelUserMessage_BulletHitDefaultTypeInternal;
extern CCitadelUserMessage_BulletHitDefaultTypeInternal _CCitadelUserMessage_BulletHit_default_instance_;
class CCitadelUserMessage_CurrencyChanged;
struct CCitadelUserMessage_CurrencyChangedDefaultTypeInternal;
extern CCitadelUserMessage_CurrencyChangedDefaultTypeInternal _CCitadelUserMessage_CurrencyChanged_default_instance_;
class CCitadelUserMessage_Damage;
struct CCitadelUserMessage_DamageDefaultTypeInternal;
extern CCitadelUserMessage_DamageDefaultTypeInternal _CCitadelUserMessage_Damage_default_instance_;
class CCitadelUserMessage_GameOver;
struct CCitadelUserMessage_GameOverDefaultTypeInternal;
extern CCitadelUserMessage_GameOverDefaultTypeInternal _CCitadelUserMessage_GameOver_default_instance_;
class CCitadelUserMessage_ModifierApplied;
struct CCitadelUserMessage_ModifierAppliedDefaultTypeInternal;
extern CCitadelUserMessage_ModifierAppliedDefaultTypeInternal _CCitadelUserMessage_ModifierApplied_default_instance_;
class CCitadelUserMessage_ObjectiveMask;
struct CCitadelUserMessage_ObjectiveMaskDefaultTypeInternal;
extern CCitadelUserMessage_ObjectiveMaskDefaultTypeInternal _CCitadelUserMessage_ObjectiveMask_default_instance_;
class CCitadelUserMsg_AbilitiesChanged;
struct CCitadelUserMsg_AbilitiesChangedDefaultTypeInternal;
extern CCitadelUserMsg_AbilitiesChangedDefaultTypeInternal _CCitadelUserMsg_AbilitiesChanged_default_instance_;
class CCitadelUserMsg_AbilityInterrupted;
struct CCitadelUserMsg_AbilityInterruptedDefaultTypeInternal;
extern CCitadelUserMsg_AbilityInterruptedDefaultTypeInternal _CCitadelUserMsg_AbilityInterrupted_default_instance_;
class CCitadelUserMsg_AbilityLateFailure;
struct CCitadelUserMsg_AbilityLateFailureDefaultTypeInternal;
extern CCitadelUserMsg_AbilityLateFailureDefaultTypeInternal _CCitadelUserMsg_AbilityLateFailure_default_instance_;
class CCitadelUserMsg_AbilityPing;
struct CCitadelUserMsg_AbilityPingDefaultTypeInternal;
extern CCitadelUserMsg_AbilityPingDefaultTypeInternal _CCitadelUserMsg_AbilityPing_default_instance_;
class CCitadelUserMsg_BossKilled;
struct CCitadelUserMsg_BossKilledDefaultTypeInternal;
extern CCitadelUserMsg_BossKilledDefaultTypeInternal _CCitadelUserMsg_BossKilled_default_instance_;
class CCitadelUserMsg_CameraController;
struct CCitadelUserMsg_CameraControllerDefaultTypeInternal;
extern CCitadelUserMsg_CameraControllerDefaultTypeInternal _CCitadelUserMsg_CameraController_default_instance_;
class CCitadelUserMsg_CameraController_Approach;
struct CCitadelUserMsg_CameraController_ApproachDefaultTypeInternal;
extern CCitadelUserMsg_CameraController_ApproachDefaultTypeInternal _CCitadelUserMsg_CameraController_Approach_default_instance_;
class CCitadelUserMsg_CameraController_Lag;
struct CCitadelUserMsg_CameraController_LagDefaultTypeInternal;
extern CCitadelUserMsg_CameraController_LagDefaultTypeInternal _CCitadelUserMsg_CameraController_Lag_default_instance_;
class CCitadelUserMsg_CameraController_Lerp;
struct CCitadelUserMsg_CameraController_LerpDefaultTypeInternal;
extern CCitadelUserMsg_CameraController_LerpDefaultTypeInternal _CCitadelUserMsg_CameraController_Lerp_default_instance_;
class CCitadelUserMsg_CameraController_Maintain;
struct CCitadelUserMsg_CameraController_MaintainDefaultTypeInternal;
extern CCitadelUserMsg_CameraController_MaintainDefaultTypeInternal _CCitadelUserMsg_CameraController_Maintain_default_instance_;
class CCitadelUserMsg_CameraController_Spring;
struct CCitadelUserMsg_CameraController_SpringDefaultTypeInternal;
extern CCitadelUserMsg_CameraController_SpringDefaultTypeInternal _CCitadelUserMsg_CameraController_Spring_default_instance_;
class CCitadelUserMsg_ChatEvent;
struct CCitadelUserMsg_ChatEventDefaultTypeInternal;
extern CCitadelUserMsg_ChatEventDefaultTypeInternal _CCitadelUserMsg_ChatEvent_default_instance_;
class CCitadelUserMsg_ChatMsg;
struct CCitadelUserMsg_ChatMsgDefaultTypeInternal;
extern CCitadelUserMsg_ChatMsgDefaultTypeInternal _CCitadelUserMsg_ChatMsg_default_instance_;
class CCitadelUserMsg_ChatWheel;
struct CCitadelUserMsg_ChatWheelDefaultTypeInternal;
extern CCitadelUserMsg_ChatWheelDefaultTypeInternal _CCitadelUserMsg_ChatWheel_default_instance_;
class CCitadelUserMsg_DeathReplayData;
struct CCitadelUserMsg_DeathReplayDataDefaultTypeInternal;
extern CCitadelUserMsg_DeathReplayDataDefaultTypeInternal _CCitadelUserMsg_DeathReplayData_default_instance_;
class CCitadelUserMsg_ForceShopClosed;
struct CCitadelUserMsg_ForceShopClosedDefaultTypeInternal;
extern CCitadelUserMsg_ForceShopClosedDefaultTypeInternal _CCitadelUserMsg_ForceShopClosed_default_instance_;
class CCitadelUserMsg_GetDamageStatsResponse;
struct CCitadelUserMsg_GetDamageStatsResponseDefaultTypeInternal;
extern CCitadelUserMsg_GetDamageStatsResponseDefaultTypeInternal _CCitadelUserMsg_GetDamageStatsResponse_default_instance_;
class CCitadelUserMsg_GetDamageStatsResponse_StatType;
struct CCitadelUserMsg_GetDamageStatsResponse_StatTypeDefaultTypeInternal;
extern CCitadelUserMsg_GetDamageStatsResponse_StatTypeDefaultTypeInternal _CCitadelUserMsg_GetDamageStatsResponse_StatType_default_instance_;
class CCitadelUserMsg_GoldHistory;
struct CCitadelUserMsg_GoldHistoryDefaultTypeInternal;
extern CCitadelUserMsg_GoldHistoryDefaultTypeInternal _CCitadelUserMsg_GoldHistory_default_instance_;
class CCitadelUserMsg_GoldHistory_GoldRecord;
struct CCitadelUserMsg_GoldHistory_GoldRecordDefaultTypeInternal;
extern CCitadelUserMsg_GoldHistory_GoldRecordDefaultTypeInternal _CCitadelUserMsg_GoldHistory_GoldRecord_default_instance_;
class CCitadelUserMsg_GoldHistory_MinuteRecord;
struct CCitadelUserMsg_GoldHistory_MinuteRecordDefaultTypeInternal;
extern CCitadelUserMsg_GoldHistory_MinuteRecordDefaultTypeInternal _CCitadelUserMsg_GoldHistory_MinuteRecord_default_instance_;
class CCitadelUserMsg_HeroKilled;
struct CCitadelUserMsg_HeroKilledDefaultTypeInternal;
extern CCitadelUserMsg_HeroKilledDefaultTypeInternal _CCitadelUserMsg_HeroKilled_default_instance_;
class CCitadelUserMsg_MapLine;
struct CCitadelUserMsg_MapLineDefaultTypeInternal;
extern CCitadelUserMsg_MapLineDefaultTypeInternal _CCitadelUserMsg_MapLine_default_instance_;
class CCitadelUserMsg_MapPing;
struct CCitadelUserMsg_MapPingDefaultTypeInternal;
extern CCitadelUserMsg_MapPingDefaultTypeInternal _CCitadelUserMsg_MapPing_default_instance_;
class CCitadelUserMsg_ObstructedShotFired;
struct CCitadelUserMsg_ObstructedShotFiredDefaultTypeInternal;
extern CCitadelUserMsg_ObstructedShotFiredDefaultTypeInternal _CCitadelUserMsg_ObstructedShotFired_default_instance_;
class CCitadelUserMsg_ParticipantSetLibraryStackFields;
struct CCitadelUserMsg_ParticipantSetLibraryStackFieldsDefaultTypeInternal;
extern CCitadelUserMsg_ParticipantSetLibraryStackFieldsDefaultTypeInternal _CCitadelUserMsg_ParticipantSetLibraryStackFields_default_instance_;
class CCitadelUserMsg_ParticipantSetSoundEventParams;
struct CCitadelUserMsg_ParticipantSetSoundEventParamsDefaultTypeInternal;
extern CCitadelUserMsg_ParticipantSetSoundEventParamsDefaultTypeInternal _CCitadelUserMsg_ParticipantSetSoundEventParams_default_instance_;
class CCitadelUserMsg_ParticipantStartSoundEvent;
struct CCitadelUserMsg_ParticipantStartSoundEventDefaultTypeInternal;
extern CCitadelUserMsg_ParticipantStartSoundEventDefaultTypeInternal _CCitadelUserMsg_ParticipantStartSoundEvent_default_instance_;
class CCitadelUserMsg_ParticipantStopSoundEvent;
struct CCitadelUserMsg_ParticipantStopSoundEventDefaultTypeInternal;
extern CCitadelUserMsg_ParticipantStopSoundEventDefaultTypeInternal _CCitadelUserMsg_ParticipantStopSoundEvent_default_instance_;
class CCitadelUserMsg_ParticipantStopSoundEventHash;
struct CCitadelUserMsg_ParticipantStopSoundEventHashDefaultTypeInternal;
extern CCitadelUserMsg_ParticipantStopSoundEventHashDefaultTypeInternal _CCitadelUserMsg_ParticipantStopSoundEventHash_default_instance_;
class CCitadelUserMsg_PingWheel;
struct CCitadelUserMsg_PingWheelDefaultTypeInternal;
extern CCitadelUserMsg_PingWheelDefaultTypeInternal _CCitadelUserMsg_PingWheel_default_instance_;
class CCitadelUserMsg_PlayerLifetimeStatInfo;
struct CCitadelUserMsg_PlayerLifetimeStatInfoDefaultTypeInternal;
extern CCitadelUserMsg_PlayerLifetimeStatInfoDefaultTypeInternal _CCitadelUserMsg_PlayerLifetimeStatInfo_default_instance_;
class CCitadelUserMsg_PlayerLifetimeStatInfo_Stat;
struct CCitadelUserMsg_PlayerLifetimeStatInfo_StatDefaultTypeInternal;
extern CCitadelUserMsg_PlayerLifetimeStatInfo_StatDefaultTypeInternal _CCitadelUserMsg_PlayerLifetimeStatInfo_Stat_default_instance_;
class CCitadelUserMsg_PostMatchDetails;
struct CCitadelUserMsg_PostMatchDetailsDefaultTypeInternal;
extern CCitadelUserMsg_PostMatchDetailsDefaultTypeInternal _CCitadelUserMsg_PostMatchDetails_default_instance_;
class CCitadelUserMsg_PostProcessingAnim;
struct CCitadelUserMsg_PostProcessingAnimDefaultTypeInternal;
extern CCitadelUserMsg_PostProcessingAnimDefaultTypeInternal _CCitadelUserMsg_PostProcessingAnim_default_instance_;
class CCitadelUserMsg_QuickResponse;
struct CCitadelUserMsg_QuickResponseDefaultTypeInternal;
extern CCitadelUserMsg_QuickResponseDefaultTypeInternal _CCitadelUserMsg_QuickResponse_default_instance_;
class CCitadelUserMsg_RecentDamageSummary;
struct CCitadelUserMsg_RecentDamageSummaryDefaultTypeInternal;
extern CCitadelUserMsg_RecentDamageSummaryDefaultTypeInternal _CCitadelUserMsg_RecentDamageSummary_default_instance_;
class CCitadelUserMsg_RecentDamageSummary_DamageRecord;
struct CCitadelUserMsg_RecentDamageSummary_DamageRecordDefaultTypeInternal;
extern CCitadelUserMsg_RecentDamageSummary_DamageRecordDefaultTypeInternal _CCitadelUserMsg_RecentDamageSummary_DamageRecord_default_instance_;
class CCitadelUserMsg_RecentDamageSummary_ModifierRecord;
struct CCitadelUserMsg_RecentDamageSummary_ModifierRecordDefaultTypeInternal;
extern CCitadelUserMsg_RecentDamageSummary_ModifierRecordDefaultTypeInternal _CCitadelUserMsg_RecentDamageSummary_ModifierRecord_default_instance_;
class CCitadelUserMsg_ReturnIdol;
struct CCitadelUserMsg_ReturnIdolDefaultTypeInternal;
extern CCitadelUserMsg_ReturnIdolDefaultTypeInternal _CCitadelUserMsg_ReturnIdol_default_instance_;
class CCitadelUserMsg_SetClientCameraAngles;
struct CCitadelUserMsg_SetClientCameraAnglesDefaultTypeInternal;
extern CCitadelUserMsg_SetClientCameraAnglesDefaultTypeInternal _CCitadelUserMsg_SetClientCameraAngles_default_instance_;
class CCitadelUserMsg_SpectatorTeamChanged;
struct CCitadelUserMsg_SpectatorTeamChangedDefaultTypeInternal;
extern CCitadelUserMsg_SpectatorTeamChangedDefaultTypeInternal _CCitadelUserMsg_SpectatorTeamChanged_default_instance_;
class CCitadelUserMsg_StaminaDrained;
struct CCitadelUserMsg_StaminaDrainedDefaultTypeInternal;
extern CCitadelUserMsg_StaminaDrainedDefaultTypeInternal _CCitadelUserMsg_StaminaDrained_default_instance_;
class CCitadelUserMsg_TeamRewards;
struct CCitadelUserMsg_TeamRewardsDefaultTypeInternal;
extern CCitadelUserMsg_TeamRewardsDefaultTypeInternal _CCitadelUserMsg_TeamRewards_default_instance_;
class CCitadelUserMsg_TriggerDamageFlash;
struct CCitadelUserMsg_TriggerDamageFlashDefaultTypeInternal;
extern CCitadelUserMsg_TriggerDamageFlashDefaultTypeInternal _CCitadelUserMsg_TriggerDamageFlash_default_instance_;
class CUserMessageEmpty;
struct CUserMessageEmptyDefaultTypeInternal;
extern CUserMessageEmptyDefaultTypeInternal _CUserMessageEmpty_default_instance_;
class PingCommonData;
struct PingCommonDataDefaultTypeInternal;
extern PingCommonDataDefaultTypeInternal _PingCommonData_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CCitadelEntityMsg_BreakablePropSpawnDebris* Arena::CreateMaybeMessage<::CCitadelEntityMsg_BreakablePropSpawnDebris>(Arena*);
template<> ::CCitadelUserMessage_AbilityNotify* Arena::CreateMaybeMessage<::CCitadelUserMessage_AbilityNotify>(Arena*);
template<> ::CCitadelUserMessage_AuraModifierApplied* Arena::CreateMaybeMessage<::CCitadelUserMessage_AuraModifierApplied>(Arena*);
template<> ::CCitadelUserMessage_BulletHit* Arena::CreateMaybeMessage<::CCitadelUserMessage_BulletHit>(Arena*);
template<> ::CCitadelUserMessage_CurrencyChanged* Arena::CreateMaybeMessage<::CCitadelUserMessage_CurrencyChanged>(Arena*);
template<> ::CCitadelUserMessage_Damage* Arena::CreateMaybeMessage<::CCitadelUserMessage_Damage>(Arena*);
template<> ::CCitadelUserMessage_GameOver* Arena::CreateMaybeMessage<::CCitadelUserMessage_GameOver>(Arena*);
template<> ::CCitadelUserMessage_ModifierApplied* Arena::CreateMaybeMessage<::CCitadelUserMessage_ModifierApplied>(Arena*);
template<> ::CCitadelUserMessage_ObjectiveMask* Arena::CreateMaybeMessage<::CCitadelUserMessage_ObjectiveMask>(Arena*);
template<> ::CCitadelUserMsg_AbilitiesChanged* Arena::CreateMaybeMessage<::CCitadelUserMsg_AbilitiesChanged>(Arena*);
template<> ::CCitadelUserMsg_AbilityInterrupted* Arena::CreateMaybeMessage<::CCitadelUserMsg_AbilityInterrupted>(Arena*);
template<> ::CCitadelUserMsg_AbilityLateFailure* Arena::CreateMaybeMessage<::CCitadelUserMsg_AbilityLateFailure>(Arena*);
template<> ::CCitadelUserMsg_AbilityPing* Arena::CreateMaybeMessage<::CCitadelUserMsg_AbilityPing>(Arena*);
template<> ::CCitadelUserMsg_BossKilled* Arena::CreateMaybeMessage<::CCitadelUserMsg_BossKilled>(Arena*);
template<> ::CCitadelUserMsg_CameraController* Arena::CreateMaybeMessage<::CCitadelUserMsg_CameraController>(Arena*);
template<> ::CCitadelUserMsg_CameraController_Approach* Arena::CreateMaybeMessage<::CCitadelUserMsg_CameraController_Approach>(Arena*);
template<> ::CCitadelUserMsg_CameraController_Lag* Arena::CreateMaybeMessage<::CCitadelUserMsg_CameraController_Lag>(Arena*);
template<> ::CCitadelUserMsg_CameraController_Lerp* Arena::CreateMaybeMessage<::CCitadelUserMsg_CameraController_Lerp>(Arena*);
template<> ::CCitadelUserMsg_CameraController_Maintain* Arena::CreateMaybeMessage<::CCitadelUserMsg_CameraController_Maintain>(Arena*);
template<> ::CCitadelUserMsg_CameraController_Spring* Arena::CreateMaybeMessage<::CCitadelUserMsg_CameraController_Spring>(Arena*);
template<> ::CCitadelUserMsg_ChatEvent* Arena::CreateMaybeMessage<::CCitadelUserMsg_ChatEvent>(Arena*);
template<> ::CCitadelUserMsg_ChatMsg* Arena::CreateMaybeMessage<::CCitadelUserMsg_ChatMsg>(Arena*);
template<> ::CCitadelUserMsg_ChatWheel* Arena::CreateMaybeMessage<::CCitadelUserMsg_ChatWheel>(Arena*);
template<> ::CCitadelUserMsg_DeathReplayData* Arena::CreateMaybeMessage<::CCitadelUserMsg_DeathReplayData>(Arena*);
template<> ::CCitadelUserMsg_ForceShopClosed* Arena::CreateMaybeMessage<::CCitadelUserMsg_ForceShopClosed>(Arena*);
template<> ::CCitadelUserMsg_GetDamageStatsResponse* Arena::CreateMaybeMessage<::CCitadelUserMsg_GetDamageStatsResponse>(Arena*);
template<> ::CCitadelUserMsg_GetDamageStatsResponse_StatType* Arena::CreateMaybeMessage<::CCitadelUserMsg_GetDamageStatsResponse_StatType>(Arena*);
template<> ::CCitadelUserMsg_GoldHistory* Arena::CreateMaybeMessage<::CCitadelUserMsg_GoldHistory>(Arena*);
template<> ::CCitadelUserMsg_GoldHistory_GoldRecord* Arena::CreateMaybeMessage<::CCitadelUserMsg_GoldHistory_GoldRecord>(Arena*);
template<> ::CCitadelUserMsg_GoldHistory_MinuteRecord* Arena::CreateMaybeMessage<::CCitadelUserMsg_GoldHistory_MinuteRecord>(Arena*);
template<> ::CCitadelUserMsg_HeroKilled* Arena::CreateMaybeMessage<::CCitadelUserMsg_HeroKilled>(Arena*);
template<> ::CCitadelUserMsg_MapLine* Arena::CreateMaybeMessage<::CCitadelUserMsg_MapLine>(Arena*);
template<> ::CCitadelUserMsg_MapPing* Arena::CreateMaybeMessage<::CCitadelUserMsg_MapPing>(Arena*);
template<> ::CCitadelUserMsg_ObstructedShotFired* Arena::CreateMaybeMessage<::CCitadelUserMsg_ObstructedShotFired>(Arena*);
template<> ::CCitadelUserMsg_ParticipantSetLibraryStackFields* Arena::CreateMaybeMessage<::CCitadelUserMsg_ParticipantSetLibraryStackFields>(Arena*);
template<> ::CCitadelUserMsg_ParticipantSetSoundEventParams* Arena::CreateMaybeMessage<::CCitadelUserMsg_ParticipantSetSoundEventParams>(Arena*);
template<> ::CCitadelUserMsg_ParticipantStartSoundEvent* Arena::CreateMaybeMessage<::CCitadelUserMsg_ParticipantStartSoundEvent>(Arena*);
template<> ::CCitadelUserMsg_ParticipantStopSoundEvent* Arena::CreateMaybeMessage<::CCitadelUserMsg_ParticipantStopSoundEvent>(Arena*);
template<> ::CCitadelUserMsg_ParticipantStopSoundEventHash* Arena::CreateMaybeMessage<::CCitadelUserMsg_ParticipantStopSoundEventHash>(Arena*);
template<> ::CCitadelUserMsg_PingWheel* Arena::CreateMaybeMessage<::CCitadelUserMsg_PingWheel>(Arena*);
template<> ::CCitadelUserMsg_PlayerLifetimeStatInfo* Arena::CreateMaybeMessage<::CCitadelUserMsg_PlayerLifetimeStatInfo>(Arena*);
template<> ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* Arena::CreateMaybeMessage<::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat>(Arena*);
template<> ::CCitadelUserMsg_PostMatchDetails* Arena::CreateMaybeMessage<::CCitadelUserMsg_PostMatchDetails>(Arena*);
template<> ::CCitadelUserMsg_PostProcessingAnim* Arena::CreateMaybeMessage<::CCitadelUserMsg_PostProcessingAnim>(Arena*);
template<> ::CCitadelUserMsg_QuickResponse* Arena::CreateMaybeMessage<::CCitadelUserMsg_QuickResponse>(Arena*);
template<> ::CCitadelUserMsg_RecentDamageSummary* Arena::CreateMaybeMessage<::CCitadelUserMsg_RecentDamageSummary>(Arena*);
template<> ::CCitadelUserMsg_RecentDamageSummary_DamageRecord* Arena::CreateMaybeMessage<::CCitadelUserMsg_RecentDamageSummary_DamageRecord>(Arena*);
template<> ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord* Arena::CreateMaybeMessage<::CCitadelUserMsg_RecentDamageSummary_ModifierRecord>(Arena*);
template<> ::CCitadelUserMsg_ReturnIdol* Arena::CreateMaybeMessage<::CCitadelUserMsg_ReturnIdol>(Arena*);
template<> ::CCitadelUserMsg_SetClientCameraAngles* Arena::CreateMaybeMessage<::CCitadelUserMsg_SetClientCameraAngles>(Arena*);
template<> ::CCitadelUserMsg_SpectatorTeamChanged* Arena::CreateMaybeMessage<::CCitadelUserMsg_SpectatorTeamChanged>(Arena*);
template<> ::CCitadelUserMsg_StaminaDrained* Arena::CreateMaybeMessage<::CCitadelUserMsg_StaminaDrained>(Arena*);
template<> ::CCitadelUserMsg_TeamRewards* Arena::CreateMaybeMessage<::CCitadelUserMsg_TeamRewards>(Arena*);
template<> ::CCitadelUserMsg_TriggerDamageFlash* Arena::CreateMaybeMessage<::CCitadelUserMsg_TriggerDamageFlash>(Arena*);
template<> ::CUserMessageEmpty* Arena::CreateMaybeMessage<::CUserMessageEmpty>(Arena*);
template<> ::PingCommonData* Arena::CreateMaybeMessage<::PingCommonData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum CCitadelUserMsg_AbilitiesChanged_Change : int {
  CCitadelUserMsg_AbilitiesChanged_Change_EInvalid = -1,
  CCitadelUserMsg_AbilitiesChanged_Change_EPurchased = 0,
  CCitadelUserMsg_AbilitiesChanged_Change_EUpgraded = 1,
  CCitadelUserMsg_AbilitiesChanged_Change_ESold = 2,
  CCitadelUserMsg_AbilitiesChanged_Change_ESwappedActivatedAbility = 3
};
bool CCitadelUserMsg_AbilitiesChanged_Change_IsValid(int value);
constexpr CCitadelUserMsg_AbilitiesChanged_Change CCitadelUserMsg_AbilitiesChanged_Change_Change_MIN = CCitadelUserMsg_AbilitiesChanged_Change_EInvalid;
constexpr CCitadelUserMsg_AbilitiesChanged_Change CCitadelUserMsg_AbilitiesChanged_Change_Change_MAX = CCitadelUserMsg_AbilitiesChanged_Change_ESwappedActivatedAbility;
constexpr int CCitadelUserMsg_AbilitiesChanged_Change_Change_ARRAYSIZE = CCitadelUserMsg_AbilitiesChanged_Change_Change_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CCitadelUserMsg_AbilitiesChanged_Change_descriptor();
template<typename T>
inline const std::string& CCitadelUserMsg_AbilitiesChanged_Change_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CCitadelUserMsg_AbilitiesChanged_Change>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CCitadelUserMsg_AbilitiesChanged_Change_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CCitadelUserMsg_AbilitiesChanged_Change_descriptor(), enum_t_value);
}
inline bool CCitadelUserMsg_AbilitiesChanged_Change_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CCitadelUserMsg_AbilitiesChanged_Change* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CCitadelUserMsg_AbilitiesChanged_Change>(
    CCitadelUserMsg_AbilitiesChanged_Change_descriptor(), name, value);
}
enum CitadelUserMessageIds : int {
  k_EUserMsg_Damage = 300,
  k_EUserMsg_MapPing = 303,
  k_EUserMsg_TeamRewards = 304,
  k_EUserMsg_AbilityFailed = 306,
  k_EUserMsg_TriggerDamageFlash = 308,
  k_EUserMsg_AbilitiesChanged = 309,
  k_EUserMsg_RecentDamageSummary = 310,
  k_EUserMsg_SpectatorTeamChanged = 311,
  k_EUserMsg_ChatWheel = 312,
  k_EUserMsg_GoldHistory = 313,
  k_EUserMsg_ChatMsg = 314,
  k_EUserMsg_QuickResponse = 315,
  k_EUserMsg_PostMatchDetails = 316,
  k_EUserMsg_ChatEvent = 317,
  k_EUserMsg_AbilityInterrupted = 318,
  k_EUserMsg_HeroKilled = 319,
  k_EUserMsg_ReturnIdol = 320,
  k_EUserMsg_SetClientCameraAngles = 321,
  k_EUserMsg_MapLine = 322,
  k_EUserMsg_BulletHit = 323,
  k_EUserMsg_ObjectiveMask = 324,
  k_EUserMsg_ModifierApplied = 325,
  k_EUserMsg_CameraController = 326,
  k_EUserMsg_AuraModifierApplied = 327,
  k_EUserMsg_ObstructedShotFired = 329,
  k_EUserMsg_AbilityLateFailure = 330,
  k_EUserMsg_AbilityPing = 331,
  k_EUserMsg_PostProcessingAnim = 332,
  k_EUserMsg_DeathReplayData = 333,
  k_EUserMsg_PlayerLifetimeStatInfo = 334,
  k_EUserMsg_ForceShopClosed = 336,
  k_EUserMsg_StaminaDrained = 337,
  k_EUserMsg_AbilityNotify = 338,
  k_EUserMsg_GetDamageStatsResponse = 339,
  k_EUserMsg_ParticipantStartSoundEvent = 340,
  k_EUserMsg_ParticipantStopSoundEvent = 341,
  k_EUserMsg_ParticipantStopSoundEventHash = 342,
  k_EUserMsg_ParticipantSetSoundEventParams = 343,
  k_EUserMsg_ParticipantSetLibraryStackFields = 344,
  k_EUserMsg_CurrencyChanged = 345,
  k_EUserMsg_GameOver = 346,
  k_EUserMsg_BossKilled = 347
};
bool CitadelUserMessageIds_IsValid(int value);
constexpr CitadelUserMessageIds CitadelUserMessageIds_MIN = k_EUserMsg_Damage;
constexpr CitadelUserMessageIds CitadelUserMessageIds_MAX = k_EUserMsg_BossKilled;
constexpr int CitadelUserMessageIds_ARRAYSIZE = CitadelUserMessageIds_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CitadelUserMessageIds_descriptor();
template<typename T>
inline const std::string& CitadelUserMessageIds_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CitadelUserMessageIds>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CitadelUserMessageIds_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CitadelUserMessageIds_descriptor(), enum_t_value);
}
inline bool CitadelUserMessageIds_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CitadelUserMessageIds* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CitadelUserMessageIds>(
    CitadelUserMessageIds_descriptor(), name, value);
}
enum CitadelEntityMessageIds : int {
  k_EEntityMsg_BreakablePropSpawnDebris = 500
};
bool CitadelEntityMessageIds_IsValid(int value);
constexpr CitadelEntityMessageIds CitadelEntityMessageIds_MIN = k_EEntityMsg_BreakablePropSpawnDebris;
constexpr CitadelEntityMessageIds CitadelEntityMessageIds_MAX = k_EEntityMsg_BreakablePropSpawnDebris;
constexpr int CitadelEntityMessageIds_ARRAYSIZE = CitadelEntityMessageIds_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CitadelEntityMessageIds_descriptor();
template<typename T>
inline const std::string& CitadelEntityMessageIds_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CitadelEntityMessageIds>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CitadelEntityMessageIds_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CitadelEntityMessageIds_descriptor(), enum_t_value);
}
inline bool CitadelEntityMessageIds_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CitadelEntityMessageIds* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CitadelEntityMessageIds>(
    CitadelEntityMessageIds_descriptor(), name, value);
}
enum ChatMsgPingMarkerInfo : int {
  k_EPingMarkerInfo_ShowMarkerAndSound = 0,
  k_EPingMarkerInfo_HideMarkerAndSound = 1,
  k_EPingMarkerInfo_ShowMarkerOnSender = 2,
  k_EPingMarkerInfo_OnlyShowMarker = 3,
  k_EPingMarkerInfo_OnlyPlaySound = 4
};
bool ChatMsgPingMarkerInfo_IsValid(int value);
constexpr ChatMsgPingMarkerInfo ChatMsgPingMarkerInfo_MIN = k_EPingMarkerInfo_ShowMarkerAndSound;
constexpr ChatMsgPingMarkerInfo ChatMsgPingMarkerInfo_MAX = k_EPingMarkerInfo_OnlyPlaySound;
constexpr int ChatMsgPingMarkerInfo_ARRAYSIZE = ChatMsgPingMarkerInfo_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChatMsgPingMarkerInfo_descriptor();
template<typename T>
inline const std::string& ChatMsgPingMarkerInfo_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ChatMsgPingMarkerInfo>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ChatMsgPingMarkerInfo_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ChatMsgPingMarkerInfo_descriptor(), enum_t_value);
}
inline bool ChatMsgPingMarkerInfo_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ChatMsgPingMarkerInfo* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ChatMsgPingMarkerInfo>(
    ChatMsgPingMarkerInfo_descriptor(), name, value);
}
enum CameraOperation : int {
  k_ECameraOp_Maintain = 2,
  k_ECameraOp_Approach = 3,
  k_ECameraOp_Spring = 4,
  k_ECameraOp_Lerp = 5,
  k_ECameraOp_Lag = 6
};
bool CameraOperation_IsValid(int value);
constexpr CameraOperation CameraOperation_MIN = k_ECameraOp_Maintain;
constexpr CameraOperation CameraOperation_MAX = k_ECameraOp_Lag;
constexpr int CameraOperation_ARRAYSIZE = CameraOperation_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CameraOperation_descriptor();
template<typename T>
inline const std::string& CameraOperation_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CameraOperation>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CameraOperation_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CameraOperation_descriptor(), enum_t_value);
}
inline bool CameraOperation_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CameraOperation* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CameraOperation>(
    CameraOperation_descriptor(), name, value);
}
enum CameraParam : int {
  k_EParam_ClearAllOps = 0,
  k_EParam_ClearAllOpsForContext = 1,
  k_EParam_Distance = 2,
  k_EParam_FOV = 3,
  k_EParam_TargetPosition = 4,
  k_EParam_VertOffset = 5,
  k_EParam_HorizOffset = 6
};
bool CameraParam_IsValid(int value);
constexpr CameraParam CameraParam_MIN = k_EParam_ClearAllOps;
constexpr CameraParam CameraParam_MAX = k_EParam_HorizOffset;
constexpr int CameraParam_ARRAYSIZE = CameraParam_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CameraParam_descriptor();
template<typename T>
inline const std::string& CameraParam_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CameraParam>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CameraParam_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CameraParam_descriptor(), enum_t_value);
}
inline bool CameraParam_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CameraParam* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CameraParam>(
    CameraParam_descriptor(), name, value);
}
enum CameraAction : int {
  k_EAction_AddOp = 0,
  k_EAction_ClearAllOps = 1,
  k_EAction_ClearOpsForContext = 2
};
bool CameraAction_IsValid(int value);
constexpr CameraAction CameraAction_MIN = k_EAction_AddOp;
constexpr CameraAction CameraAction_MAX = k_EAction_ClearOpsForContext;
constexpr int CameraAction_ARRAYSIZE = CameraAction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CameraAction_descriptor();
template<typename T>
inline const std::string& CameraAction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CameraAction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CameraAction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CameraAction_descriptor(), enum_t_value);
}
inline bool CameraAction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CameraAction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CameraAction>(
    CameraAction_descriptor(), name, value);
}
enum ECitadelChatMessage : int {
  CITADEL_CHAT_MESSAGE_UNPAUSE_COUNTDOWN = 1,
  CITADEL_CHAT_MESSAGE_UNPAUSED = 2,
  CITADEL_CHAT_MESSAGE_AUTO_UNPAUSED = 3,
  CITADEL_CHAT_MESSAGE_PAUSE_COUNTDOWN = 4,
  CITADEL_CHAT_MESSAGE_PAUSED = 5,
  CITADEL_CHAT_MESSAGE_YOUPAUSED = 6,
  CITADEL_CHAT_MESSAGE_CANTPAUSE = 7,
  CITADEL_CHAT_MESSAGE_CANTUNPAUSETEAM = 8,
  CITADEL_CHAT_MESSAGE_NOPAUSESLEFT = 9,
  CITADEL_CHAT_MESSAGE_CANTPAUSEYET = 10,
  CITADEL_CHAT_MESSAGE_PREGAME_COUNTDOWN = 11,
  CITADEL_CHAT_MESSAGE_NOTEAMPAUSESLEFT = 12
};
bool ECitadelChatMessage_IsValid(int value);
constexpr ECitadelChatMessage ECitadelChatMessage_MIN = CITADEL_CHAT_MESSAGE_UNPAUSE_COUNTDOWN;
constexpr ECitadelChatMessage ECitadelChatMessage_MAX = CITADEL_CHAT_MESSAGE_NOTEAMPAUSESLEFT;
constexpr int ECitadelChatMessage_ARRAYSIZE = ECitadelChatMessage_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelChatMessage_descriptor();
template<typename T>
inline const std::string& ECitadelChatMessage_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelChatMessage>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelChatMessage_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelChatMessage_descriptor(), enum_t_value);
}
inline bool ECitadelChatMessage_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelChatMessage* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelChatMessage>(
    ECitadelChatMessage_descriptor(), name, value);
}
enum PostProcessingGameStates : int {
  PostProcState_Killed = 0,
  PostProcState_Black = 1,
  PostProcState_Blinded = 2,
  PostProcState_ShivPossessed = 3
};
bool PostProcessingGameStates_IsValid(int value);
constexpr PostProcessingGameStates PostProcessingGameStates_MIN = PostProcState_Killed;
constexpr PostProcessingGameStates PostProcessingGameStates_MAX = PostProcState_ShivPossessed;
constexpr int PostProcessingGameStates_ARRAYSIZE = PostProcessingGameStates_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PostProcessingGameStates_descriptor();
template<typename T>
inline const std::string& PostProcessingGameStates_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PostProcessingGameStates>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PostProcessingGameStates_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PostProcessingGameStates_descriptor(), enum_t_value);
}
inline bool PostProcessingGameStates_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PostProcessingGameStates* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PostProcessingGameStates>(
    PostProcessingGameStates_descriptor(), name, value);
}
// ===================================================================

class CUserMessageEmpty /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CUserMessageEmpty) */ {
 public:
  inline CUserMessageEmpty() : CUserMessageEmpty(nullptr) {}
  ~CUserMessageEmpty() override;
  explicit PROTOBUF_CONSTEXPR CUserMessageEmpty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CUserMessageEmpty(const CUserMessageEmpty& from);
  CUserMessageEmpty(CUserMessageEmpty&& from) noexcept
    : CUserMessageEmpty() {
    *this = ::std::move(from);
  }

  inline CUserMessageEmpty& operator=(const CUserMessageEmpty& from) {
    CopyFrom(from);
    return *this;
  }
  inline CUserMessageEmpty& operator=(CUserMessageEmpty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CUserMessageEmpty& default_instance() {
    return *internal_default_instance();
  }
  static inline const CUserMessageEmpty* internal_default_instance() {
    return reinterpret_cast<const CUserMessageEmpty*>(
               &_CUserMessageEmpty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CUserMessageEmpty& a, CUserMessageEmpty& b) {
    a.Swap(&b);
  }
  inline void Swap(CUserMessageEmpty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CUserMessageEmpty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CUserMessageEmpty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CUserMessageEmpty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CUserMessageEmpty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CUserMessageEmpty& from) {
    CUserMessageEmpty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CUserMessageEmpty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CUserMessageEmpty";
  }
  protected:
  explicit CUserMessageEmpty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmptyFieldNumber = 1,
  };
  // optional uint32 empty = 1;
  bool has_empty() const;
  private:
  bool _internal_has_empty() const;
  public:
  void clear_empty();
  uint32_t empty() const;
  void set_empty(uint32_t value);
  private:
  uint32_t _internal_empty() const;
  void _internal_set_empty(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CUserMessageEmpty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t empty_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMessage_Damage /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMessage_Damage) */ {
 public:
  inline CCitadelUserMessage_Damage() : CCitadelUserMessage_Damage(nullptr) {}
  ~CCitadelUserMessage_Damage() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMessage_Damage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMessage_Damage(const CCitadelUserMessage_Damage& from);
  CCitadelUserMessage_Damage(CCitadelUserMessage_Damage&& from) noexcept
    : CCitadelUserMessage_Damage() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMessage_Damage& operator=(const CCitadelUserMessage_Damage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMessage_Damage& operator=(CCitadelUserMessage_Damage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMessage_Damage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMessage_Damage* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMessage_Damage*>(
               &_CCitadelUserMessage_Damage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CCitadelUserMessage_Damage& a, CCitadelUserMessage_Damage& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMessage_Damage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMessage_Damage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMessage_Damage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMessage_Damage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMessage_Damage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMessage_Damage& from) {
    CCitadelUserMessage_Damage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMessage_Damage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMessage_Damage";
  }
  protected:
  explicit CCitadelUserMessage_Damage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginFieldNumber = 5,
    kDamageFieldNumber = 1,
    kPreDamageFieldNumber = 2,
    kTypeFieldNumber = 3,
    kCitadelTypeFieldNumber = 4,
    kDamageAbsorbedFieldNumber = 10,
    kVictimHealthMaxFieldNumber = 11,
    kFlagsFieldNumber = 13,
    kVictimHealthNewFieldNumber = 12,
    kAbilityIdFieldNumber = 14,
    kAttackerClassFieldNumber = 15,
    kVictimClassFieldNumber = 16,
    kVictimShieldMaxFieldNumber = 17,
    kVictimShieldNewFieldNumber = 18,
    kHitsFieldNumber = 19,
    kHealthLostFieldNumber = 20,
    kEntindexVictimFieldNumber = 6,
    kEntindexInflictorFieldNumber = 7,
    kEntindexAttackerFieldNumber = 8,
    kEntindexAbilityFieldNumber = 9,
  };
  // optional .CMsgVector origin = 5;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  const ::CMsgVector& origin() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_origin();
  ::CMsgVector* mutable_origin();
  void set_allocated_origin(::CMsgVector* origin);
  private:
  const ::CMsgVector& _internal_origin() const;
  ::CMsgVector* _internal_mutable_origin();
  public:
  void unsafe_arena_set_allocated_origin(
      ::CMsgVector* origin);
  ::CMsgVector* unsafe_arena_release_origin();

  // optional int32 damage = 1;
  bool has_damage() const;
  private:
  bool _internal_has_damage() const;
  public:
  void clear_damage();
  int32_t damage() const;
  void set_damage(int32_t value);
  private:
  int32_t _internal_damage() const;
  void _internal_set_damage(int32_t value);
  public:

  // optional int32 pre_damage = 2;
  bool has_pre_damage() const;
  private:
  bool _internal_has_pre_damage() const;
  public:
  void clear_pre_damage();
  int32_t pre_damage() const;
  void set_pre_damage(int32_t value);
  private:
  int32_t _internal_pre_damage() const;
  void _internal_set_pre_damage(int32_t value);
  public:

  // optional int32 type = 3;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  int32_t type() const;
  void set_type(int32_t value);
  private:
  int32_t _internal_type() const;
  void _internal_set_type(int32_t value);
  public:

  // optional int32 citadel_type = 4;
  bool has_citadel_type() const;
  private:
  bool _internal_has_citadel_type() const;
  public:
  void clear_citadel_type();
  int32_t citadel_type() const;
  void set_citadel_type(int32_t value);
  private:
  int32_t _internal_citadel_type() const;
  void _internal_set_citadel_type(int32_t value);
  public:

  // optional int32 damage_absorbed = 10;
  bool has_damage_absorbed() const;
  private:
  bool _internal_has_damage_absorbed() const;
  public:
  void clear_damage_absorbed();
  int32_t damage_absorbed() const;
  void set_damage_absorbed(int32_t value);
  private:
  int32_t _internal_damage_absorbed() const;
  void _internal_set_damage_absorbed(int32_t value);
  public:

  // optional int32 victim_health_max = 11;
  bool has_victim_health_max() const;
  private:
  bool _internal_has_victim_health_max() const;
  public:
  void clear_victim_health_max();
  int32_t victim_health_max() const;
  void set_victim_health_max(int32_t value);
  private:
  int32_t _internal_victim_health_max() const;
  void _internal_set_victim_health_max(int32_t value);
  public:

  // optional uint64 flags = 13;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  uint64_t flags() const;
  void set_flags(uint64_t value);
  private:
  uint64_t _internal_flags() const;
  void _internal_set_flags(uint64_t value);
  public:

  // optional int32 victim_health_new = 12;
  bool has_victim_health_new() const;
  private:
  bool _internal_has_victim_health_new() const;
  public:
  void clear_victim_health_new();
  int32_t victim_health_new() const;
  void set_victim_health_new(int32_t value);
  private:
  int32_t _internal_victim_health_new() const;
  void _internal_set_victim_health_new(int32_t value);
  public:

  // optional uint32 ability_id = 14;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  uint32_t ability_id() const;
  void set_ability_id(uint32_t value);
  private:
  uint32_t _internal_ability_id() const;
  void _internal_set_ability_id(uint32_t value);
  public:

  // optional uint32 attacker_class = 15;
  bool has_attacker_class() const;
  private:
  bool _internal_has_attacker_class() const;
  public:
  void clear_attacker_class();
  uint32_t attacker_class() const;
  void set_attacker_class(uint32_t value);
  private:
  uint32_t _internal_attacker_class() const;
  void _internal_set_attacker_class(uint32_t value);
  public:

  // optional uint32 victim_class = 16;
  bool has_victim_class() const;
  private:
  bool _internal_has_victim_class() const;
  public:
  void clear_victim_class();
  uint32_t victim_class() const;
  void set_victim_class(uint32_t value);
  private:
  uint32_t _internal_victim_class() const;
  void _internal_set_victim_class(uint32_t value);
  public:

  // optional int32 victim_shield_max = 17;
  bool has_victim_shield_max() const;
  private:
  bool _internal_has_victim_shield_max() const;
  public:
  void clear_victim_shield_max();
  int32_t victim_shield_max() const;
  void set_victim_shield_max(int32_t value);
  private:
  int32_t _internal_victim_shield_max() const;
  void _internal_set_victim_shield_max(int32_t value);
  public:

  // optional int32 victim_shield_new = 18;
  bool has_victim_shield_new() const;
  private:
  bool _internal_has_victim_shield_new() const;
  public:
  void clear_victim_shield_new();
  int32_t victim_shield_new() const;
  void set_victim_shield_new(int32_t value);
  private:
  int32_t _internal_victim_shield_new() const;
  void _internal_set_victim_shield_new(int32_t value);
  public:

  // optional int32 hits = 19;
  bool has_hits() const;
  private:
  bool _internal_has_hits() const;
  public:
  void clear_hits();
  int32_t hits() const;
  void set_hits(int32_t value);
  private:
  int32_t _internal_hits() const;
  void _internal_set_hits(int32_t value);
  public:

  // optional int32 health_lost = 20;
  bool has_health_lost() const;
  private:
  bool _internal_has_health_lost() const;
  public:
  void clear_health_lost();
  int32_t health_lost() const;
  void set_health_lost(int32_t value);
  private:
  int32_t _internal_health_lost() const;
  void _internal_set_health_lost(int32_t value);
  public:

  // optional int32 entindex_victim = 6 [default = -1];
  bool has_entindex_victim() const;
  private:
  bool _internal_has_entindex_victim() const;
  public:
  void clear_entindex_victim();
  int32_t entindex_victim() const;
  void set_entindex_victim(int32_t value);
  private:
  int32_t _internal_entindex_victim() const;
  void _internal_set_entindex_victim(int32_t value);
  public:

  // optional int32 entindex_inflictor = 7 [default = -1];
  bool has_entindex_inflictor() const;
  private:
  bool _internal_has_entindex_inflictor() const;
  public:
  void clear_entindex_inflictor();
  int32_t entindex_inflictor() const;
  void set_entindex_inflictor(int32_t value);
  private:
  int32_t _internal_entindex_inflictor() const;
  void _internal_set_entindex_inflictor(int32_t value);
  public:

  // optional int32 entindex_attacker = 8 [default = -1];
  bool has_entindex_attacker() const;
  private:
  bool _internal_has_entindex_attacker() const;
  public:
  void clear_entindex_attacker();
  int32_t entindex_attacker() const;
  void set_entindex_attacker(int32_t value);
  private:
  int32_t _internal_entindex_attacker() const;
  void _internal_set_entindex_attacker(int32_t value);
  public:

  // optional int32 entindex_ability = 9 [default = -1];
  bool has_entindex_ability() const;
  private:
  bool _internal_has_entindex_ability() const;
  public:
  void clear_entindex_ability();
  int32_t entindex_ability() const;
  void set_entindex_ability(int32_t value);
  private:
  int32_t _internal_entindex_ability() const;
  void _internal_set_entindex_ability(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMessage_Damage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgVector* origin_;
    int32_t damage_;
    int32_t pre_damage_;
    int32_t type_;
    int32_t citadel_type_;
    int32_t damage_absorbed_;
    int32_t victim_health_max_;
    uint64_t flags_;
    int32_t victim_health_new_;
    uint32_t ability_id_;
    uint32_t attacker_class_;
    uint32_t victim_class_;
    int32_t victim_shield_max_;
    int32_t victim_shield_new_;
    int32_t hits_;
    int32_t health_lost_;
    int32_t entindex_victim_;
    int32_t entindex_inflictor_;
    int32_t entindex_attacker_;
    int32_t entindex_ability_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class PingCommonData /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PingCommonData) */ {
 public:
  inline PingCommonData() : PingCommonData(nullptr) {}
  ~PingCommonData() override;
  explicit PROTOBUF_CONSTEXPR PingCommonData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PingCommonData(const PingCommonData& from);
  PingCommonData(PingCommonData&& from) noexcept
    : PingCommonData() {
    *this = ::std::move(from);
  }

  inline PingCommonData& operator=(const PingCommonData& from) {
    CopyFrom(from);
    return *this;
  }
  inline PingCommonData& operator=(PingCommonData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PingCommonData& default_instance() {
    return *internal_default_instance();
  }
  static inline const PingCommonData* internal_default_instance() {
    return reinterpret_cast<const PingCommonData*>(
               &_PingCommonData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PingCommonData& a, PingCommonData& b) {
    a.Swap(&b);
  }
  inline void Swap(PingCommonData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PingCommonData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PingCommonData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<PingCommonData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PingCommonData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PingCommonData& from) {
    PingCommonData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(PingCommonData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PingCommonData";
  }
  protected:
  explicit PingCommonData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseChosenFieldNumber = 6,
    kPingLocationFieldNumber = 2,
    kPingMessageIdFieldNumber = 1,
    kSpeechConceptFieldNumber = 5,
    kCooldownTimeFieldNumber = 7,
    kEntityIndexFieldNumber = 3,
    kSenderPlayerSlotFieldNumber = 4,
  };
  // optional string response_chosen = 6;
  bool has_response_chosen() const;
  private:
  bool _internal_has_response_chosen() const;
  public:
  void clear_response_chosen();
  const std::string& response_chosen() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_response_chosen(ArgT0&& arg0, ArgT... args);
  std::string* mutable_response_chosen();
  PROTOBUF_NODISCARD std::string* release_response_chosen();
  void set_allocated_response_chosen(std::string* response_chosen);
  private:
  const std::string& _internal_response_chosen() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_response_chosen(const std::string& value);
  std::string* _internal_mutable_response_chosen();
  public:

  // optional .CMsgVector ping_location = 2;
  bool has_ping_location() const;
  private:
  bool _internal_has_ping_location() const;
  public:
  void clear_ping_location();
  const ::CMsgVector& ping_location() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_ping_location();
  ::CMsgVector* mutable_ping_location();
  void set_allocated_ping_location(::CMsgVector* ping_location);
  private:
  const ::CMsgVector& _internal_ping_location() const;
  ::CMsgVector* _internal_mutable_ping_location();
  public:
  void unsafe_arena_set_allocated_ping_location(
      ::CMsgVector* ping_location);
  ::CMsgVector* unsafe_arena_release_ping_location();

  // optional uint32 ping_message_id = 1;
  bool has_ping_message_id() const;
  private:
  bool _internal_has_ping_message_id() const;
  public:
  void clear_ping_message_id();
  uint32_t ping_message_id() const;
  void set_ping_message_id(uint32_t value);
  private:
  uint32_t _internal_ping_message_id() const;
  void _internal_set_ping_message_id(uint32_t value);
  public:

  // optional int32 speech_concept = 5;
  bool has_speech_concept() const;
  private:
  bool _internal_has_speech_concept() const;
  public:
  void clear_speech_concept();
  int32_t speech_concept() const;
  void set_speech_concept(int32_t value);
  private:
  int32_t _internal_speech_concept() const;
  void _internal_set_speech_concept(int32_t value);
  public:

  // optional float cooldown_time = 7;
  bool has_cooldown_time() const;
  private:
  bool _internal_has_cooldown_time() const;
  public:
  void clear_cooldown_time();
  float cooldown_time() const;
  void set_cooldown_time(float value);
  private:
  float _internal_cooldown_time() const;
  void _internal_set_cooldown_time(float value);
  public:

  // optional uint32 entity_index = 3 [default = 16777215];
  bool has_entity_index() const;
  private:
  bool _internal_has_entity_index() const;
  public:
  void clear_entity_index();
  uint32_t entity_index() const;
  void set_entity_index(uint32_t value);
  private:
  uint32_t _internal_entity_index() const;
  void _internal_set_entity_index(uint32_t value);
  public:

  // optional int32 sender_player_slot = 4 [default = -1];
  bool has_sender_player_slot() const;
  private:
  bool _internal_has_sender_player_slot() const;
  public:
  void clear_sender_player_slot();
  int32_t sender_player_slot() const;
  void set_sender_player_slot(int32_t value);
  private:
  int32_t _internal_sender_player_slot() const;
  void _internal_set_sender_player_slot(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:PingCommonData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr response_chosen_;
    ::CMsgVector* ping_location_;
    uint32_t ping_message_id_;
    int32_t speech_concept_;
    float cooldown_time_;
    uint32_t entity_index_;
    int32_t sender_player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_MapPing /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_MapPing) */ {
 public:
  inline CCitadelUserMsg_MapPing() : CCitadelUserMsg_MapPing(nullptr) {}
  ~CCitadelUserMsg_MapPing() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_MapPing(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_MapPing(const CCitadelUserMsg_MapPing& from);
  CCitadelUserMsg_MapPing(CCitadelUserMsg_MapPing&& from) noexcept
    : CCitadelUserMsg_MapPing() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_MapPing& operator=(const CCitadelUserMsg_MapPing& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_MapPing& operator=(CCitadelUserMsg_MapPing&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_MapPing& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_MapPing* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_MapPing*>(
               &_CCitadelUserMsg_MapPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CCitadelUserMsg_MapPing& a, CCitadelUserMsg_MapPing& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_MapPing* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_MapPing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_MapPing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_MapPing>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_MapPing& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_MapPing& from) {
    CCitadelUserMsg_MapPing::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_MapPing* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_MapPing";
  }
  protected:
  explicit CCitadelUserMsg_MapPing(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPingedHeroNameFieldNumber = 7,
    kPingDataFieldNumber = 1,
    kEventTypeFieldNumber = 2,
    kPingMarkerAndSoundInfoFieldNumber = 3,
    kPingedEntityClassFieldNumber = 5,
    kPingedEnemyEntityFieldNumber = 4,
    kIsMinimapPingFieldNumber = 6,
    kIsBlindPingFieldNumber = 8,
  };
  // optional string pinged_hero_name = 7;
  bool has_pinged_hero_name() const;
  private:
  bool _internal_has_pinged_hero_name() const;
  public:
  void clear_pinged_hero_name();
  const std::string& pinged_hero_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_pinged_hero_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_pinged_hero_name();
  PROTOBUF_NODISCARD std::string* release_pinged_hero_name();
  void set_allocated_pinged_hero_name(std::string* pinged_hero_name);
  private:
  const std::string& _internal_pinged_hero_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pinged_hero_name(const std::string& value);
  std::string* _internal_mutable_pinged_hero_name();
  public:

  // required .PingCommonData ping_data = 1;
  bool has_ping_data() const;
  private:
  bool _internal_has_ping_data() const;
  public:
  void clear_ping_data();
  const ::PingCommonData& ping_data() const;
  PROTOBUF_NODISCARD ::PingCommonData* release_ping_data();
  ::PingCommonData* mutable_ping_data();
  void set_allocated_ping_data(::PingCommonData* ping_data);
  private:
  const ::PingCommonData& _internal_ping_data() const;
  ::PingCommonData* _internal_mutable_ping_data();
  public:
  void unsafe_arena_set_allocated_ping_data(
      ::PingCommonData* ping_data);
  ::PingCommonData* unsafe_arena_release_ping_data();

  // optional uint32 event_type = 2;
  bool has_event_type() const;
  private:
  bool _internal_has_event_type() const;
  public:
  void clear_event_type();
  uint32_t event_type() const;
  void set_event_type(uint32_t value);
  private:
  uint32_t _internal_event_type() const;
  void _internal_set_event_type(uint32_t value);
  public:

  // optional .ChatMsgPingMarkerInfo ping_marker_and_sound_info = 3 [default = k_EPingMarkerInfo_ShowMarkerAndSound];
  bool has_ping_marker_and_sound_info() const;
  private:
  bool _internal_has_ping_marker_and_sound_info() const;
  public:
  void clear_ping_marker_and_sound_info();
  ::ChatMsgPingMarkerInfo ping_marker_and_sound_info() const;
  void set_ping_marker_and_sound_info(::ChatMsgPingMarkerInfo value);
  private:
  ::ChatMsgPingMarkerInfo _internal_ping_marker_and_sound_info() const;
  void _internal_set_ping_marker_and_sound_info(::ChatMsgPingMarkerInfo value);
  public:

  // optional uint32 pinged_entity_class = 5;
  bool has_pinged_entity_class() const;
  private:
  bool _internal_has_pinged_entity_class() const;
  public:
  void clear_pinged_entity_class();
  uint32_t pinged_entity_class() const;
  void set_pinged_entity_class(uint32_t value);
  private:
  uint32_t _internal_pinged_entity_class() const;
  void _internal_set_pinged_entity_class(uint32_t value);
  public:

  // optional bool pinged_enemy_entity = 4;
  bool has_pinged_enemy_entity() const;
  private:
  bool _internal_has_pinged_enemy_entity() const;
  public:
  void clear_pinged_enemy_entity();
  bool pinged_enemy_entity() const;
  void set_pinged_enemy_entity(bool value);
  private:
  bool _internal_pinged_enemy_entity() const;
  void _internal_set_pinged_enemy_entity(bool value);
  public:

  // optional bool is_minimap_ping = 6;
  bool has_is_minimap_ping() const;
  private:
  bool _internal_has_is_minimap_ping() const;
  public:
  void clear_is_minimap_ping();
  bool is_minimap_ping() const;
  void set_is_minimap_ping(bool value);
  private:
  bool _internal_is_minimap_ping() const;
  void _internal_set_is_minimap_ping(bool value);
  public:

  // optional bool is_blind_ping = 8;
  bool has_is_blind_ping() const;
  private:
  bool _internal_has_is_blind_ping() const;
  public:
  void clear_is_blind_ping();
  bool is_blind_ping() const;
  void set_is_blind_ping(bool value);
  private:
  bool _internal_is_blind_ping() const;
  void _internal_set_is_blind_ping(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_MapPing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pinged_hero_name_;
    ::PingCommonData* ping_data_;
    uint32_t event_type_;
    int ping_marker_and_sound_info_;
    uint32_t pinged_entity_class_;
    bool pinged_enemy_entity_;
    bool is_minimap_ping_;
    bool is_blind_ping_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_PingWheel /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_PingWheel) */ {
 public:
  inline CCitadelUserMsg_PingWheel() : CCitadelUserMsg_PingWheel(nullptr) {}
  ~CCitadelUserMsg_PingWheel() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_PingWheel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_PingWheel(const CCitadelUserMsg_PingWheel& from);
  CCitadelUserMsg_PingWheel(CCitadelUserMsg_PingWheel&& from) noexcept
    : CCitadelUserMsg_PingWheel() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_PingWheel& operator=(const CCitadelUserMsg_PingWheel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_PingWheel& operator=(CCitadelUserMsg_PingWheel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_PingWheel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_PingWheel* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_PingWheel*>(
               &_CCitadelUserMsg_PingWheel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CCitadelUserMsg_PingWheel& a, CCitadelUserMsg_PingWheel& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_PingWheel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_PingWheel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_PingWheel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_PingWheel>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_PingWheel& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_PingWheel& from) {
    CCitadelUserMsg_PingWheel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_PingWheel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_PingWheel";
  }
  protected:
  explicit CCitadelUserMsg_PingWheel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPingDataFieldNumber = 1,
    kPingWheelOptionIdFieldNumber = 2,
  };
  // required .PingCommonData ping_data = 1;
  bool has_ping_data() const;
  private:
  bool _internal_has_ping_data() const;
  public:
  void clear_ping_data();
  const ::PingCommonData& ping_data() const;
  PROTOBUF_NODISCARD ::PingCommonData* release_ping_data();
  ::PingCommonData* mutable_ping_data();
  void set_allocated_ping_data(::PingCommonData* ping_data);
  private:
  const ::PingCommonData& _internal_ping_data() const;
  ::PingCommonData* _internal_mutable_ping_data();
  public:
  void unsafe_arena_set_allocated_ping_data(
      ::PingCommonData* ping_data);
  ::PingCommonData* unsafe_arena_release_ping_data();

  // optional uint32 ping_wheel_option_id = 2;
  bool has_ping_wheel_option_id() const;
  private:
  bool _internal_has_ping_wheel_option_id() const;
  public:
  void clear_ping_wheel_option_id();
  uint32_t ping_wheel_option_id() const;
  void set_ping_wheel_option_id(uint32_t value);
  private:
  uint32_t _internal_ping_wheel_option_id() const;
  void _internal_set_ping_wheel_option_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_PingWheel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PingCommonData* ping_data_;
    uint32_t ping_wheel_option_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_AbilityPing /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_AbilityPing) */ {
 public:
  inline CCitadelUserMsg_AbilityPing() : CCitadelUserMsg_AbilityPing(nullptr) {}
  ~CCitadelUserMsg_AbilityPing() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_AbilityPing(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_AbilityPing(const CCitadelUserMsg_AbilityPing& from);
  CCitadelUserMsg_AbilityPing(CCitadelUserMsg_AbilityPing&& from) noexcept
    : CCitadelUserMsg_AbilityPing() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_AbilityPing& operator=(const CCitadelUserMsg_AbilityPing& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_AbilityPing& operator=(CCitadelUserMsg_AbilityPing&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_AbilityPing& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_AbilityPing* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_AbilityPing*>(
               &_CCitadelUserMsg_AbilityPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CCitadelUserMsg_AbilityPing& a, CCitadelUserMsg_AbilityPing& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_AbilityPing* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_AbilityPing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_AbilityPing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_AbilityPing>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_AbilityPing& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_AbilityPing& from) {
    CCitadelUserMsg_AbilityPing::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_AbilityPing* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_AbilityPing";
  }
  protected:
  explicit CCitadelUserMsg_AbilityPing(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPingDataFieldNumber = 1,
    kAbilityIdFieldNumber = 2,
    kAbilityCooldownFieldNumber = 3,
    kPingMarkerAndSoundInfoFieldNumber = 4,
  };
  // optional .PingCommonData ping_data = 1;
  bool has_ping_data() const;
  private:
  bool _internal_has_ping_data() const;
  public:
  void clear_ping_data();
  const ::PingCommonData& ping_data() const;
  PROTOBUF_NODISCARD ::PingCommonData* release_ping_data();
  ::PingCommonData* mutable_ping_data();
  void set_allocated_ping_data(::PingCommonData* ping_data);
  private:
  const ::PingCommonData& _internal_ping_data() const;
  ::PingCommonData* _internal_mutable_ping_data();
  public:
  void unsafe_arena_set_allocated_ping_data(
      ::PingCommonData* ping_data);
  ::PingCommonData* unsafe_arena_release_ping_data();

  // optional uint32 ability_id = 2;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  uint32_t ability_id() const;
  void set_ability_id(uint32_t value);
  private:
  uint32_t _internal_ability_id() const;
  void _internal_set_ability_id(uint32_t value);
  public:

  // optional float ability_cooldown = 3;
  bool has_ability_cooldown() const;
  private:
  bool _internal_has_ability_cooldown() const;
  public:
  void clear_ability_cooldown();
  float ability_cooldown() const;
  void set_ability_cooldown(float value);
  private:
  float _internal_ability_cooldown() const;
  void _internal_set_ability_cooldown(float value);
  public:

  // optional .ChatMsgPingMarkerInfo ping_marker_and_sound_info = 4 [default = k_EPingMarkerInfo_ShowMarkerAndSound];
  bool has_ping_marker_and_sound_info() const;
  private:
  bool _internal_has_ping_marker_and_sound_info() const;
  public:
  void clear_ping_marker_and_sound_info();
  ::ChatMsgPingMarkerInfo ping_marker_and_sound_info() const;
  void set_ping_marker_and_sound_info(::ChatMsgPingMarkerInfo value);
  private:
  ::ChatMsgPingMarkerInfo _internal_ping_marker_and_sound_info() const;
  void _internal_set_ping_marker_and_sound_info(::ChatMsgPingMarkerInfo value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_AbilityPing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PingCommonData* ping_data_;
    uint32_t ability_id_;
    float ability_cooldown_;
    int ping_marker_and_sound_info_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_QuickResponse /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_QuickResponse) */ {
 public:
  inline CCitadelUserMsg_QuickResponse() : CCitadelUserMsg_QuickResponse(nullptr) {}
  ~CCitadelUserMsg_QuickResponse() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_QuickResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_QuickResponse(const CCitadelUserMsg_QuickResponse& from);
  CCitadelUserMsg_QuickResponse(CCitadelUserMsg_QuickResponse&& from) noexcept
    : CCitadelUserMsg_QuickResponse() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_QuickResponse& operator=(const CCitadelUserMsg_QuickResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_QuickResponse& operator=(CCitadelUserMsg_QuickResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_QuickResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_QuickResponse* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_QuickResponse*>(
               &_CCitadelUserMsg_QuickResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CCitadelUserMsg_QuickResponse& a, CCitadelUserMsg_QuickResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_QuickResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_QuickResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_QuickResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_QuickResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_QuickResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_QuickResponse& from) {
    CCitadelUserMsg_QuickResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_QuickResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_QuickResponse";
  }
  protected:
  explicit CCitadelUserMsg_QuickResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPingDataFieldNumber = 1,
    kRespondingToPingMessageIdFieldNumber = 2,
    kLaneColorFieldNumber = 4,
    kRespondingToPlayerSlotFieldNumber = 3,
  };
  // required .PingCommonData ping_data = 1;
  bool has_ping_data() const;
  private:
  bool _internal_has_ping_data() const;
  public:
  void clear_ping_data();
  const ::PingCommonData& ping_data() const;
  PROTOBUF_NODISCARD ::PingCommonData* release_ping_data();
  ::PingCommonData* mutable_ping_data();
  void set_allocated_ping_data(::PingCommonData* ping_data);
  private:
  const ::PingCommonData& _internal_ping_data() const;
  ::PingCommonData* _internal_mutable_ping_data();
  public:
  void unsafe_arena_set_allocated_ping_data(
      ::PingCommonData* ping_data);
  ::PingCommonData* unsafe_arena_release_ping_data();

  // optional uint32 responding_to_ping_message_id = 2;
  bool has_responding_to_ping_message_id() const;
  private:
  bool _internal_has_responding_to_ping_message_id() const;
  public:
  void clear_responding_to_ping_message_id();
  uint32_t responding_to_ping_message_id() const;
  void set_responding_to_ping_message_id(uint32_t value);
  private:
  uint32_t _internal_responding_to_ping_message_id() const;
  void _internal_set_responding_to_ping_message_id(uint32_t value);
  public:

  // optional .CMsgLaneColor lane_color = 4 [default = k_ELaneColor_Invalid];
  bool has_lane_color() const;
  private:
  bool _internal_has_lane_color() const;
  public:
  void clear_lane_color();
  ::CMsgLaneColor lane_color() const;
  void set_lane_color(::CMsgLaneColor value);
  private:
  ::CMsgLaneColor _internal_lane_color() const;
  void _internal_set_lane_color(::CMsgLaneColor value);
  public:

  // optional int32 responding_to_player_slot = 3 [default = -1];
  bool has_responding_to_player_slot() const;
  private:
  bool _internal_has_responding_to_player_slot() const;
  public:
  void clear_responding_to_player_slot();
  int32_t responding_to_player_slot() const;
  void set_responding_to_player_slot(int32_t value);
  private:
  int32_t _internal_responding_to_player_slot() const;
  void _internal_set_responding_to_player_slot(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_QuickResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PingCommonData* ping_data_;
    uint32_t responding_to_ping_message_id_;
    int lane_color_;
    int32_t responding_to_player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_MapLine /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_MapLine) */ {
 public:
  inline CCitadelUserMsg_MapLine() : CCitadelUserMsg_MapLine(nullptr) {}
  ~CCitadelUserMsg_MapLine() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_MapLine(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_MapLine(const CCitadelUserMsg_MapLine& from);
  CCitadelUserMsg_MapLine(CCitadelUserMsg_MapLine&& from) noexcept
    : CCitadelUserMsg_MapLine() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_MapLine& operator=(const CCitadelUserMsg_MapLine& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_MapLine& operator=(CCitadelUserMsg_MapLine&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_MapLine& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_MapLine* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_MapLine*>(
               &_CCitadelUserMsg_MapLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CCitadelUserMsg_MapLine& a, CCitadelUserMsg_MapLine& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_MapLine* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_MapLine* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_MapLine* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_MapLine>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_MapLine& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_MapLine& from) {
    CCitadelUserMsg_MapLine::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_MapLine* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_MapLine";
  }
  protected:
  explicit CCitadelUserMsg_MapLine(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaplineFieldNumber = 2,
    kSenderPlayerSlotFieldNumber = 1,
  };
  // optional .CMsgMapLine mapline = 2;
  bool has_mapline() const;
  private:
  bool _internal_has_mapline() const;
  public:
  void clear_mapline();
  const ::CMsgMapLine& mapline() const;
  PROTOBUF_NODISCARD ::CMsgMapLine* release_mapline();
  ::CMsgMapLine* mutable_mapline();
  void set_allocated_mapline(::CMsgMapLine* mapline);
  private:
  const ::CMsgMapLine& _internal_mapline() const;
  ::CMsgMapLine* _internal_mutable_mapline();
  public:
  void unsafe_arena_set_allocated_mapline(
      ::CMsgMapLine* mapline);
  ::CMsgMapLine* unsafe_arena_release_mapline();

  // optional int32 sender_player_slot = 1 [default = -1];
  bool has_sender_player_slot() const;
  private:
  bool _internal_has_sender_player_slot() const;
  public:
  void clear_sender_player_slot();
  int32_t sender_player_slot() const;
  void set_sender_player_slot(int32_t value);
  private:
  int32_t _internal_sender_player_slot() const;
  void _internal_set_sender_player_slot(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_MapLine)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgMapLine* mapline_;
    int32_t sender_player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_TeamRewards /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_TeamRewards) */ {
 public:
  inline CCitadelUserMsg_TeamRewards() : CCitadelUserMsg_TeamRewards(nullptr) {}
  ~CCitadelUserMsg_TeamRewards() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_TeamRewards(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_TeamRewards(const CCitadelUserMsg_TeamRewards& from);
  CCitadelUserMsg_TeamRewards(CCitadelUserMsg_TeamRewards&& from) noexcept
    : CCitadelUserMsg_TeamRewards() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_TeamRewards& operator=(const CCitadelUserMsg_TeamRewards& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_TeamRewards& operator=(CCitadelUserMsg_TeamRewards&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_TeamRewards& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_TeamRewards* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_TeamRewards*>(
               &_CCitadelUserMsg_TeamRewards_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CCitadelUserMsg_TeamRewards& a, CCitadelUserMsg_TeamRewards& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_TeamRewards* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_TeamRewards* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_TeamRewards* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_TeamRewards>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_TeamRewards& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_TeamRewards& from) {
    CCitadelUserMsg_TeamRewards::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_TeamRewards* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_TeamRewards";
  }
  protected:
  explicit CCitadelUserMsg_TeamRewards(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpFieldNumber = 1,
    kGoldFieldNumber = 2,
    kWinnerFieldNumber = 3,
  };
  // optional uint32 xp = 1;
  bool has_xp() const;
  private:
  bool _internal_has_xp() const;
  public:
  void clear_xp();
  uint32_t xp() const;
  void set_xp(uint32_t value);
  private:
  uint32_t _internal_xp() const;
  void _internal_set_xp(uint32_t value);
  public:

  // optional uint32 gold = 2;
  bool has_gold() const;
  private:
  bool _internal_has_gold() const;
  public:
  void clear_gold();
  uint32_t gold() const;
  void set_gold(uint32_t value);
  private:
  uint32_t _internal_gold() const;
  void _internal_set_gold(uint32_t value);
  public:

  // optional bool winner = 3;
  bool has_winner() const;
  private:
  bool _internal_has_winner() const;
  public:
  void clear_winner();
  bool winner() const;
  void set_winner(bool value);
  private:
  bool _internal_winner() const;
  void _internal_set_winner(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_TeamRewards)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t xp_;
    uint32_t gold_;
    bool winner_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_TriggerDamageFlash /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_TriggerDamageFlash) */ {
 public:
  inline CCitadelUserMsg_TriggerDamageFlash() : CCitadelUserMsg_TriggerDamageFlash(nullptr) {}
  ~CCitadelUserMsg_TriggerDamageFlash() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_TriggerDamageFlash(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_TriggerDamageFlash(const CCitadelUserMsg_TriggerDamageFlash& from);
  CCitadelUserMsg_TriggerDamageFlash(CCitadelUserMsg_TriggerDamageFlash&& from) noexcept
    : CCitadelUserMsg_TriggerDamageFlash() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_TriggerDamageFlash& operator=(const CCitadelUserMsg_TriggerDamageFlash& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_TriggerDamageFlash& operator=(CCitadelUserMsg_TriggerDamageFlash&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_TriggerDamageFlash& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_TriggerDamageFlash* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_TriggerDamageFlash*>(
               &_CCitadelUserMsg_TriggerDamageFlash_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CCitadelUserMsg_TriggerDamageFlash& a, CCitadelUserMsg_TriggerDamageFlash& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_TriggerDamageFlash* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_TriggerDamageFlash* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_TriggerDamageFlash* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_TriggerDamageFlash>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_TriggerDamageFlash& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_TriggerDamageFlash& from) {
    CCitadelUserMsg_TriggerDamageFlash::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_TriggerDamageFlash* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_TriggerDamageFlash";
  }
  protected:
  explicit CCitadelUserMsg_TriggerDamageFlash(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlashPositionFieldNumber = 7,
    kEntindexFlashHitgroupFieldNumber = 3,
    kFlashValueFieldNumber = 4,
    kFlashTypeFieldNumber = 5,
    kFlashFlagsFieldNumber = 6,
    kEntindexFlashVictimFieldNumber = 1,
    kEntindexFlashAttackerFieldNumber = 2,
  };
  // optional .CMsgVector flash_position = 7;
  bool has_flash_position() const;
  private:
  bool _internal_has_flash_position() const;
  public:
  void clear_flash_position();
  const ::CMsgVector& flash_position() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_flash_position();
  ::CMsgVector* mutable_flash_position();
  void set_allocated_flash_position(::CMsgVector* flash_position);
  private:
  const ::CMsgVector& _internal_flash_position() const;
  ::CMsgVector* _internal_mutable_flash_position();
  public:
  void unsafe_arena_set_allocated_flash_position(
      ::CMsgVector* flash_position);
  ::CMsgVector* unsafe_arena_release_flash_position();

  // optional int32 entindex_flash_hitgroup = 3;
  bool has_entindex_flash_hitgroup() const;
  private:
  bool _internal_has_entindex_flash_hitgroup() const;
  public:
  void clear_entindex_flash_hitgroup();
  int32_t entindex_flash_hitgroup() const;
  void set_entindex_flash_hitgroup(int32_t value);
  private:
  int32_t _internal_entindex_flash_hitgroup() const;
  void _internal_set_entindex_flash_hitgroup(int32_t value);
  public:

  // optional uint32 flash_value = 4;
  bool has_flash_value() const;
  private:
  bool _internal_has_flash_value() const;
  public:
  void clear_flash_value();
  uint32_t flash_value() const;
  void set_flash_value(uint32_t value);
  private:
  uint32_t _internal_flash_value() const;
  void _internal_set_flash_value(uint32_t value);
  public:

  // optional uint32 flash_type = 5;
  bool has_flash_type() const;
  private:
  bool _internal_has_flash_type() const;
  public:
  void clear_flash_type();
  uint32_t flash_type() const;
  void set_flash_type(uint32_t value);
  private:
  uint32_t _internal_flash_type() const;
  void _internal_set_flash_type(uint32_t value);
  public:

  // optional uint32 flash_flags = 6;
  bool has_flash_flags() const;
  private:
  bool _internal_has_flash_flags() const;
  public:
  void clear_flash_flags();
  uint32_t flash_flags() const;
  void set_flash_flags(uint32_t value);
  private:
  uint32_t _internal_flash_flags() const;
  void _internal_set_flash_flags(uint32_t value);
  public:

  // optional int32 entindex_flash_victim = 1 [default = -1];
  bool has_entindex_flash_victim() const;
  private:
  bool _internal_has_entindex_flash_victim() const;
  public:
  void clear_entindex_flash_victim();
  int32_t entindex_flash_victim() const;
  void set_entindex_flash_victim(int32_t value);
  private:
  int32_t _internal_entindex_flash_victim() const;
  void _internal_set_entindex_flash_victim(int32_t value);
  public:

  // optional int32 entindex_flash_attacker = 2 [default = -1];
  bool has_entindex_flash_attacker() const;
  private:
  bool _internal_has_entindex_flash_attacker() const;
  public:
  void clear_entindex_flash_attacker();
  int32_t entindex_flash_attacker() const;
  void set_entindex_flash_attacker(int32_t value);
  private:
  int32_t _internal_entindex_flash_attacker() const;
  void _internal_set_entindex_flash_attacker(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_TriggerDamageFlash)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgVector* flash_position_;
    int32_t entindex_flash_hitgroup_;
    uint32_t flash_value_;
    uint32_t flash_type_;
    uint32_t flash_flags_;
    int32_t entindex_flash_victim_;
    int32_t entindex_flash_attacker_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_AbilitiesChanged /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_AbilitiesChanged) */ {
 public:
  inline CCitadelUserMsg_AbilitiesChanged() : CCitadelUserMsg_AbilitiesChanged(nullptr) {}
  ~CCitadelUserMsg_AbilitiesChanged() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_AbilitiesChanged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_AbilitiesChanged(const CCitadelUserMsg_AbilitiesChanged& from);
  CCitadelUserMsg_AbilitiesChanged(CCitadelUserMsg_AbilitiesChanged&& from) noexcept
    : CCitadelUserMsg_AbilitiesChanged() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_AbilitiesChanged& operator=(const CCitadelUserMsg_AbilitiesChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_AbilitiesChanged& operator=(CCitadelUserMsg_AbilitiesChanged&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_AbilitiesChanged& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_AbilitiesChanged* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_AbilitiesChanged*>(
               &_CCitadelUserMsg_AbilitiesChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CCitadelUserMsg_AbilitiesChanged& a, CCitadelUserMsg_AbilitiesChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_AbilitiesChanged* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_AbilitiesChanged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_AbilitiesChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_AbilitiesChanged>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_AbilitiesChanged& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_AbilitiesChanged& from) {
    CCitadelUserMsg_AbilitiesChanged::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_AbilitiesChanged* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_AbilitiesChanged";
  }
  protected:
  explicit CCitadelUserMsg_AbilitiesChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CCitadelUserMsg_AbilitiesChanged_Change Change;
  static constexpr Change EInvalid =
    CCitadelUserMsg_AbilitiesChanged_Change_EInvalid;
  static constexpr Change EPurchased =
    CCitadelUserMsg_AbilitiesChanged_Change_EPurchased;
  static constexpr Change EUpgraded =
    CCitadelUserMsg_AbilitiesChanged_Change_EUpgraded;
  static constexpr Change ESold =
    CCitadelUserMsg_AbilitiesChanged_Change_ESold;
  static constexpr Change ESwappedActivatedAbility =
    CCitadelUserMsg_AbilitiesChanged_Change_ESwappedActivatedAbility;
  static inline bool Change_IsValid(int value) {
    return CCitadelUserMsg_AbilitiesChanged_Change_IsValid(value);
  }
  static constexpr Change Change_MIN =
    CCitadelUserMsg_AbilitiesChanged_Change_Change_MIN;
  static constexpr Change Change_MAX =
    CCitadelUserMsg_AbilitiesChanged_Change_Change_MAX;
  static constexpr int Change_ARRAYSIZE =
    CCitadelUserMsg_AbilitiesChanged_Change_Change_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Change_descriptor() {
    return CCitadelUserMsg_AbilitiesChanged_Change_descriptor();
  }
  template<typename T>
  static inline const std::string& Change_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Change>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Change_Name.");
    return CCitadelUserMsg_AbilitiesChanged_Change_Name(enum_t_value);
  }
  static inline bool Change_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Change* value) {
    return CCitadelUserMsg_AbilitiesChanged_Change_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kAbilityIdFieldNumber = 3,
    kChangeFieldNumber = 4,
    kEntindexPurchaserFieldNumber = 1,
    kEntindexAbilityFieldNumber = 2,
  };
  // optional uint32 ability_id = 3;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  uint32_t ability_id() const;
  void set_ability_id(uint32_t value);
  private:
  uint32_t _internal_ability_id() const;
  void _internal_set_ability_id(uint32_t value);
  public:

  // optional .CCitadelUserMsg_AbilitiesChanged.Change change = 4 [default = EInvalid];
  bool has_change() const;
  private:
  bool _internal_has_change() const;
  public:
  void clear_change();
  ::CCitadelUserMsg_AbilitiesChanged_Change change() const;
  void set_change(::CCitadelUserMsg_AbilitiesChanged_Change value);
  private:
  ::CCitadelUserMsg_AbilitiesChanged_Change _internal_change() const;
  void _internal_set_change(::CCitadelUserMsg_AbilitiesChanged_Change value);
  public:

  // optional int32 entindex_purchaser = 1 [default = -1];
  bool has_entindex_purchaser() const;
  private:
  bool _internal_has_entindex_purchaser() const;
  public:
  void clear_entindex_purchaser();
  int32_t entindex_purchaser() const;
  void set_entindex_purchaser(int32_t value);
  private:
  int32_t _internal_entindex_purchaser() const;
  void _internal_set_entindex_purchaser(int32_t value);
  public:

  // optional int32 entindex_ability = 2 [default = -1];
  bool has_entindex_ability() const;
  private:
  bool _internal_has_entindex_ability() const;
  public:
  void clear_entindex_ability();
  int32_t entindex_ability() const;
  void set_entindex_ability(int32_t value);
  private:
  int32_t _internal_entindex_ability() const;
  void _internal_set_entindex_ability(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_AbilitiesChanged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t ability_id_;
    int change_;
    int32_t entindex_purchaser_;
    int32_t entindex_ability_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_AbilityInterrupted /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_AbilityInterrupted) */ {
 public:
  inline CCitadelUserMsg_AbilityInterrupted() : CCitadelUserMsg_AbilityInterrupted(nullptr) {}
  ~CCitadelUserMsg_AbilityInterrupted() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_AbilityInterrupted(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_AbilityInterrupted(const CCitadelUserMsg_AbilityInterrupted& from);
  CCitadelUserMsg_AbilityInterrupted(CCitadelUserMsg_AbilityInterrupted&& from) noexcept
    : CCitadelUserMsg_AbilityInterrupted() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_AbilityInterrupted& operator=(const CCitadelUserMsg_AbilityInterrupted& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_AbilityInterrupted& operator=(CCitadelUserMsg_AbilityInterrupted&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_AbilityInterrupted& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_AbilityInterrupted* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_AbilityInterrupted*>(
               &_CCitadelUserMsg_AbilityInterrupted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CCitadelUserMsg_AbilityInterrupted& a, CCitadelUserMsg_AbilityInterrupted& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_AbilityInterrupted* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_AbilityInterrupted* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_AbilityInterrupted* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_AbilityInterrupted>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_AbilityInterrupted& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_AbilityInterrupted& from) {
    CCitadelUserMsg_AbilityInterrupted::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_AbilityInterrupted* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_AbilityInterrupted";
  }
  protected:
  explicit CCitadelUserMsg_AbilityInterrupted(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbilityIdInterruptedFieldNumber = 3,
    kAbilityIdInterrupterFieldNumber = 4,
    kHeroIdInterrupterFieldNumber = 5,
    kEntindexVictimFieldNumber = 1,
    kEntindexInterrupterFieldNumber = 2,
  };
  // optional uint32 ability_id_interrupted = 3;
  bool has_ability_id_interrupted() const;
  private:
  bool _internal_has_ability_id_interrupted() const;
  public:
  void clear_ability_id_interrupted();
  uint32_t ability_id_interrupted() const;
  void set_ability_id_interrupted(uint32_t value);
  private:
  uint32_t _internal_ability_id_interrupted() const;
  void _internal_set_ability_id_interrupted(uint32_t value);
  public:

  // optional uint32 ability_id_interrupter = 4;
  bool has_ability_id_interrupter() const;
  private:
  bool _internal_has_ability_id_interrupter() const;
  public:
  void clear_ability_id_interrupter();
  uint32_t ability_id_interrupter() const;
  void set_ability_id_interrupter(uint32_t value);
  private:
  uint32_t _internal_ability_id_interrupter() const;
  void _internal_set_ability_id_interrupter(uint32_t value);
  public:

  // optional uint32 hero_id_interrupter = 5;
  bool has_hero_id_interrupter() const;
  private:
  bool _internal_has_hero_id_interrupter() const;
  public:
  void clear_hero_id_interrupter();
  uint32_t hero_id_interrupter() const;
  void set_hero_id_interrupter(uint32_t value);
  private:
  uint32_t _internal_hero_id_interrupter() const;
  void _internal_set_hero_id_interrupter(uint32_t value);
  public:

  // optional int32 entindex_victim = 1 [default = -1];
  bool has_entindex_victim() const;
  private:
  bool _internal_has_entindex_victim() const;
  public:
  void clear_entindex_victim();
  int32_t entindex_victim() const;
  void set_entindex_victim(int32_t value);
  private:
  int32_t _internal_entindex_victim() const;
  void _internal_set_entindex_victim(int32_t value);
  public:

  // optional int32 entindex_interrupter = 2 [default = -1];
  bool has_entindex_interrupter() const;
  private:
  bool _internal_has_entindex_interrupter() const;
  public:
  void clear_entindex_interrupter();
  int32_t entindex_interrupter() const;
  void set_entindex_interrupter(int32_t value);
  private:
  int32_t _internal_entindex_interrupter() const;
  void _internal_set_entindex_interrupter(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_AbilityInterrupted)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t ability_id_interrupted_;
    uint32_t ability_id_interrupter_;
    uint32_t hero_id_interrupter_;
    int32_t entindex_victim_;
    int32_t entindex_interrupter_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_AbilityLateFailure /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_AbilityLateFailure) */ {
 public:
  inline CCitadelUserMsg_AbilityLateFailure() : CCitadelUserMsg_AbilityLateFailure(nullptr) {}
  ~CCitadelUserMsg_AbilityLateFailure() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_AbilityLateFailure(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_AbilityLateFailure(const CCitadelUserMsg_AbilityLateFailure& from);
  CCitadelUserMsg_AbilityLateFailure(CCitadelUserMsg_AbilityLateFailure&& from) noexcept
    : CCitadelUserMsg_AbilityLateFailure() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_AbilityLateFailure& operator=(const CCitadelUserMsg_AbilityLateFailure& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_AbilityLateFailure& operator=(CCitadelUserMsg_AbilityLateFailure&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_AbilityLateFailure& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_AbilityLateFailure* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_AbilityLateFailure*>(
               &_CCitadelUserMsg_AbilityLateFailure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CCitadelUserMsg_AbilityLateFailure& a, CCitadelUserMsg_AbilityLateFailure& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_AbilityLateFailure* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_AbilityLateFailure* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_AbilityLateFailure* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_AbilityLateFailure>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_AbilityLateFailure& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_AbilityLateFailure& from) {
    CCitadelUserMsg_AbilityLateFailure::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_AbilityLateFailure* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_AbilityLateFailure";
  }
  protected:
  explicit CCitadelUserMsg_AbilityLateFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFailureTypeFieldNumber = 3,
    kEntindexCasterFieldNumber = 1,
    kEntindexAbilityFieldNumber = 2,
  };
  // optional uint32 failure_type = 3;
  bool has_failure_type() const;
  private:
  bool _internal_has_failure_type() const;
  public:
  void clear_failure_type();
  uint32_t failure_type() const;
  void set_failure_type(uint32_t value);
  private:
  uint32_t _internal_failure_type() const;
  void _internal_set_failure_type(uint32_t value);
  public:

  // optional int32 entindex_caster = 1 [default = -1];
  bool has_entindex_caster() const;
  private:
  bool _internal_has_entindex_caster() const;
  public:
  void clear_entindex_caster();
  int32_t entindex_caster() const;
  void set_entindex_caster(int32_t value);
  private:
  int32_t _internal_entindex_caster() const;
  void _internal_set_entindex_caster(int32_t value);
  public:

  // optional int32 entindex_ability = 2 [default = -1];
  bool has_entindex_ability() const;
  private:
  bool _internal_has_entindex_ability() const;
  public:
  void clear_entindex_ability();
  int32_t entindex_ability() const;
  void set_entindex_ability(int32_t value);
  private:
  int32_t _internal_entindex_ability() const;
  void _internal_set_entindex_ability(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_AbilityLateFailure)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t failure_type_;
    int32_t entindex_caster_;
    int32_t entindex_ability_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_RecentDamageSummary_DamageRecord /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_RecentDamageSummary.DamageRecord) */ {
 public:
  inline CCitadelUserMsg_RecentDamageSummary_DamageRecord() : CCitadelUserMsg_RecentDamageSummary_DamageRecord(nullptr) {}
  ~CCitadelUserMsg_RecentDamageSummary_DamageRecord() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_RecentDamageSummary_DamageRecord(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_RecentDamageSummary_DamageRecord(const CCitadelUserMsg_RecentDamageSummary_DamageRecord& from);
  CCitadelUserMsg_RecentDamageSummary_DamageRecord(CCitadelUserMsg_RecentDamageSummary_DamageRecord&& from) noexcept
    : CCitadelUserMsg_RecentDamageSummary_DamageRecord() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_RecentDamageSummary_DamageRecord& operator=(const CCitadelUserMsg_RecentDamageSummary_DamageRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_RecentDamageSummary_DamageRecord& operator=(CCitadelUserMsg_RecentDamageSummary_DamageRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_RecentDamageSummary_DamageRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_RecentDamageSummary_DamageRecord* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_RecentDamageSummary_DamageRecord*>(
               &_CCitadelUserMsg_RecentDamageSummary_DamageRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CCitadelUserMsg_RecentDamageSummary_DamageRecord& a, CCitadelUserMsg_RecentDamageSummary_DamageRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_RecentDamageSummary_DamageRecord* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_RecentDamageSummary_DamageRecord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_RecentDamageSummary_DamageRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_RecentDamageSummary_DamageRecord>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_RecentDamageSummary_DamageRecord& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_RecentDamageSummary_DamageRecord& from) {
    CCitadelUserMsg_RecentDamageSummary_DamageRecord::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_RecentDamageSummary_DamageRecord* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_RecentDamageSummary.DamageRecord";
  }
  protected:
  explicit CCitadelUserMsg_RecentDamageSummary_DamageRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDamageFieldNumber = 1,
    kHitsFieldNumber = 2,
    kDamageTypeFieldNumber = 3,
    kHeroIdFieldNumber = 4,
    kAbilityIdFieldNumber = 5,
    kAttackerClassFieldNumber = 6,
    kDamageAbsorbedFieldNumber = 7,
    kIsKillingBlowFieldNumber = 8,
    kVictimHeroIdFieldNumber = 9,
  };
  // optional int32 damage = 1;
  bool has_damage() const;
  private:
  bool _internal_has_damage() const;
  public:
  void clear_damage();
  int32_t damage() const;
  void set_damage(int32_t value);
  private:
  int32_t _internal_damage() const;
  void _internal_set_damage(int32_t value);
  public:

  // optional int32 hits = 2;
  bool has_hits() const;
  private:
  bool _internal_has_hits() const;
  public:
  void clear_hits();
  int32_t hits() const;
  void set_hits(int32_t value);
  private:
  int32_t _internal_hits() const;
  void _internal_set_hits(int32_t value);
  public:

  // optional uint32 damage_type = 3;
  bool has_damage_type() const;
  private:
  bool _internal_has_damage_type() const;
  public:
  void clear_damage_type();
  uint32_t damage_type() const;
  void set_damage_type(uint32_t value);
  private:
  uint32_t _internal_damage_type() const;
  void _internal_set_damage_type(uint32_t value);
  public:

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional uint32 ability_id = 5;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  uint32_t ability_id() const;
  void set_ability_id(uint32_t value);
  private:
  uint32_t _internal_ability_id() const;
  void _internal_set_ability_id(uint32_t value);
  public:

  // optional uint32 attacker_class = 6;
  bool has_attacker_class() const;
  private:
  bool _internal_has_attacker_class() const;
  public:
  void clear_attacker_class();
  uint32_t attacker_class() const;
  void set_attacker_class(uint32_t value);
  private:
  uint32_t _internal_attacker_class() const;
  void _internal_set_attacker_class(uint32_t value);
  public:

  // optional int32 damage_absorbed = 7;
  bool has_damage_absorbed() const;
  private:
  bool _internal_has_damage_absorbed() const;
  public:
  void clear_damage_absorbed();
  int32_t damage_absorbed() const;
  void set_damage_absorbed(int32_t value);
  private:
  int32_t _internal_damage_absorbed() const;
  void _internal_set_damage_absorbed(int32_t value);
  public:

  // optional bool is_killing_blow = 8;
  bool has_is_killing_blow() const;
  private:
  bool _internal_has_is_killing_blow() const;
  public:
  void clear_is_killing_blow();
  bool is_killing_blow() const;
  void set_is_killing_blow(bool value);
  private:
  bool _internal_is_killing_blow() const;
  void _internal_set_is_killing_blow(bool value);
  public:

  // optional uint32 victim_hero_id = 9;
  bool has_victim_hero_id() const;
  private:
  bool _internal_has_victim_hero_id() const;
  public:
  void clear_victim_hero_id();
  uint32_t victim_hero_id() const;
  void set_victim_hero_id(uint32_t value);
  private:
  uint32_t _internal_victim_hero_id() const;
  void _internal_set_victim_hero_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_RecentDamageSummary.DamageRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t damage_;
    int32_t hits_;
    uint32_t damage_type_;
    uint32_t hero_id_;
    uint32_t ability_id_;
    uint32_t attacker_class_;
    int32_t damage_absorbed_;
    bool is_killing_blow_;
    uint32_t victim_hero_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_RecentDamageSummary_ModifierRecord /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_RecentDamageSummary.ModifierRecord) */ {
 public:
  inline CCitadelUserMsg_RecentDamageSummary_ModifierRecord() : CCitadelUserMsg_RecentDamageSummary_ModifierRecord(nullptr) {}
  ~CCitadelUserMsg_RecentDamageSummary_ModifierRecord() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_RecentDamageSummary_ModifierRecord(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_RecentDamageSummary_ModifierRecord(const CCitadelUserMsg_RecentDamageSummary_ModifierRecord& from);
  CCitadelUserMsg_RecentDamageSummary_ModifierRecord(CCitadelUserMsg_RecentDamageSummary_ModifierRecord&& from) noexcept
    : CCitadelUserMsg_RecentDamageSummary_ModifierRecord() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_RecentDamageSummary_ModifierRecord& operator=(const CCitadelUserMsg_RecentDamageSummary_ModifierRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_RecentDamageSummary_ModifierRecord& operator=(CCitadelUserMsg_RecentDamageSummary_ModifierRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_RecentDamageSummary_ModifierRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_RecentDamageSummary_ModifierRecord* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_RecentDamageSummary_ModifierRecord*>(
               &_CCitadelUserMsg_RecentDamageSummary_ModifierRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CCitadelUserMsg_RecentDamageSummary_ModifierRecord& a, CCitadelUserMsg_RecentDamageSummary_ModifierRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_RecentDamageSummary_ModifierRecord* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_RecentDamageSummary_ModifierRecord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_RecentDamageSummary_ModifierRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_RecentDamageSummary_ModifierRecord>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_RecentDamageSummary_ModifierRecord& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_RecentDamageSummary_ModifierRecord& from) {
    CCitadelUserMsg_RecentDamageSummary_ModifierRecord::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_RecentDamageSummary_ModifierRecord* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_RecentDamageSummary.ModifierRecord";
  }
  protected:
  explicit CCitadelUserMsg_RecentDamageSummary_ModifierRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbilityIdFieldNumber = 1,
    kModifierTypeIdFieldNumber = 2,
    kStartTimeFieldNumber = 4,
    kEndTimeFieldNumber = 5,
    kDebuffFieldNumber = 6,
    kEntindexCasterFieldNumber = 3,
  };
  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  uint32_t ability_id() const;
  void set_ability_id(uint32_t value);
  private:
  uint32_t _internal_ability_id() const;
  void _internal_set_ability_id(uint32_t value);
  public:

  // optional uint32 modifier_type_id = 2;
  bool has_modifier_type_id() const;
  private:
  bool _internal_has_modifier_type_id() const;
  public:
  void clear_modifier_type_id();
  uint32_t modifier_type_id() const;
  void set_modifier_type_id(uint32_t value);
  private:
  uint32_t _internal_modifier_type_id() const;
  void _internal_set_modifier_type_id(uint32_t value);
  public:

  // optional float start_time = 4;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  float start_time() const;
  void set_start_time(float value);
  private:
  float _internal_start_time() const;
  void _internal_set_start_time(float value);
  public:

  // optional float end_time = 5;
  bool has_end_time() const;
  private:
  bool _internal_has_end_time() const;
  public:
  void clear_end_time();
  float end_time() const;
  void set_end_time(float value);
  private:
  float _internal_end_time() const;
  void _internal_set_end_time(float value);
  public:

  // optional bool debuff = 6;
  bool has_debuff() const;
  private:
  bool _internal_has_debuff() const;
  public:
  void clear_debuff();
  bool debuff() const;
  void set_debuff(bool value);
  private:
  bool _internal_debuff() const;
  void _internal_set_debuff(bool value);
  public:

  // optional int32 entindex_caster = 3 [default = -1];
  bool has_entindex_caster() const;
  private:
  bool _internal_has_entindex_caster() const;
  public:
  void clear_entindex_caster();
  int32_t entindex_caster() const;
  void set_entindex_caster(int32_t value);
  private:
  int32_t _internal_entindex_caster() const;
  void _internal_set_entindex_caster(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_RecentDamageSummary.ModifierRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t ability_id_;
    uint32_t modifier_type_id_;
    float start_time_;
    float end_time_;
    bool debuff_;
    int32_t entindex_caster_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_RecentDamageSummary /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_RecentDamageSummary) */ {
 public:
  inline CCitadelUserMsg_RecentDamageSummary() : CCitadelUserMsg_RecentDamageSummary(nullptr) {}
  ~CCitadelUserMsg_RecentDamageSummary() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_RecentDamageSummary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_RecentDamageSummary(const CCitadelUserMsg_RecentDamageSummary& from);
  CCitadelUserMsg_RecentDamageSummary(CCitadelUserMsg_RecentDamageSummary&& from) noexcept
    : CCitadelUserMsg_RecentDamageSummary() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_RecentDamageSummary& operator=(const CCitadelUserMsg_RecentDamageSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_RecentDamageSummary& operator=(CCitadelUserMsg_RecentDamageSummary&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_RecentDamageSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_RecentDamageSummary* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_RecentDamageSummary*>(
               &_CCitadelUserMsg_RecentDamageSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CCitadelUserMsg_RecentDamageSummary& a, CCitadelUserMsg_RecentDamageSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_RecentDamageSummary* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_RecentDamageSummary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_RecentDamageSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_RecentDamageSummary>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_RecentDamageSummary& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_RecentDamageSummary& from) {
    CCitadelUserMsg_RecentDamageSummary::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_RecentDamageSummary* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_RecentDamageSummary";
  }
  protected:
  explicit CCitadelUserMsg_RecentDamageSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CCitadelUserMsg_RecentDamageSummary_DamageRecord DamageRecord;
  typedef CCitadelUserMsg_RecentDamageSummary_ModifierRecord ModifierRecord;

  // accessors -------------------------------------------------------

  enum : int {
    kDamageRecordsFieldNumber = 2,
    kModifierRecordsFieldNumber = 7,
    kStartTimeFieldNumber = 3,
    kEndTimeFieldNumber = 4,
    kTotalDamageFieldNumber = 5,
    kLostGoldFieldNumber = 6,
    kPlayerSlotFieldNumber = 1,
  };
  // repeated .CCitadelUserMsg_RecentDamageSummary.DamageRecord damage_records = 2;
  int damage_records_size() const;
  private:
  int _internal_damage_records_size() const;
  public:
  void clear_damage_records();
  ::CCitadelUserMsg_RecentDamageSummary_DamageRecord* mutable_damage_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_RecentDamageSummary_DamageRecord >*
      mutable_damage_records();
  private:
  const ::CCitadelUserMsg_RecentDamageSummary_DamageRecord& _internal_damage_records(int index) const;
  ::CCitadelUserMsg_RecentDamageSummary_DamageRecord* _internal_add_damage_records();
  public:
  const ::CCitadelUserMsg_RecentDamageSummary_DamageRecord& damage_records(int index) const;
  ::CCitadelUserMsg_RecentDamageSummary_DamageRecord* add_damage_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_RecentDamageSummary_DamageRecord >&
      damage_records() const;

  // repeated .CCitadelUserMsg_RecentDamageSummary.ModifierRecord modifier_records = 7;
  int modifier_records_size() const;
  private:
  int _internal_modifier_records_size() const;
  public:
  void clear_modifier_records();
  ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord* mutable_modifier_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord >*
      mutable_modifier_records();
  private:
  const ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord& _internal_modifier_records(int index) const;
  ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord* _internal_add_modifier_records();
  public:
  const ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord& modifier_records(int index) const;
  ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord* add_modifier_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord >&
      modifier_records() const;

  // optional float start_time = 3;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  float start_time() const;
  void set_start_time(float value);
  private:
  float _internal_start_time() const;
  void _internal_set_start_time(float value);
  public:

  // optional float end_time = 4;
  bool has_end_time() const;
  private:
  bool _internal_has_end_time() const;
  public:
  void clear_end_time();
  float end_time() const;
  void set_end_time(float value);
  private:
  float _internal_end_time() const;
  void _internal_set_end_time(float value);
  public:

  // optional int32 total_damage = 5;
  bool has_total_damage() const;
  private:
  bool _internal_has_total_damage() const;
  public:
  void clear_total_damage();
  int32_t total_damage() const;
  void set_total_damage(int32_t value);
  private:
  int32_t _internal_total_damage() const;
  void _internal_set_total_damage(int32_t value);
  public:

  // optional int32 lost_gold = 6;
  bool has_lost_gold() const;
  private:
  bool _internal_has_lost_gold() const;
  public:
  void clear_lost_gold();
  int32_t lost_gold() const;
  void set_lost_gold(int32_t value);
  private:
  int32_t _internal_lost_gold() const;
  void _internal_set_lost_gold(int32_t value);
  public:

  // optional int32 player_slot = 1 [default = -1];
  bool has_player_slot() const;
  private:
  bool _internal_has_player_slot() const;
  public:
  void clear_player_slot();
  int32_t player_slot() const;
  void set_player_slot(int32_t value);
  private:
  int32_t _internal_player_slot() const;
  void _internal_set_player_slot(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_RecentDamageSummary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_RecentDamageSummary_DamageRecord > damage_records_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord > modifier_records_;
    float start_time_;
    float end_time_;
    int32_t total_damage_;
    int32_t lost_gold_;
    int32_t player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_SpectatorTeamChanged /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_SpectatorTeamChanged) */ {
 public:
  inline CCitadelUserMsg_SpectatorTeamChanged() : CCitadelUserMsg_SpectatorTeamChanged(nullptr) {}
  ~CCitadelUserMsg_SpectatorTeamChanged() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_SpectatorTeamChanged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_SpectatorTeamChanged(const CCitadelUserMsg_SpectatorTeamChanged& from);
  CCitadelUserMsg_SpectatorTeamChanged(CCitadelUserMsg_SpectatorTeamChanged&& from) noexcept
    : CCitadelUserMsg_SpectatorTeamChanged() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_SpectatorTeamChanged& operator=(const CCitadelUserMsg_SpectatorTeamChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_SpectatorTeamChanged& operator=(CCitadelUserMsg_SpectatorTeamChanged&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_SpectatorTeamChanged& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_SpectatorTeamChanged* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_SpectatorTeamChanged*>(
               &_CCitadelUserMsg_SpectatorTeamChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CCitadelUserMsg_SpectatorTeamChanged& a, CCitadelUserMsg_SpectatorTeamChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_SpectatorTeamChanged* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_SpectatorTeamChanged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_SpectatorTeamChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_SpectatorTeamChanged>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_SpectatorTeamChanged& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_SpectatorTeamChanged& from) {
    CCitadelUserMsg_SpectatorTeamChanged::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_SpectatorTeamChanged* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_SpectatorTeamChanged";
  }
  protected:
  explicit CCitadelUserMsg_SpectatorTeamChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamnumberFieldNumber = 1,
  };
  // optional int32 teamnumber = 1;
  bool has_teamnumber() const;
  private:
  bool _internal_has_teamnumber() const;
  public:
  void clear_teamnumber();
  int32_t teamnumber() const;
  void set_teamnumber(int32_t value);
  private:
  int32_t _internal_teamnumber() const;
  void _internal_set_teamnumber(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_SpectatorTeamChanged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t teamnumber_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ChatWheel /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ChatWheel) */ {
 public:
  inline CCitadelUserMsg_ChatWheel() : CCitadelUserMsg_ChatWheel(nullptr) {}
  ~CCitadelUserMsg_ChatWheel() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ChatWheel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ChatWheel(const CCitadelUserMsg_ChatWheel& from);
  CCitadelUserMsg_ChatWheel(CCitadelUserMsg_ChatWheel&& from) noexcept
    : CCitadelUserMsg_ChatWheel() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ChatWheel& operator=(const CCitadelUserMsg_ChatWheel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ChatWheel& operator=(CCitadelUserMsg_ChatWheel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ChatWheel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ChatWheel* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ChatWheel*>(
               &_CCitadelUserMsg_ChatWheel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CCitadelUserMsg_ChatWheel& a, CCitadelUserMsg_ChatWheel& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ChatWheel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ChatWheel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ChatWheel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ChatWheel>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_ChatWheel& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_ChatWheel& from) {
    CCitadelUserMsg_ChatWheel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_ChatWheel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ChatWheel";
  }
  protected:
  explicit CCitadelUserMsg_ChatWheel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParam1FieldNumber = 6,
    kChatMessageIdFieldNumber = 1,
    kAccountIdFieldNumber = 4,
    kHeroIdFieldNumber = 5,
    kLaneColorFieldNumber = 7,
    kPlayerSlotFieldNumber = 2,
    kPawnEntindexFieldNumber = 3,
  };
  // optional string param_1 = 6;
  bool has_param_1() const;
  private:
  bool _internal_has_param_1() const;
  public:
  void clear_param_1();
  const std::string& param_1() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_param_1(ArgT0&& arg0, ArgT... args);
  std::string* mutable_param_1();
  PROTOBUF_NODISCARD std::string* release_param_1();
  void set_allocated_param_1(std::string* param_1);
  private:
  const std::string& _internal_param_1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_param_1(const std::string& value);
  std::string* _internal_mutable_param_1();
  public:

  // optional uint32 chat_message_id = 1;
  bool has_chat_message_id() const;
  private:
  bool _internal_has_chat_message_id() const;
  public:
  void clear_chat_message_id();
  uint32_t chat_message_id() const;
  void set_chat_message_id(uint32_t value);
  private:
  uint32_t _internal_chat_message_id() const;
  void _internal_set_chat_message_id(uint32_t value);
  public:

  // optional uint32 account_id = 4;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 hero_id = 5;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional .CMsgLaneColor lane_color = 7 [default = k_ELaneColor_Invalid];
  bool has_lane_color() const;
  private:
  bool _internal_has_lane_color() const;
  public:
  void clear_lane_color();
  ::CMsgLaneColor lane_color() const;
  void set_lane_color(::CMsgLaneColor value);
  private:
  ::CMsgLaneColor _internal_lane_color() const;
  void _internal_set_lane_color(::CMsgLaneColor value);
  public:

  // optional int32 player_slot = 2 [default = -1];
  bool has_player_slot() const;
  private:
  bool _internal_has_player_slot() const;
  public:
  void clear_player_slot();
  int32_t player_slot() const;
  void set_player_slot(int32_t value);
  private:
  int32_t _internal_player_slot() const;
  void _internal_set_player_slot(int32_t value);
  public:

  // optional int32 pawn_entindex = 3 [default = -1];
  bool has_pawn_entindex() const;
  private:
  bool _internal_has_pawn_entindex() const;
  public:
  void clear_pawn_entindex();
  int32_t pawn_entindex() const;
  void set_pawn_entindex(int32_t value);
  private:
  int32_t _internal_pawn_entindex() const;
  void _internal_set_pawn_entindex(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ChatWheel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr param_1_;
    uint32_t chat_message_id_;
    uint32_t account_id_;
    uint32_t hero_id_;
    int lane_color_;
    int32_t player_slot_;
    int32_t pawn_entindex_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ChatMsg /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ChatMsg) */ {
 public:
  inline CCitadelUserMsg_ChatMsg() : CCitadelUserMsg_ChatMsg(nullptr) {}
  ~CCitadelUserMsg_ChatMsg() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ChatMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ChatMsg(const CCitadelUserMsg_ChatMsg& from);
  CCitadelUserMsg_ChatMsg(CCitadelUserMsg_ChatMsg&& from) noexcept
    : CCitadelUserMsg_ChatMsg() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ChatMsg& operator=(const CCitadelUserMsg_ChatMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ChatMsg& operator=(CCitadelUserMsg_ChatMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ChatMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ChatMsg* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ChatMsg*>(
               &_CCitadelUserMsg_ChatMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CCitadelUserMsg_ChatMsg& a, CCitadelUserMsg_ChatMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ChatMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ChatMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ChatMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ChatMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_ChatMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_ChatMsg& from) {
    CCitadelUserMsg_ChatMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_ChatMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ChatMsg";
  }
  protected:
  explicit CCitadelUserMsg_ChatMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 2,
    kAllChatFieldNumber = 3,
    kLaneColorFieldNumber = 4,
    kPlayerSlotFieldNumber = 1,
  };
  // optional string text = 2;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_text(ArgT0&& arg0, ArgT... args);
  std::string* mutable_text();
  PROTOBUF_NODISCARD std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // optional bool all_chat = 3;
  bool has_all_chat() const;
  private:
  bool _internal_has_all_chat() const;
  public:
  void clear_all_chat();
  bool all_chat() const;
  void set_all_chat(bool value);
  private:
  bool _internal_all_chat() const;
  void _internal_set_all_chat(bool value);
  public:

  // optional .CMsgLaneColor lane_color = 4 [default = k_ELaneColor_Invalid];
  bool has_lane_color() const;
  private:
  bool _internal_has_lane_color() const;
  public:
  void clear_lane_color();
  ::CMsgLaneColor lane_color() const;
  void set_lane_color(::CMsgLaneColor value);
  private:
  ::CMsgLaneColor _internal_lane_color() const;
  void _internal_set_lane_color(::CMsgLaneColor value);
  public:

  // optional int32 player_slot = 1 [default = -1];
  bool has_player_slot() const;
  private:
  bool _internal_has_player_slot() const;
  public:
  void clear_player_slot();
  int32_t player_slot() const;
  void set_player_slot(int32_t value);
  private:
  int32_t _internal_player_slot() const;
  void _internal_set_player_slot(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ChatMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
    bool all_chat_;
    int lane_color_;
    int32_t player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_GoldHistory_GoldRecord /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_GoldHistory.GoldRecord) */ {
 public:
  inline CCitadelUserMsg_GoldHistory_GoldRecord() : CCitadelUserMsg_GoldHistory_GoldRecord(nullptr) {}
  ~CCitadelUserMsg_GoldHistory_GoldRecord() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_GoldHistory_GoldRecord(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_GoldHistory_GoldRecord(const CCitadelUserMsg_GoldHistory_GoldRecord& from);
  CCitadelUserMsg_GoldHistory_GoldRecord(CCitadelUserMsg_GoldHistory_GoldRecord&& from) noexcept
    : CCitadelUserMsg_GoldHistory_GoldRecord() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_GoldHistory_GoldRecord& operator=(const CCitadelUserMsg_GoldHistory_GoldRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_GoldHistory_GoldRecord& operator=(CCitadelUserMsg_GoldHistory_GoldRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_GoldHistory_GoldRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_GoldHistory_GoldRecord* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_GoldHistory_GoldRecord*>(
               &_CCitadelUserMsg_GoldHistory_GoldRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CCitadelUserMsg_GoldHistory_GoldRecord& a, CCitadelUserMsg_GoldHistory_GoldRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_GoldHistory_GoldRecord* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_GoldHistory_GoldRecord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_GoldHistory_GoldRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_GoldHistory_GoldRecord>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_GoldHistory_GoldRecord& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_GoldHistory_GoldRecord& from) {
    CCitadelUserMsg_GoldHistory_GoldRecord::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_GoldHistory_GoldRecord* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_GoldHistory.GoldRecord";
  }
  protected:
  explicit CCitadelUserMsg_GoldHistory_GoldRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrencySourceFieldNumber = 1,
    kGoldFieldNumber = 2,
    kEventsFieldNumber = 3,
  };
  // optional int32 currency_source = 1;
  bool has_currency_source() const;
  private:
  bool _internal_has_currency_source() const;
  public:
  void clear_currency_source();
  int32_t currency_source() const;
  void set_currency_source(int32_t value);
  private:
  int32_t _internal_currency_source() const;
  void _internal_set_currency_source(int32_t value);
  public:

  // optional int32 gold = 2;
  bool has_gold() const;
  private:
  bool _internal_has_gold() const;
  public:
  void clear_gold();
  int32_t gold() const;
  void set_gold(int32_t value);
  private:
  int32_t _internal_gold() const;
  void _internal_set_gold(int32_t value);
  public:

  // optional int32 events = 3;
  bool has_events() const;
  private:
  bool _internal_has_events() const;
  public:
  void clear_events();
  int32_t events() const;
  void set_events(int32_t value);
  private:
  int32_t _internal_events() const;
  void _internal_set_events(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_GoldHistory.GoldRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t currency_source_;
    int32_t gold_;
    int32_t events_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_GoldHistory_MinuteRecord /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_GoldHistory.MinuteRecord) */ {
 public:
  inline CCitadelUserMsg_GoldHistory_MinuteRecord() : CCitadelUserMsg_GoldHistory_MinuteRecord(nullptr) {}
  ~CCitadelUserMsg_GoldHistory_MinuteRecord() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_GoldHistory_MinuteRecord(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_GoldHistory_MinuteRecord(const CCitadelUserMsg_GoldHistory_MinuteRecord& from);
  CCitadelUserMsg_GoldHistory_MinuteRecord(CCitadelUserMsg_GoldHistory_MinuteRecord&& from) noexcept
    : CCitadelUserMsg_GoldHistory_MinuteRecord() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_GoldHistory_MinuteRecord& operator=(const CCitadelUserMsg_GoldHistory_MinuteRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_GoldHistory_MinuteRecord& operator=(CCitadelUserMsg_GoldHistory_MinuteRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_GoldHistory_MinuteRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_GoldHistory_MinuteRecord* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_GoldHistory_MinuteRecord*>(
               &_CCitadelUserMsg_GoldHistory_MinuteRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CCitadelUserMsg_GoldHistory_MinuteRecord& a, CCitadelUserMsg_GoldHistory_MinuteRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_GoldHistory_MinuteRecord* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_GoldHistory_MinuteRecord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_GoldHistory_MinuteRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_GoldHistory_MinuteRecord>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_GoldHistory_MinuteRecord& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_GoldHistory_MinuteRecord& from) {
    CCitadelUserMsg_GoldHistory_MinuteRecord::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_GoldHistory_MinuteRecord* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_GoldHistory.MinuteRecord";
  }
  protected:
  explicit CCitadelUserMsg_GoldHistory_MinuteRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoldRecordsFieldNumber = 2,
    kMatchMinuteFieldNumber = 1,
  };
  // repeated .CCitadelUserMsg_GoldHistory.GoldRecord gold_records = 2;
  int gold_records_size() const;
  private:
  int _internal_gold_records_size() const;
  public:
  void clear_gold_records();
  ::CCitadelUserMsg_GoldHistory_GoldRecord* mutable_gold_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_GoldHistory_GoldRecord >*
      mutable_gold_records();
  private:
  const ::CCitadelUserMsg_GoldHistory_GoldRecord& _internal_gold_records(int index) const;
  ::CCitadelUserMsg_GoldHistory_GoldRecord* _internal_add_gold_records();
  public:
  const ::CCitadelUserMsg_GoldHistory_GoldRecord& gold_records(int index) const;
  ::CCitadelUserMsg_GoldHistory_GoldRecord* add_gold_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_GoldHistory_GoldRecord >&
      gold_records() const;

  // optional int32 match_minute = 1;
  bool has_match_minute() const;
  private:
  bool _internal_has_match_minute() const;
  public:
  void clear_match_minute();
  int32_t match_minute() const;
  void set_match_minute(int32_t value);
  private:
  int32_t _internal_match_minute() const;
  void _internal_set_match_minute(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_GoldHistory.MinuteRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_GoldHistory_GoldRecord > gold_records_;
    int32_t match_minute_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_GoldHistory /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_GoldHistory) */ {
 public:
  inline CCitadelUserMsg_GoldHistory() : CCitadelUserMsg_GoldHistory(nullptr) {}
  ~CCitadelUserMsg_GoldHistory() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_GoldHistory(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_GoldHistory(const CCitadelUserMsg_GoldHistory& from);
  CCitadelUserMsg_GoldHistory(CCitadelUserMsg_GoldHistory&& from) noexcept
    : CCitadelUserMsg_GoldHistory() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_GoldHistory& operator=(const CCitadelUserMsg_GoldHistory& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_GoldHistory& operator=(CCitadelUserMsg_GoldHistory&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_GoldHistory& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_GoldHistory* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_GoldHistory*>(
               &_CCitadelUserMsg_GoldHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CCitadelUserMsg_GoldHistory& a, CCitadelUserMsg_GoldHistory& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_GoldHistory* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_GoldHistory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_GoldHistory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_GoldHistory>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_GoldHistory& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_GoldHistory& from) {
    CCitadelUserMsg_GoldHistory::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_GoldHistory* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_GoldHistory";
  }
  protected:
  explicit CCitadelUserMsg_GoldHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CCitadelUserMsg_GoldHistory_GoldRecord GoldRecord;
  typedef CCitadelUserMsg_GoldHistory_MinuteRecord MinuteRecord;

  // accessors -------------------------------------------------------

  enum : int {
    kMinuteRecordsFieldNumber = 2,
    kEntindexPlayerFieldNumber = 1,
  };
  // repeated .CCitadelUserMsg_GoldHistory.MinuteRecord minute_records = 2;
  int minute_records_size() const;
  private:
  int _internal_minute_records_size() const;
  public:
  void clear_minute_records();
  ::CCitadelUserMsg_GoldHistory_MinuteRecord* mutable_minute_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_GoldHistory_MinuteRecord >*
      mutable_minute_records();
  private:
  const ::CCitadelUserMsg_GoldHistory_MinuteRecord& _internal_minute_records(int index) const;
  ::CCitadelUserMsg_GoldHistory_MinuteRecord* _internal_add_minute_records();
  public:
  const ::CCitadelUserMsg_GoldHistory_MinuteRecord& minute_records(int index) const;
  ::CCitadelUserMsg_GoldHistory_MinuteRecord* add_minute_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_GoldHistory_MinuteRecord >&
      minute_records() const;

  // optional int32 entindex_player = 1 [default = -1];
  bool has_entindex_player() const;
  private:
  bool _internal_has_entindex_player() const;
  public:
  void clear_entindex_player();
  int32_t entindex_player() const;
  void set_entindex_player(int32_t value);
  private:
  int32_t _internal_entindex_player() const;
  void _internal_set_entindex_player(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_GoldHistory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_GoldHistory_MinuteRecord > minute_records_;
    int32_t entindex_player_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_CameraController_Maintain /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_CameraController.Maintain) */ {
 public:
  inline CCitadelUserMsg_CameraController_Maintain() : CCitadelUserMsg_CameraController_Maintain(nullptr) {}
  ~CCitadelUserMsg_CameraController_Maintain() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_CameraController_Maintain(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_CameraController_Maintain(const CCitadelUserMsg_CameraController_Maintain& from);
  CCitadelUserMsg_CameraController_Maintain(CCitadelUserMsg_CameraController_Maintain&& from) noexcept
    : CCitadelUserMsg_CameraController_Maintain() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_CameraController_Maintain& operator=(const CCitadelUserMsg_CameraController_Maintain& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_CameraController_Maintain& operator=(CCitadelUserMsg_CameraController_Maintain&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_CameraController_Maintain& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_CameraController_Maintain* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_CameraController_Maintain*>(
               &_CCitadelUserMsg_CameraController_Maintain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CCitadelUserMsg_CameraController_Maintain& a, CCitadelUserMsg_CameraController_Maintain& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_CameraController_Maintain* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_CameraController_Maintain* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_CameraController_Maintain* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_CameraController_Maintain>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_CameraController_Maintain& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_CameraController_Maintain& from) {
    CCitadelUserMsg_CameraController_Maintain::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_CameraController_Maintain* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_CameraController.Maintain";
  }
  protected:
  explicit CCitadelUserMsg_CameraController_Maintain(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDurationFieldNumber = 1,
  };
  // optional float duration = 1 [default = 1];
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_CameraController.Maintain)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    float duration_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_CameraController_Approach /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_CameraController.Approach) */ {
 public:
  inline CCitadelUserMsg_CameraController_Approach() : CCitadelUserMsg_CameraController_Approach(nullptr) {}
  ~CCitadelUserMsg_CameraController_Approach() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_CameraController_Approach(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_CameraController_Approach(const CCitadelUserMsg_CameraController_Approach& from);
  CCitadelUserMsg_CameraController_Approach(CCitadelUserMsg_CameraController_Approach&& from) noexcept
    : CCitadelUserMsg_CameraController_Approach() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_CameraController_Approach& operator=(const CCitadelUserMsg_CameraController_Approach& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_CameraController_Approach& operator=(CCitadelUserMsg_CameraController_Approach&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_CameraController_Approach& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_CameraController_Approach* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_CameraController_Approach*>(
               &_CCitadelUserMsg_CameraController_Approach_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CCitadelUserMsg_CameraController_Approach& a, CCitadelUserMsg_CameraController_Approach& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_CameraController_Approach* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_CameraController_Approach* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_CameraController_Approach* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_CameraController_Approach>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_CameraController_Approach& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_CameraController_Approach& from) {
    CCitadelUserMsg_CameraController_Approach::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_CameraController_Approach* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_CameraController.Approach";
  }
  protected:
  explicit CCitadelUserMsg_CameraController_Approach(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApproachVectorFieldNumber = 6,
    kMinDurationFieldNumber = 4,
    kApproachFloatFieldNumber = 5,
    kChaseDefaultFieldNumber = 7,
    kAccelerationFieldNumber = 3,
    kSpeedFieldNumber = 1,
    kDefaultSpeedFieldNumber = 2,
  };
  // optional .CMsgVector approach_vector = 6;
  bool has_approach_vector() const;
  private:
  bool _internal_has_approach_vector() const;
  public:
  void clear_approach_vector();
  const ::CMsgVector& approach_vector() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_approach_vector();
  ::CMsgVector* mutable_approach_vector();
  void set_allocated_approach_vector(::CMsgVector* approach_vector);
  private:
  const ::CMsgVector& _internal_approach_vector() const;
  ::CMsgVector* _internal_mutable_approach_vector();
  public:
  void unsafe_arena_set_allocated_approach_vector(
      ::CMsgVector* approach_vector);
  ::CMsgVector* unsafe_arena_release_approach_vector();

  // optional float min_duration = 4 [default = 0];
  bool has_min_duration() const;
  private:
  bool _internal_has_min_duration() const;
  public:
  void clear_min_duration();
  float min_duration() const;
  void set_min_duration(float value);
  private:
  float _internal_min_duration() const;
  void _internal_set_min_duration(float value);
  public:

  // optional float approach_float = 5;
  bool has_approach_float() const;
  private:
  bool _internal_has_approach_float() const;
  public:
  void clear_approach_float();
  float approach_float() const;
  void set_approach_float(float value);
  private:
  float _internal_approach_float() const;
  void _internal_set_approach_float(float value);
  public:

  // optional bool chase_default = 7;
  bool has_chase_default() const;
  private:
  bool _internal_has_chase_default() const;
  public:
  void clear_chase_default();
  bool chase_default() const;
  void set_chase_default(bool value);
  private:
  bool _internal_chase_default() const;
  void _internal_set_chase_default(bool value);
  public:

  // optional float acceleration = 3 [default = 1000];
  bool has_acceleration() const;
  private:
  bool _internal_has_acceleration() const;
  public:
  void clear_acceleration();
  float acceleration() const;
  void set_acceleration(float value);
  private:
  float _internal_acceleration() const;
  void _internal_set_acceleration(float value);
  public:

  // optional float speed = 1 [default = 600];
  bool has_speed() const;
  private:
  bool _internal_has_speed() const;
  public:
  void clear_speed();
  float speed() const;
  void set_speed(float value);
  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);
  public:

  // optional float default_speed = 2 [default = 600];
  bool has_default_speed() const;
  private:
  bool _internal_has_default_speed() const;
  public:
  void clear_default_speed();
  float default_speed() const;
  void set_default_speed(float value);
  private:
  float _internal_default_speed() const;
  void _internal_set_default_speed(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_CameraController.Approach)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgVector* approach_vector_;
    float min_duration_;
    float approach_float_;
    bool chase_default_;
    float acceleration_;
    float speed_;
    float default_speed_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_CameraController_Spring /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_CameraController.Spring) */ {
 public:
  inline CCitadelUserMsg_CameraController_Spring() : CCitadelUserMsg_CameraController_Spring(nullptr) {}
  ~CCitadelUserMsg_CameraController_Spring() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_CameraController_Spring(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_CameraController_Spring(const CCitadelUserMsg_CameraController_Spring& from);
  CCitadelUserMsg_CameraController_Spring(CCitadelUserMsg_CameraController_Spring&& from) noexcept
    : CCitadelUserMsg_CameraController_Spring() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_CameraController_Spring& operator=(const CCitadelUserMsg_CameraController_Spring& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_CameraController_Spring& operator=(CCitadelUserMsg_CameraController_Spring&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_CameraController_Spring& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_CameraController_Spring* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_CameraController_Spring*>(
               &_CCitadelUserMsg_CameraController_Spring_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CCitadelUserMsg_CameraController_Spring& a, CCitadelUserMsg_CameraController_Spring& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_CameraController_Spring* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_CameraController_Spring* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_CameraController_Spring* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_CameraController_Spring>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_CameraController_Spring& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_CameraController_Spring& from) {
    CCitadelUserMsg_CameraController_Spring::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_CameraController_Spring* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_CameraController.Spring";
  }
  protected:
  explicit CCitadelUserMsg_CameraController_Spring(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetVectorFieldNumber = 7,
    kMinSpeedFieldNumber = 4,
    kMaxDurationFieldNumber = 5,
    kTargetFloatFieldNumber = 6,
    kSpringStrengthFieldNumber = 1,
  };
  // optional .CMsgVector target_vector = 7;
  bool has_target_vector() const;
  private:
  bool _internal_has_target_vector() const;
  public:
  void clear_target_vector();
  const ::CMsgVector& target_vector() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_target_vector();
  ::CMsgVector* mutable_target_vector();
  void set_allocated_target_vector(::CMsgVector* target_vector);
  private:
  const ::CMsgVector& _internal_target_vector() const;
  ::CMsgVector* _internal_mutable_target_vector();
  public:
  void unsafe_arena_set_allocated_target_vector(
      ::CMsgVector* target_vector);
  ::CMsgVector* unsafe_arena_release_target_vector();

  // optional float min_speed = 4 [default = 0];
  bool has_min_speed() const;
  private:
  bool _internal_has_min_speed() const;
  public:
  void clear_min_speed();
  float min_speed() const;
  void set_min_speed(float value);
  private:
  float _internal_min_speed() const;
  void _internal_set_min_speed(float value);
  public:

  // optional float max_duration = 5 [default = 0];
  bool has_max_duration() const;
  private:
  bool _internal_has_max_duration() const;
  public:
  void clear_max_duration();
  float max_duration() const;
  void set_max_duration(float value);
  private:
  float _internal_max_duration() const;
  void _internal_set_max_duration(float value);
  public:

  // optional float target_float = 6;
  bool has_target_float() const;
  private:
  bool _internal_has_target_float() const;
  public:
  void clear_target_float();
  float target_float() const;
  void set_target_float(float value);
  private:
  float _internal_target_float() const;
  void _internal_set_target_float(float value);
  public:

  // optional float spring_strength = 1 [default = 10];
  bool has_spring_strength() const;
  private:
  bool _internal_has_spring_strength() const;
  public:
  void clear_spring_strength();
  float spring_strength() const;
  void set_spring_strength(float value);
  private:
  float _internal_spring_strength() const;
  void _internal_set_spring_strength(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_CameraController.Spring)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgVector* target_vector_;
    float min_speed_;
    float max_duration_;
    float target_float_;
    float spring_strength_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_CameraController_Lerp /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_CameraController.Lerp) */ {
 public:
  inline CCitadelUserMsg_CameraController_Lerp() : CCitadelUserMsg_CameraController_Lerp(nullptr) {}
  ~CCitadelUserMsg_CameraController_Lerp() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_CameraController_Lerp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_CameraController_Lerp(const CCitadelUserMsg_CameraController_Lerp& from);
  CCitadelUserMsg_CameraController_Lerp(CCitadelUserMsg_CameraController_Lerp&& from) noexcept
    : CCitadelUserMsg_CameraController_Lerp() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_CameraController_Lerp& operator=(const CCitadelUserMsg_CameraController_Lerp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_CameraController_Lerp& operator=(CCitadelUserMsg_CameraController_Lerp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_CameraController_Lerp& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_CameraController_Lerp* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_CameraController_Lerp*>(
               &_CCitadelUserMsg_CameraController_Lerp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CCitadelUserMsg_CameraController_Lerp& a, CCitadelUserMsg_CameraController_Lerp& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_CameraController_Lerp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_CameraController_Lerp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_CameraController_Lerp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_CameraController_Lerp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_CameraController_Lerp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_CameraController_Lerp& from) {
    CCitadelUserMsg_CameraController_Lerp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_CameraController_Lerp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_CameraController.Lerp";
  }
  protected:
  explicit CCitadelUserMsg_CameraController_Lerp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartVectorFieldNumber = 2,
    kEndVectorFieldNumber = 4,
    kStartFloatFieldNumber = 1,
    kEndFloatFieldNumber = 3,
    kBiasFieldNumber = 5,
    kGainFieldNumber = 6,
    kDurationFieldNumber = 7,
  };
  // optional .CMsgVector start_vector = 2;
  bool has_start_vector() const;
  private:
  bool _internal_has_start_vector() const;
  public:
  void clear_start_vector();
  const ::CMsgVector& start_vector() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_start_vector();
  ::CMsgVector* mutable_start_vector();
  void set_allocated_start_vector(::CMsgVector* start_vector);
  private:
  const ::CMsgVector& _internal_start_vector() const;
  ::CMsgVector* _internal_mutable_start_vector();
  public:
  void unsafe_arena_set_allocated_start_vector(
      ::CMsgVector* start_vector);
  ::CMsgVector* unsafe_arena_release_start_vector();

  // optional .CMsgVector end_vector = 4;
  bool has_end_vector() const;
  private:
  bool _internal_has_end_vector() const;
  public:
  void clear_end_vector();
  const ::CMsgVector& end_vector() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_end_vector();
  ::CMsgVector* mutable_end_vector();
  void set_allocated_end_vector(::CMsgVector* end_vector);
  private:
  const ::CMsgVector& _internal_end_vector() const;
  ::CMsgVector* _internal_mutable_end_vector();
  public:
  void unsafe_arena_set_allocated_end_vector(
      ::CMsgVector* end_vector);
  ::CMsgVector* unsafe_arena_release_end_vector();

  // optional float start_float = 1;
  bool has_start_float() const;
  private:
  bool _internal_has_start_float() const;
  public:
  void clear_start_float();
  float start_float() const;
  void set_start_float(float value);
  private:
  float _internal_start_float() const;
  void _internal_set_start_float(float value);
  public:

  // optional float end_float = 3;
  bool has_end_float() const;
  private:
  bool _internal_has_end_float() const;
  public:
  void clear_end_float();
  float end_float() const;
  void set_end_float(float value);
  private:
  float _internal_end_float() const;
  void _internal_set_end_float(float value);
  public:

  // optional float bias = 5;
  bool has_bias() const;
  private:
  bool _internal_has_bias() const;
  public:
  void clear_bias();
  float bias() const;
  void set_bias(float value);
  private:
  float _internal_bias() const;
  void _internal_set_bias(float value);
  public:

  // optional float gain = 6;
  bool has_gain() const;
  private:
  bool _internal_has_gain() const;
  public:
  void clear_gain();
  float gain() const;
  void set_gain(float value);
  private:
  float _internal_gain() const;
  void _internal_set_gain(float value);
  public:

  // optional float duration = 7 [default = 1];
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_CameraController.Lerp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgVector* start_vector_;
    ::CMsgVector* end_vector_;
    float start_float_;
    float end_float_;
    float bias_;
    float gain_;
    float duration_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_CameraController_Lag /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_CameraController.Lag) */ {
 public:
  inline CCitadelUserMsg_CameraController_Lag() : CCitadelUserMsg_CameraController_Lag(nullptr) {}
  ~CCitadelUserMsg_CameraController_Lag() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_CameraController_Lag(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_CameraController_Lag(const CCitadelUserMsg_CameraController_Lag& from);
  CCitadelUserMsg_CameraController_Lag(CCitadelUserMsg_CameraController_Lag&& from) noexcept
    : CCitadelUserMsg_CameraController_Lag() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_CameraController_Lag& operator=(const CCitadelUserMsg_CameraController_Lag& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_CameraController_Lag& operator=(CCitadelUserMsg_CameraController_Lag&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_CameraController_Lag& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_CameraController_Lag* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_CameraController_Lag*>(
               &_CCitadelUserMsg_CameraController_Lag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CCitadelUserMsg_CameraController_Lag& a, CCitadelUserMsg_CameraController_Lag& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_CameraController_Lag* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_CameraController_Lag* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_CameraController_Lag* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_CameraController_Lag>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_CameraController_Lag& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_CameraController_Lag& from) {
    CCitadelUserMsg_CameraController_Lag::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_CameraController_Lag* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_CameraController.Lag";
  }
  protected:
  explicit CCitadelUserMsg_CameraController_Lag(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinDurationFieldNumber = 1,
    kLagTimeFieldNumber = 2,
    kMaxSpeedFieldNumber = 3,
    kSpringStrengthFieldNumber = 4,
  };
  // optional float min_duration = 1;
  bool has_min_duration() const;
  private:
  bool _internal_has_min_duration() const;
  public:
  void clear_min_duration();
  float min_duration() const;
  void set_min_duration(float value);
  private:
  float _internal_min_duration() const;
  void _internal_set_min_duration(float value);
  public:

  // optional float lag_time = 2;
  bool has_lag_time() const;
  private:
  bool _internal_has_lag_time() const;
  public:
  void clear_lag_time();
  float lag_time() const;
  void set_lag_time(float value);
  private:
  float _internal_lag_time() const;
  void _internal_set_lag_time(float value);
  public:

  // optional float max_speed = 3;
  bool has_max_speed() const;
  private:
  bool _internal_has_max_speed() const;
  public:
  void clear_max_speed();
  float max_speed() const;
  void set_max_speed(float value);
  private:
  float _internal_max_speed() const;
  void _internal_set_max_speed(float value);
  public:

  // optional float spring_strength = 4;
  bool has_spring_strength() const;
  private:
  bool _internal_has_spring_strength() const;
  public:
  void clear_spring_strength();
  float spring_strength() const;
  void set_spring_strength(float value);
  private:
  float _internal_spring_strength() const;
  void _internal_set_spring_strength(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_CameraController.Lag)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    float min_duration_;
    float lag_time_;
    float max_speed_;
    float spring_strength_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_CameraController /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_CameraController) */ {
 public:
  inline CCitadelUserMsg_CameraController() : CCitadelUserMsg_CameraController(nullptr) {}
  ~CCitadelUserMsg_CameraController() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_CameraController(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_CameraController(const CCitadelUserMsg_CameraController& from);
  CCitadelUserMsg_CameraController(CCitadelUserMsg_CameraController&& from) noexcept
    : CCitadelUserMsg_CameraController() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_CameraController& operator=(const CCitadelUserMsg_CameraController& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_CameraController& operator=(CCitadelUserMsg_CameraController&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_CameraController& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_CameraController* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_CameraController*>(
               &_CCitadelUserMsg_CameraController_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CCitadelUserMsg_CameraController& a, CCitadelUserMsg_CameraController& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_CameraController* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_CameraController* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_CameraController* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_CameraController>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_CameraController& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_CameraController& from) {
    CCitadelUserMsg_CameraController::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_CameraController* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_CameraController";
  }
  protected:
  explicit CCitadelUserMsg_CameraController(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CCitadelUserMsg_CameraController_Maintain Maintain;
  typedef CCitadelUserMsg_CameraController_Approach Approach;
  typedef CCitadelUserMsg_CameraController_Spring Spring;
  typedef CCitadelUserMsg_CameraController_Lerp Lerp;
  typedef CCitadelUserMsg_CameraController_Lag Lag;

  // accessors -------------------------------------------------------

  enum : int {
    kMaintainFieldNumber = 6,
    kApproachFieldNumber = 7,
    kSpringFieldNumber = 8,
    kLerpFieldNumber = 9,
    kLagFieldNumber = 10,
    kActionFieldNumber = 1,
    kParamFieldNumber = 3,
    kDelayFieldNumber = 4,
    kContextSymbolIdFieldNumber = 5,
    kRelativeValuesFieldNumber = 11,
    kOperationFieldNumber = 2,
  };
  // optional .CCitadelUserMsg_CameraController.Maintain maintain = 6;
  bool has_maintain() const;
  private:
  bool _internal_has_maintain() const;
  public:
  void clear_maintain();
  const ::CCitadelUserMsg_CameraController_Maintain& maintain() const;
  PROTOBUF_NODISCARD ::CCitadelUserMsg_CameraController_Maintain* release_maintain();
  ::CCitadelUserMsg_CameraController_Maintain* mutable_maintain();
  void set_allocated_maintain(::CCitadelUserMsg_CameraController_Maintain* maintain);
  private:
  const ::CCitadelUserMsg_CameraController_Maintain& _internal_maintain() const;
  ::CCitadelUserMsg_CameraController_Maintain* _internal_mutable_maintain();
  public:
  void unsafe_arena_set_allocated_maintain(
      ::CCitadelUserMsg_CameraController_Maintain* maintain);
  ::CCitadelUserMsg_CameraController_Maintain* unsafe_arena_release_maintain();

  // optional .CCitadelUserMsg_CameraController.Approach approach = 7;
  bool has_approach() const;
  private:
  bool _internal_has_approach() const;
  public:
  void clear_approach();
  const ::CCitadelUserMsg_CameraController_Approach& approach() const;
  PROTOBUF_NODISCARD ::CCitadelUserMsg_CameraController_Approach* release_approach();
  ::CCitadelUserMsg_CameraController_Approach* mutable_approach();
  void set_allocated_approach(::CCitadelUserMsg_CameraController_Approach* approach);
  private:
  const ::CCitadelUserMsg_CameraController_Approach& _internal_approach() const;
  ::CCitadelUserMsg_CameraController_Approach* _internal_mutable_approach();
  public:
  void unsafe_arena_set_allocated_approach(
      ::CCitadelUserMsg_CameraController_Approach* approach);
  ::CCitadelUserMsg_CameraController_Approach* unsafe_arena_release_approach();

  // optional .CCitadelUserMsg_CameraController.Spring spring = 8;
  bool has_spring() const;
  private:
  bool _internal_has_spring() const;
  public:
  void clear_spring();
  const ::CCitadelUserMsg_CameraController_Spring& spring() const;
  PROTOBUF_NODISCARD ::CCitadelUserMsg_CameraController_Spring* release_spring();
  ::CCitadelUserMsg_CameraController_Spring* mutable_spring();
  void set_allocated_spring(::CCitadelUserMsg_CameraController_Spring* spring);
  private:
  const ::CCitadelUserMsg_CameraController_Spring& _internal_spring() const;
  ::CCitadelUserMsg_CameraController_Spring* _internal_mutable_spring();
  public:
  void unsafe_arena_set_allocated_spring(
      ::CCitadelUserMsg_CameraController_Spring* spring);
  ::CCitadelUserMsg_CameraController_Spring* unsafe_arena_release_spring();

  // optional .CCitadelUserMsg_CameraController.Lerp lerp = 9;
  bool has_lerp() const;
  private:
  bool _internal_has_lerp() const;
  public:
  void clear_lerp();
  const ::CCitadelUserMsg_CameraController_Lerp& lerp() const;
  PROTOBUF_NODISCARD ::CCitadelUserMsg_CameraController_Lerp* release_lerp();
  ::CCitadelUserMsg_CameraController_Lerp* mutable_lerp();
  void set_allocated_lerp(::CCitadelUserMsg_CameraController_Lerp* lerp);
  private:
  const ::CCitadelUserMsg_CameraController_Lerp& _internal_lerp() const;
  ::CCitadelUserMsg_CameraController_Lerp* _internal_mutable_lerp();
  public:
  void unsafe_arena_set_allocated_lerp(
      ::CCitadelUserMsg_CameraController_Lerp* lerp);
  ::CCitadelUserMsg_CameraController_Lerp* unsafe_arena_release_lerp();

  // optional .CCitadelUserMsg_CameraController.Lag lag = 10;
  bool has_lag() const;
  private:
  bool _internal_has_lag() const;
  public:
  void clear_lag();
  const ::CCitadelUserMsg_CameraController_Lag& lag() const;
  PROTOBUF_NODISCARD ::CCitadelUserMsg_CameraController_Lag* release_lag();
  ::CCitadelUserMsg_CameraController_Lag* mutable_lag();
  void set_allocated_lag(::CCitadelUserMsg_CameraController_Lag* lag);
  private:
  const ::CCitadelUserMsg_CameraController_Lag& _internal_lag() const;
  ::CCitadelUserMsg_CameraController_Lag* _internal_mutable_lag();
  public:
  void unsafe_arena_set_allocated_lag(
      ::CCitadelUserMsg_CameraController_Lag* lag);
  ::CCitadelUserMsg_CameraController_Lag* unsafe_arena_release_lag();

  // required .CameraAction action = 1 [default = k_EAction_AddOp];
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  ::CameraAction action() const;
  void set_action(::CameraAction value);
  private:
  ::CameraAction _internal_action() const;
  void _internal_set_action(::CameraAction value);
  public:

  // optional .CameraParam param = 3 [default = k_EParam_ClearAllOps];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::CameraParam param() const;
  void set_param(::CameraParam value);
  private:
  ::CameraParam _internal_param() const;
  void _internal_set_param(::CameraParam value);
  public:

  // optional float delay = 4;
  bool has_delay() const;
  private:
  bool _internal_has_delay() const;
  public:
  void clear_delay();
  float delay() const;
  void set_delay(float value);
  private:
  float _internal_delay() const;
  void _internal_set_delay(float value);
  public:

  // optional uint32 context_symbol_id = 5;
  bool has_context_symbol_id() const;
  private:
  bool _internal_has_context_symbol_id() const;
  public:
  void clear_context_symbol_id();
  uint32_t context_symbol_id() const;
  void set_context_symbol_id(uint32_t value);
  private:
  uint32_t _internal_context_symbol_id() const;
  void _internal_set_context_symbol_id(uint32_t value);
  public:

  // optional bool relative_values = 11;
  bool has_relative_values() const;
  private:
  bool _internal_has_relative_values() const;
  public:
  void clear_relative_values();
  bool relative_values() const;
  void set_relative_values(bool value);
  private:
  bool _internal_relative_values() const;
  void _internal_set_relative_values(bool value);
  public:

  // optional .CameraOperation operation = 2 [default = k_ECameraOp_Maintain];
  bool has_operation() const;
  private:
  bool _internal_has_operation() const;
  public:
  void clear_operation();
  ::CameraOperation operation() const;
  void set_operation(::CameraOperation value);
  private:
  ::CameraOperation _internal_operation() const;
  void _internal_set_operation(::CameraOperation value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_CameraController)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CCitadelUserMsg_CameraController_Maintain* maintain_;
    ::CCitadelUserMsg_CameraController_Approach* approach_;
    ::CCitadelUserMsg_CameraController_Spring* spring_;
    ::CCitadelUserMsg_CameraController_Lerp* lerp_;
    ::CCitadelUserMsg_CameraController_Lag* lag_;
    int action_;
    int param_;
    float delay_;
    uint32_t context_symbol_id_;
    bool relative_values_;
    int operation_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_PostMatchDetails /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_PostMatchDetails) */ {
 public:
  inline CCitadelUserMsg_PostMatchDetails() : CCitadelUserMsg_PostMatchDetails(nullptr) {}
  ~CCitadelUserMsg_PostMatchDetails() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_PostMatchDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_PostMatchDetails(const CCitadelUserMsg_PostMatchDetails& from);
  CCitadelUserMsg_PostMatchDetails(CCitadelUserMsg_PostMatchDetails&& from) noexcept
    : CCitadelUserMsg_PostMatchDetails() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_PostMatchDetails& operator=(const CCitadelUserMsg_PostMatchDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_PostMatchDetails& operator=(CCitadelUserMsg_PostMatchDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_PostMatchDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_PostMatchDetails* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_PostMatchDetails*>(
               &_CCitadelUserMsg_PostMatchDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CCitadelUserMsg_PostMatchDetails& a, CCitadelUserMsg_PostMatchDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_PostMatchDetails* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_PostMatchDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_PostMatchDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_PostMatchDetails>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_PostMatchDetails& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_PostMatchDetails& from) {
    CCitadelUserMsg_PostMatchDetails::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_PostMatchDetails* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_PostMatchDetails";
  }
  protected:
  explicit CCitadelUserMsg_PostMatchDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchDetailsFieldNumber = 1,
  };
  // optional bytes match_details = 1;
  bool has_match_details() const;
  private:
  bool _internal_has_match_details() const;
  public:
  void clear_match_details();
  const std::string& match_details() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_match_details(ArgT0&& arg0, ArgT... args);
  std::string* mutable_match_details();
  PROTOBUF_NODISCARD std::string* release_match_details();
  void set_allocated_match_details(std::string* match_details);
  private:
  const std::string& _internal_match_details() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_match_details(const std::string& value);
  std::string* _internal_mutable_match_details();
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_PostMatchDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr match_details_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ChatEvent /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ChatEvent) */ {
 public:
  inline CCitadelUserMsg_ChatEvent() : CCitadelUserMsg_ChatEvent(nullptr) {}
  ~CCitadelUserMsg_ChatEvent() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ChatEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ChatEvent(const CCitadelUserMsg_ChatEvent& from);
  CCitadelUserMsg_ChatEvent(CCitadelUserMsg_ChatEvent&& from) noexcept
    : CCitadelUserMsg_ChatEvent() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ChatEvent& operator=(const CCitadelUserMsg_ChatEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ChatEvent& operator=(CCitadelUserMsg_ChatEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ChatEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ChatEvent* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ChatEvent*>(
               &_CCitadelUserMsg_ChatEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CCitadelUserMsg_ChatEvent& a, CCitadelUserMsg_ChatEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ChatEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ChatEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ChatEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ChatEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_ChatEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_ChatEvent& from) {
    CCitadelUserMsg_ChatEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_ChatEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ChatEvent";
  }
  protected:
  explicit CCitadelUserMsg_ChatEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 2,
    kPlayerSlotsFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // repeated uint32 values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  private:
  uint32_t _internal_values(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_values() const;
  void _internal_add_values(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_values();
  public:
  uint32_t values(int index) const;
  void set_values(int index, uint32_t value);
  void add_values(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      values() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_values();

  // repeated int32 player_slots = 3;
  int player_slots_size() const;
  private:
  int _internal_player_slots_size() const;
  public:
  void clear_player_slots();
  private:
  int32_t _internal_player_slots(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_player_slots() const;
  void _internal_add_player_slots(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_player_slots();
  public:
  int32_t player_slots(int index) const;
  void set_player_slots(int index, int32_t value);
  void add_player_slots(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      player_slots() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_player_slots();

  // optional .ECitadelChatMessage type = 1 [default = CITADEL_CHAT_MESSAGE_UNPAUSE_COUNTDOWN];
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::ECitadelChatMessage type() const;
  void set_type(::ECitadelChatMessage value);
  private:
  ::ECitadelChatMessage _internal_type() const;
  void _internal_set_type(::ECitadelChatMessage value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ChatEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > values_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > player_slots_;
    int type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_HeroKilled /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_HeroKilled) */ {
 public:
  inline CCitadelUserMsg_HeroKilled() : CCitadelUserMsg_HeroKilled(nullptr) {}
  ~CCitadelUserMsg_HeroKilled() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_HeroKilled(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_HeroKilled(const CCitadelUserMsg_HeroKilled& from);
  CCitadelUserMsg_HeroKilled(CCitadelUserMsg_HeroKilled&& from) noexcept
    : CCitadelUserMsg_HeroKilled() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_HeroKilled& operator=(const CCitadelUserMsg_HeroKilled& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_HeroKilled& operator=(CCitadelUserMsg_HeroKilled&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_HeroKilled& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_HeroKilled* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_HeroKilled*>(
               &_CCitadelUserMsg_HeroKilled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CCitadelUserMsg_HeroKilled& a, CCitadelUserMsg_HeroKilled& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_HeroKilled* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_HeroKilled* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_HeroKilled* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_HeroKilled>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_HeroKilled& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_HeroKilled& from) {
    CCitadelUserMsg_HeroKilled::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_HeroKilled* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_HeroKilled";
  }
  protected:
  explicit CCitadelUserMsg_HeroKilled(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntindexAssistersFieldNumber = 4,
    kRespawnReasonFieldNumber = 6,
    kEntindexVictimFieldNumber = 1,
    kEntindexInflictorFieldNumber = 2,
    kEntindexAttackerFieldNumber = 3,
    kEntindexScorerFieldNumber = 5,
  };
  // repeated int32 entindex_assisters = 4;
  int entindex_assisters_size() const;
  private:
  int _internal_entindex_assisters_size() const;
  public:
  void clear_entindex_assisters();
  private:
  int32_t _internal_entindex_assisters(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_entindex_assisters() const;
  void _internal_add_entindex_assisters(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_entindex_assisters();
  public:
  int32_t entindex_assisters(int index) const;
  void set_entindex_assisters(int index, int32_t value);
  void add_entindex_assisters(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      entindex_assisters() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_entindex_assisters();

  // optional int32 respawn_reason = 6;
  bool has_respawn_reason() const;
  private:
  bool _internal_has_respawn_reason() const;
  public:
  void clear_respawn_reason();
  int32_t respawn_reason() const;
  void set_respawn_reason(int32_t value);
  private:
  int32_t _internal_respawn_reason() const;
  void _internal_set_respawn_reason(int32_t value);
  public:

  // optional int32 entindex_victim = 1 [default = -1];
  bool has_entindex_victim() const;
  private:
  bool _internal_has_entindex_victim() const;
  public:
  void clear_entindex_victim();
  int32_t entindex_victim() const;
  void set_entindex_victim(int32_t value);
  private:
  int32_t _internal_entindex_victim() const;
  void _internal_set_entindex_victim(int32_t value);
  public:

  // optional int32 entindex_inflictor = 2 [default = -1];
  bool has_entindex_inflictor() const;
  private:
  bool _internal_has_entindex_inflictor() const;
  public:
  void clear_entindex_inflictor();
  int32_t entindex_inflictor() const;
  void set_entindex_inflictor(int32_t value);
  private:
  int32_t _internal_entindex_inflictor() const;
  void _internal_set_entindex_inflictor(int32_t value);
  public:

  // optional int32 entindex_attacker = 3 [default = -1];
  bool has_entindex_attacker() const;
  private:
  bool _internal_has_entindex_attacker() const;
  public:
  void clear_entindex_attacker();
  int32_t entindex_attacker() const;
  void set_entindex_attacker(int32_t value);
  private:
  int32_t _internal_entindex_attacker() const;
  void _internal_set_entindex_attacker(int32_t value);
  public:

  // optional int32 entindex_scorer = 5 [default = -1];
  bool has_entindex_scorer() const;
  private:
  bool _internal_has_entindex_scorer() const;
  public:
  void clear_entindex_scorer();
  int32_t entindex_scorer() const;
  void set_entindex_scorer(int32_t value);
  private:
  int32_t _internal_entindex_scorer() const;
  void _internal_set_entindex_scorer(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_HeroKilled)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > entindex_assisters_;
    int32_t respawn_reason_;
    int32_t entindex_victim_;
    int32_t entindex_inflictor_;
    int32_t entindex_attacker_;
    int32_t entindex_scorer_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelEntityMsg_BreakablePropSpawnDebris /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelEntityMsg_BreakablePropSpawnDebris) */ {
 public:
  inline CCitadelEntityMsg_BreakablePropSpawnDebris() : CCitadelEntityMsg_BreakablePropSpawnDebris(nullptr) {}
  ~CCitadelEntityMsg_BreakablePropSpawnDebris() override;
  explicit PROTOBUF_CONSTEXPR CCitadelEntityMsg_BreakablePropSpawnDebris(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelEntityMsg_BreakablePropSpawnDebris(const CCitadelEntityMsg_BreakablePropSpawnDebris& from);
  CCitadelEntityMsg_BreakablePropSpawnDebris(CCitadelEntityMsg_BreakablePropSpawnDebris&& from) noexcept
    : CCitadelEntityMsg_BreakablePropSpawnDebris() {
    *this = ::std::move(from);
  }

  inline CCitadelEntityMsg_BreakablePropSpawnDebris& operator=(const CCitadelEntityMsg_BreakablePropSpawnDebris& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelEntityMsg_BreakablePropSpawnDebris& operator=(CCitadelEntityMsg_BreakablePropSpawnDebris&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelEntityMsg_BreakablePropSpawnDebris& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelEntityMsg_BreakablePropSpawnDebris* internal_default_instance() {
    return reinterpret_cast<const CCitadelEntityMsg_BreakablePropSpawnDebris*>(
               &_CCitadelEntityMsg_BreakablePropSpawnDebris_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CCitadelEntityMsg_BreakablePropSpawnDebris& a, CCitadelEntityMsg_BreakablePropSpawnDebris& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelEntityMsg_BreakablePropSpawnDebris* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelEntityMsg_BreakablePropSpawnDebris* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelEntityMsg_BreakablePropSpawnDebris* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelEntityMsg_BreakablePropSpawnDebris>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelEntityMsg_BreakablePropSpawnDebris& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelEntityMsg_BreakablePropSpawnDebris& from) {
    CCitadelEntityMsg_BreakablePropSpawnDebris::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelEntityMsg_BreakablePropSpawnDebris* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelEntityMsg_BreakablePropSpawnDebris";
  }
  protected:
  explicit CCitadelEntityMsg_BreakablePropSpawnDebris(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityMsgFieldNumber = 1,
    kDamagePosFieldNumber = 2,
    kDamageFieldNumber = 3,
  };
  // optional .CEntityMsg entity_msg = 1;
  bool has_entity_msg() const;
  private:
  bool _internal_has_entity_msg() const;
  public:
  void clear_entity_msg();
  const ::CEntityMsg& entity_msg() const;
  PROTOBUF_NODISCARD ::CEntityMsg* release_entity_msg();
  ::CEntityMsg* mutable_entity_msg();
  void set_allocated_entity_msg(::CEntityMsg* entity_msg);
  private:
  const ::CEntityMsg& _internal_entity_msg() const;
  ::CEntityMsg* _internal_mutable_entity_msg();
  public:
  void unsafe_arena_set_allocated_entity_msg(
      ::CEntityMsg* entity_msg);
  ::CEntityMsg* unsafe_arena_release_entity_msg();

  // optional .CMsgVector damage_pos = 2;
  bool has_damage_pos() const;
  private:
  bool _internal_has_damage_pos() const;
  public:
  void clear_damage_pos();
  const ::CMsgVector& damage_pos() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_damage_pos();
  ::CMsgVector* mutable_damage_pos();
  void set_allocated_damage_pos(::CMsgVector* damage_pos);
  private:
  const ::CMsgVector& _internal_damage_pos() const;
  ::CMsgVector* _internal_mutable_damage_pos();
  public:
  void unsafe_arena_set_allocated_damage_pos(
      ::CMsgVector* damage_pos);
  ::CMsgVector* unsafe_arena_release_damage_pos();

  // optional float damage = 3;
  bool has_damage() const;
  private:
  bool _internal_has_damage() const;
  public:
  void clear_damage();
  float damage() const;
  void set_damage(float value);
  private:
  float _internal_damage() const;
  void _internal_set_damage(float value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelEntityMsg_BreakablePropSpawnDebris)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CEntityMsg* entity_msg_;
    ::CMsgVector* damage_pos_;
    float damage_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ReturnIdol /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ReturnIdol) */ {
 public:
  inline CCitadelUserMsg_ReturnIdol() : CCitadelUserMsg_ReturnIdol(nullptr) {}
  ~CCitadelUserMsg_ReturnIdol() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ReturnIdol(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ReturnIdol(const CCitadelUserMsg_ReturnIdol& from);
  CCitadelUserMsg_ReturnIdol(CCitadelUserMsg_ReturnIdol&& from) noexcept
    : CCitadelUserMsg_ReturnIdol() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ReturnIdol& operator=(const CCitadelUserMsg_ReturnIdol& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ReturnIdol& operator=(CCitadelUserMsg_ReturnIdol&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ReturnIdol& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ReturnIdol* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ReturnIdol*>(
               &_CCitadelUserMsg_ReturnIdol_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CCitadelUserMsg_ReturnIdol& a, CCitadelUserMsg_ReturnIdol& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ReturnIdol* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ReturnIdol* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ReturnIdol* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ReturnIdol>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_ReturnIdol& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_ReturnIdol& from) {
    CCitadelUserMsg_ReturnIdol::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_ReturnIdol* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ReturnIdol";
  }
  protected:
  explicit CCitadelUserMsg_ReturnIdol(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnLocationFieldNumber = 2,
    kLocationIndexFieldNumber = 1,
    kLocationEnabledFieldNumber = 3,
  };
  // optional .CMsgVector return_location = 2;
  bool has_return_location() const;
  private:
  bool _internal_has_return_location() const;
  public:
  void clear_return_location();
  const ::CMsgVector& return_location() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_return_location();
  ::CMsgVector* mutable_return_location();
  void set_allocated_return_location(::CMsgVector* return_location);
  private:
  const ::CMsgVector& _internal_return_location() const;
  ::CMsgVector* _internal_mutable_return_location();
  public:
  void unsafe_arena_set_allocated_return_location(
      ::CMsgVector* return_location);
  ::CMsgVector* unsafe_arena_release_return_location();

  // optional int32 location_index = 1;
  bool has_location_index() const;
  private:
  bool _internal_has_location_index() const;
  public:
  void clear_location_index();
  int32_t location_index() const;
  void set_location_index(int32_t value);
  private:
  int32_t _internal_location_index() const;
  void _internal_set_location_index(int32_t value);
  public:

  // optional bool location_enabled = 3;
  bool has_location_enabled() const;
  private:
  bool _internal_has_location_enabled() const;
  public:
  void clear_location_enabled();
  bool location_enabled() const;
  void set_location_enabled(bool value);
  private:
  bool _internal_location_enabled() const;
  void _internal_set_location_enabled(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ReturnIdol)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgVector* return_location_;
    int32_t location_index_;
    bool location_enabled_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_SetClientCameraAngles /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_SetClientCameraAngles) */ {
 public:
  inline CCitadelUserMsg_SetClientCameraAngles() : CCitadelUserMsg_SetClientCameraAngles(nullptr) {}
  ~CCitadelUserMsg_SetClientCameraAngles() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_SetClientCameraAngles(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_SetClientCameraAngles(const CCitadelUserMsg_SetClientCameraAngles& from);
  CCitadelUserMsg_SetClientCameraAngles(CCitadelUserMsg_SetClientCameraAngles&& from) noexcept
    : CCitadelUserMsg_SetClientCameraAngles() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_SetClientCameraAngles& operator=(const CCitadelUserMsg_SetClientCameraAngles& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_SetClientCameraAngles& operator=(CCitadelUserMsg_SetClientCameraAngles&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_SetClientCameraAngles& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_SetClientCameraAngles* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_SetClientCameraAngles*>(
               &_CCitadelUserMsg_SetClientCameraAngles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CCitadelUserMsg_SetClientCameraAngles& a, CCitadelUserMsg_SetClientCameraAngles& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_SetClientCameraAngles* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_SetClientCameraAngles* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_SetClientCameraAngles* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_SetClientCameraAngles>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_SetClientCameraAngles& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_SetClientCameraAngles& from) {
    CCitadelUserMsg_SetClientCameraAngles::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_SetClientCameraAngles* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_SetClientCameraAngles";
  }
  protected:
  explicit CCitadelUserMsg_SetClientCameraAngles(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCameraAnglesFieldNumber = 2,
    kPlayerSlotFieldNumber = 1,
  };
  // optional .CMsgQAngle camera_angles = 2;
  bool has_camera_angles() const;
  private:
  bool _internal_has_camera_angles() const;
  public:
  void clear_camera_angles();
  const ::CMsgQAngle& camera_angles() const;
  PROTOBUF_NODISCARD ::CMsgQAngle* release_camera_angles();
  ::CMsgQAngle* mutable_camera_angles();
  void set_allocated_camera_angles(::CMsgQAngle* camera_angles);
  private:
  const ::CMsgQAngle& _internal_camera_angles() const;
  ::CMsgQAngle* _internal_mutable_camera_angles();
  public:
  void unsafe_arena_set_allocated_camera_angles(
      ::CMsgQAngle* camera_angles);
  ::CMsgQAngle* unsafe_arena_release_camera_angles();

  // optional int32 player_slot = 1 [default = -1];
  bool has_player_slot() const;
  private:
  bool _internal_has_player_slot() const;
  public:
  void clear_player_slot();
  int32_t player_slot() const;
  void set_player_slot(int32_t value);
  private:
  int32_t _internal_player_slot() const;
  void _internal_set_player_slot(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_SetClientCameraAngles)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgQAngle* camera_angles_;
    int32_t player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMessage_BulletHit /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMessage_BulletHit) */ {
 public:
  inline CCitadelUserMessage_BulletHit() : CCitadelUserMessage_BulletHit(nullptr) {}
  ~CCitadelUserMessage_BulletHit() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMessage_BulletHit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMessage_BulletHit(const CCitadelUserMessage_BulletHit& from);
  CCitadelUserMessage_BulletHit(CCitadelUserMessage_BulletHit&& from) noexcept
    : CCitadelUserMessage_BulletHit() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMessage_BulletHit& operator=(const CCitadelUserMessage_BulletHit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMessage_BulletHit& operator=(CCitadelUserMessage_BulletHit&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMessage_BulletHit& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMessage_BulletHit* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMessage_BulletHit*>(
               &_CCitadelUserMessage_BulletHit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CCitadelUserMessage_BulletHit& a, CCitadelUserMessage_BulletHit& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMessage_BulletHit* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMessage_BulletHit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMessage_BulletHit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMessage_BulletHit>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMessage_BulletHit& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMessage_BulletHit& from) {
    CCitadelUserMessage_BulletHit::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMessage_BulletHit* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMessage_BulletHit";
  }
  protected:
  explicit CCitadelUserMessage_BulletHit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShotidFieldNumber = 1,
    kPelletFieldNumber = 2,
    kHitEntindexFieldNumber = 3,
  };
  // optional int32 shotid = 1;
  bool has_shotid() const;
  private:
  bool _internal_has_shotid() const;
  public:
  void clear_shotid();
  int32_t shotid() const;
  void set_shotid(int32_t value);
  private:
  int32_t _internal_shotid() const;
  void _internal_set_shotid(int32_t value);
  public:

  // optional int32 pellet = 2;
  bool has_pellet() const;
  private:
  bool _internal_has_pellet() const;
  public:
  void clear_pellet();
  int32_t pellet() const;
  void set_pellet(int32_t value);
  private:
  int32_t _internal_pellet() const;
  void _internal_set_pellet(int32_t value);
  public:

  // optional int32 hit_entindex = 3 [default = -1];
  bool has_hit_entindex() const;
  private:
  bool _internal_has_hit_entindex() const;
  public:
  void clear_hit_entindex();
  int32_t hit_entindex() const;
  void set_hit_entindex(int32_t value);
  private:
  int32_t _internal_hit_entindex() const;
  void _internal_set_hit_entindex(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMessage_BulletHit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t shotid_;
    int32_t pellet_;
    int32_t hit_entindex_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMessage_ObjectiveMask /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMessage_ObjectiveMask) */ {
 public:
  inline CCitadelUserMessage_ObjectiveMask() : CCitadelUserMessage_ObjectiveMask(nullptr) {}
  ~CCitadelUserMessage_ObjectiveMask() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMessage_ObjectiveMask(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMessage_ObjectiveMask(const CCitadelUserMessage_ObjectiveMask& from);
  CCitadelUserMessage_ObjectiveMask(CCitadelUserMessage_ObjectiveMask&& from) noexcept
    : CCitadelUserMessage_ObjectiveMask() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMessage_ObjectiveMask& operator=(const CCitadelUserMessage_ObjectiveMask& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMessage_ObjectiveMask& operator=(CCitadelUserMessage_ObjectiveMask&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMessage_ObjectiveMask& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMessage_ObjectiveMask* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMessage_ObjectiveMask*>(
               &_CCitadelUserMessage_ObjectiveMask_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CCitadelUserMessage_ObjectiveMask& a, CCitadelUserMessage_ObjectiveMask& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMessage_ObjectiveMask* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMessage_ObjectiveMask* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMessage_ObjectiveMask* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMessage_ObjectiveMask>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMessage_ObjectiveMask& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMessage_ObjectiveMask& from) {
    CCitadelUserMessage_ObjectiveMask::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMessage_ObjectiveMask* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMessage_ObjectiveMask";
  }
  protected:
  explicit CCitadelUserMessage_ObjectiveMask(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectiveMaskTeam0FieldNumber = 2,
    kObjectiveMaskTeam1FieldNumber = 3,
  };
  // optional uint64 objective_mask_team0 = 2;
  bool has_objective_mask_team0() const;
  private:
  bool _internal_has_objective_mask_team0() const;
  public:
  void clear_objective_mask_team0();
  uint64_t objective_mask_team0() const;
  void set_objective_mask_team0(uint64_t value);
  private:
  uint64_t _internal_objective_mask_team0() const;
  void _internal_set_objective_mask_team0(uint64_t value);
  public:

  // optional uint64 objective_mask_team1 = 3;
  bool has_objective_mask_team1() const;
  private:
  bool _internal_has_objective_mask_team1() const;
  public:
  void clear_objective_mask_team1();
  uint64_t objective_mask_team1() const;
  void set_objective_mask_team1(uint64_t value);
  private:
  uint64_t _internal_objective_mask_team1() const;
  void _internal_set_objective_mask_team1(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMessage_ObjectiveMask)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t objective_mask_team0_;
    uint64_t objective_mask_team1_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMessage_ModifierApplied /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMessage_ModifierApplied) */ {
 public:
  inline CCitadelUserMessage_ModifierApplied() : CCitadelUserMessage_ModifierApplied(nullptr) {}
  ~CCitadelUserMessage_ModifierApplied() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMessage_ModifierApplied(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMessage_ModifierApplied(const CCitadelUserMessage_ModifierApplied& from);
  CCitadelUserMessage_ModifierApplied(CCitadelUserMessage_ModifierApplied&& from) noexcept
    : CCitadelUserMessage_ModifierApplied() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMessage_ModifierApplied& operator=(const CCitadelUserMessage_ModifierApplied& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMessage_ModifierApplied& operator=(CCitadelUserMessage_ModifierApplied&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMessage_ModifierApplied& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMessage_ModifierApplied* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMessage_ModifierApplied*>(
               &_CCitadelUserMessage_ModifierApplied_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CCitadelUserMessage_ModifierApplied& a, CCitadelUserMessage_ModifierApplied& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMessage_ModifierApplied* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMessage_ModifierApplied* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMessage_ModifierApplied* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMessage_ModifierApplied>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMessage_ModifierApplied& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMessage_ModifierApplied& from) {
    CCitadelUserMessage_ModifierApplied::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMessage_ModifierApplied* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMessage_ModifierApplied";
  }
  protected:
  explicit CCitadelUserMessage_ModifierApplied(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSerialNumberFieldNumber = 3,
    kEntindexCasterFieldNumber = 1,
    kEntindexParentFieldNumber = 2,
  };
  // optional int32 serial_number = 3;
  bool has_serial_number() const;
  private:
  bool _internal_has_serial_number() const;
  public:
  void clear_serial_number();
  int32_t serial_number() const;
  void set_serial_number(int32_t value);
  private:
  int32_t _internal_serial_number() const;
  void _internal_set_serial_number(int32_t value);
  public:

  // optional int32 entindex_caster = 1 [default = -1];
  bool has_entindex_caster() const;
  private:
  bool _internal_has_entindex_caster() const;
  public:
  void clear_entindex_caster();
  int32_t entindex_caster() const;
  void set_entindex_caster(int32_t value);
  private:
  int32_t _internal_entindex_caster() const;
  void _internal_set_entindex_caster(int32_t value);
  public:

  // optional int32 entindex_parent = 2 [default = -1];
  bool has_entindex_parent() const;
  private:
  bool _internal_has_entindex_parent() const;
  public:
  void clear_entindex_parent();
  int32_t entindex_parent() const;
  void set_entindex_parent(int32_t value);
  private:
  int32_t _internal_entindex_parent() const;
  void _internal_set_entindex_parent(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMessage_ModifierApplied)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t serial_number_;
    int32_t entindex_caster_;
    int32_t entindex_parent_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMessage_AuraModifierApplied /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMessage_AuraModifierApplied) */ {
 public:
  inline CCitadelUserMessage_AuraModifierApplied() : CCitadelUserMessage_AuraModifierApplied(nullptr) {}
  ~CCitadelUserMessage_AuraModifierApplied() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMessage_AuraModifierApplied(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMessage_AuraModifierApplied(const CCitadelUserMessage_AuraModifierApplied& from);
  CCitadelUserMessage_AuraModifierApplied(CCitadelUserMessage_AuraModifierApplied&& from) noexcept
    : CCitadelUserMessage_AuraModifierApplied() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMessage_AuraModifierApplied& operator=(const CCitadelUserMessage_AuraModifierApplied& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMessage_AuraModifierApplied& operator=(CCitadelUserMessage_AuraModifierApplied&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMessage_AuraModifierApplied& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMessage_AuraModifierApplied* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMessage_AuraModifierApplied*>(
               &_CCitadelUserMessage_AuraModifierApplied_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CCitadelUserMessage_AuraModifierApplied& a, CCitadelUserMessage_AuraModifierApplied& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMessage_AuraModifierApplied* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMessage_AuraModifierApplied* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMessage_AuraModifierApplied* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMessage_AuraModifierApplied>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMessage_AuraModifierApplied& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMessage_AuraModifierApplied& from) {
    CCitadelUserMessage_AuraModifierApplied::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMessage_AuraModifierApplied* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMessage_AuraModifierApplied";
  }
  protected:
  explicit CCitadelUserMessage_AuraModifierApplied(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModifierTypeIdFieldNumber = 3,
    kModifierSerialNumberFieldNumber = 4,
    kAuraStartTimeFieldNumber = 5,
    kAuraEndTimeFieldNumber = 6,
    kEntindexCasterFieldNumber = 1,
    kEntindexTargetFieldNumber = 2,
  };
  // optional uint32 modifier_type_id = 3;
  bool has_modifier_type_id() const;
  private:
  bool _internal_has_modifier_type_id() const;
  public:
  void clear_modifier_type_id();
  uint32_t modifier_type_id() const;
  void set_modifier_type_id(uint32_t value);
  private:
  uint32_t _internal_modifier_type_id() const;
  void _internal_set_modifier_type_id(uint32_t value);
  public:

  // optional int32 modifier_serial_number = 4;
  bool has_modifier_serial_number() const;
  private:
  bool _internal_has_modifier_serial_number() const;
  public:
  void clear_modifier_serial_number();
  int32_t modifier_serial_number() const;
  void set_modifier_serial_number(int32_t value);
  private:
  int32_t _internal_modifier_serial_number() const;
  void _internal_set_modifier_serial_number(int32_t value);
  public:

  // optional float aura_start_time = 5;
  bool has_aura_start_time() const;
  private:
  bool _internal_has_aura_start_time() const;
  public:
  void clear_aura_start_time();
  float aura_start_time() const;
  void set_aura_start_time(float value);
  private:
  float _internal_aura_start_time() const;
  void _internal_set_aura_start_time(float value);
  public:

  // optional float aura_end_time = 6;
  bool has_aura_end_time() const;
  private:
  bool _internal_has_aura_end_time() const;
  public:
  void clear_aura_end_time();
  float aura_end_time() const;
  void set_aura_end_time(float value);
  private:
  float _internal_aura_end_time() const;
  void _internal_set_aura_end_time(float value);
  public:

  // optional int32 entindex_caster = 1 [default = -1];
  bool has_entindex_caster() const;
  private:
  bool _internal_has_entindex_caster() const;
  public:
  void clear_entindex_caster();
  int32_t entindex_caster() const;
  void set_entindex_caster(int32_t value);
  private:
  int32_t _internal_entindex_caster() const;
  void _internal_set_entindex_caster(int32_t value);
  public:

  // optional int32 entindex_target = 2 [default = -1];
  bool has_entindex_target() const;
  private:
  bool _internal_has_entindex_target() const;
  public:
  void clear_entindex_target();
  int32_t entindex_target() const;
  void set_entindex_target(int32_t value);
  private:
  int32_t _internal_entindex_target() const;
  void _internal_set_entindex_target(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMessage_AuraModifierApplied)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t modifier_type_id_;
    int32_t modifier_serial_number_;
    float aura_start_time_;
    float aura_end_time_;
    int32_t entindex_caster_;
    int32_t entindex_target_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ObstructedShotFired /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ObstructedShotFired) */ {
 public:
  inline CCitadelUserMsg_ObstructedShotFired() : CCitadelUserMsg_ObstructedShotFired(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ObstructedShotFired(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ObstructedShotFired(const CCitadelUserMsg_ObstructedShotFired& from);
  CCitadelUserMsg_ObstructedShotFired(CCitadelUserMsg_ObstructedShotFired&& from) noexcept
    : CCitadelUserMsg_ObstructedShotFired() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ObstructedShotFired& operator=(const CCitadelUserMsg_ObstructedShotFired& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ObstructedShotFired& operator=(CCitadelUserMsg_ObstructedShotFired&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ObstructedShotFired& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ObstructedShotFired* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ObstructedShotFired*>(
               &_CCitadelUserMsg_ObstructedShotFired_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CCitadelUserMsg_ObstructedShotFired& a, CCitadelUserMsg_ObstructedShotFired& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ObstructedShotFired* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ObstructedShotFired* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ObstructedShotFired* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ObstructedShotFired>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CCitadelUserMsg_ObstructedShotFired& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CCitadelUserMsg_ObstructedShotFired& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ObstructedShotFired";
  }
  protected:
  explicit CCitadelUserMsg_ObstructedShotFired(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ObstructedShotFired)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_PostProcessingAnim /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_PostProcessingAnim) */ {
 public:
  inline CCitadelUserMsg_PostProcessingAnim() : CCitadelUserMsg_PostProcessingAnim(nullptr) {}
  ~CCitadelUserMsg_PostProcessingAnim() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_PostProcessingAnim(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_PostProcessingAnim(const CCitadelUserMsg_PostProcessingAnim& from);
  CCitadelUserMsg_PostProcessingAnim(CCitadelUserMsg_PostProcessingAnim&& from) noexcept
    : CCitadelUserMsg_PostProcessingAnim() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_PostProcessingAnim& operator=(const CCitadelUserMsg_PostProcessingAnim& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_PostProcessingAnim& operator=(CCitadelUserMsg_PostProcessingAnim&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_PostProcessingAnim& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_PostProcessingAnim* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_PostProcessingAnim*>(
               &_CCitadelUserMsg_PostProcessingAnim_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CCitadelUserMsg_PostProcessingAnim& a, CCitadelUserMsg_PostProcessingAnim& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_PostProcessingAnim* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_PostProcessingAnim* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_PostProcessingAnim* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_PostProcessingAnim>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_PostProcessingAnim& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_PostProcessingAnim& from) {
    CCitadelUserMsg_PostProcessingAnim::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_PostProcessingAnim* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_PostProcessingAnim";
  }
  protected:
  explicit CCitadelUserMsg_PostProcessingAnim(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClearAllStatesFieldNumber = 2,
    kStateFieldNumber = 3,
    kStartTimeFieldNumber = 4,
    kFadeInTimeFieldNumber = 5,
    kHoldTimeFieldNumber = 6,
    kFadeOutTimeFieldNumber = 7,
    kScaleFieldNumber = 8,
    kEntindexOwnerFieldNumber = 1,
  };
  // optional bool clear_all_states = 2;
  bool has_clear_all_states() const;
  private:
  bool _internal_has_clear_all_states() const;
  public:
  void clear_clear_all_states();
  bool clear_all_states() const;
  void set_clear_all_states(bool value);
  private:
  bool _internal_clear_all_states() const;
  void _internal_set_clear_all_states(bool value);
  public:

  // optional .PostProcessingGameStates state = 3 [default = PostProcState_Killed];
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PostProcessingGameStates state() const;
  void set_state(::PostProcessingGameStates value);
  private:
  ::PostProcessingGameStates _internal_state() const;
  void _internal_set_state(::PostProcessingGameStates value);
  public:

  // optional float start_time = 4;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  float start_time() const;
  void set_start_time(float value);
  private:
  float _internal_start_time() const;
  void _internal_set_start_time(float value);
  public:

  // optional float fade_in_time = 5;
  bool has_fade_in_time() const;
  private:
  bool _internal_has_fade_in_time() const;
  public:
  void clear_fade_in_time();
  float fade_in_time() const;
  void set_fade_in_time(float value);
  private:
  float _internal_fade_in_time() const;
  void _internal_set_fade_in_time(float value);
  public:

  // optional float hold_time = 6;
  bool has_hold_time() const;
  private:
  bool _internal_has_hold_time() const;
  public:
  void clear_hold_time();
  float hold_time() const;
  void set_hold_time(float value);
  private:
  float _internal_hold_time() const;
  void _internal_set_hold_time(float value);
  public:

  // optional float fade_out_time = 7;
  bool has_fade_out_time() const;
  private:
  bool _internal_has_fade_out_time() const;
  public:
  void clear_fade_out_time();
  float fade_out_time() const;
  void set_fade_out_time(float value);
  private:
  float _internal_fade_out_time() const;
  void _internal_set_fade_out_time(float value);
  public:

  // optional float scale = 8;
  bool has_scale() const;
  private:
  bool _internal_has_scale() const;
  public:
  void clear_scale();
  float scale() const;
  void set_scale(float value);
  private:
  float _internal_scale() const;
  void _internal_set_scale(float value);
  public:

  // optional int32 entindex_owner = 1 [default = -1];
  bool has_entindex_owner() const;
  private:
  bool _internal_has_entindex_owner() const;
  public:
  void clear_entindex_owner();
  int32_t entindex_owner() const;
  void set_entindex_owner(int32_t value);
  private:
  int32_t _internal_entindex_owner() const;
  void _internal_set_entindex_owner(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_PostProcessingAnim)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool clear_all_states_;
    int state_;
    float start_time_;
    float fade_in_time_;
    float hold_time_;
    float fade_out_time_;
    float scale_;
    int32_t entindex_owner_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_DeathReplayData /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_DeathReplayData) */ {
 public:
  inline CCitadelUserMsg_DeathReplayData() : CCitadelUserMsg_DeathReplayData(nullptr) {}
  ~CCitadelUserMsg_DeathReplayData() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_DeathReplayData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_DeathReplayData(const CCitadelUserMsg_DeathReplayData& from);
  CCitadelUserMsg_DeathReplayData(CCitadelUserMsg_DeathReplayData&& from) noexcept
    : CCitadelUserMsg_DeathReplayData() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_DeathReplayData& operator=(const CCitadelUserMsg_DeathReplayData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_DeathReplayData& operator=(CCitadelUserMsg_DeathReplayData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_DeathReplayData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_DeathReplayData* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_DeathReplayData*>(
               &_CCitadelUserMsg_DeathReplayData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CCitadelUserMsg_DeathReplayData& a, CCitadelUserMsg_DeathReplayData& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_DeathReplayData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_DeathReplayData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_DeathReplayData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_DeathReplayData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_DeathReplayData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_DeathReplayData& from) {
    CCitadelUserMsg_DeathReplayData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_DeathReplayData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_DeathReplayData";
  }
  protected:
  explicit CCitadelUserMsg_DeathReplayData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDamageSummaryFieldNumber = 3,
    kKillerScorerFieldNumber = 1,
    kKillerInflictorFieldNumber = 2,
  };
  // optional .CCitadelUserMsg_RecentDamageSummary damage_summary = 3;
  bool has_damage_summary() const;
  private:
  bool _internal_has_damage_summary() const;
  public:
  void clear_damage_summary();
  const ::CCitadelUserMsg_RecentDamageSummary& damage_summary() const;
  PROTOBUF_NODISCARD ::CCitadelUserMsg_RecentDamageSummary* release_damage_summary();
  ::CCitadelUserMsg_RecentDamageSummary* mutable_damage_summary();
  void set_allocated_damage_summary(::CCitadelUserMsg_RecentDamageSummary* damage_summary);
  private:
  const ::CCitadelUserMsg_RecentDamageSummary& _internal_damage_summary() const;
  ::CCitadelUserMsg_RecentDamageSummary* _internal_mutable_damage_summary();
  public:
  void unsafe_arena_set_allocated_damage_summary(
      ::CCitadelUserMsg_RecentDamageSummary* damage_summary);
  ::CCitadelUserMsg_RecentDamageSummary* unsafe_arena_release_damage_summary();

  // optional int32 killer_scorer = 1 [default = -1];
  bool has_killer_scorer() const;
  private:
  bool _internal_has_killer_scorer() const;
  public:
  void clear_killer_scorer();
  int32_t killer_scorer() const;
  void set_killer_scorer(int32_t value);
  private:
  int32_t _internal_killer_scorer() const;
  void _internal_set_killer_scorer(int32_t value);
  public:

  // optional int32 killer_inflictor = 2 [default = -1];
  bool has_killer_inflictor() const;
  private:
  bool _internal_has_killer_inflictor() const;
  public:
  void clear_killer_inflictor();
  int32_t killer_inflictor() const;
  void set_killer_inflictor(int32_t value);
  private:
  int32_t _internal_killer_inflictor() const;
  void _internal_set_killer_inflictor(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_DeathReplayData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CCitadelUserMsg_RecentDamageSummary* damage_summary_;
    int32_t killer_scorer_;
    int32_t killer_inflictor_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ForceShopClosed /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ForceShopClosed) */ {
 public:
  inline CCitadelUserMsg_ForceShopClosed() : CCitadelUserMsg_ForceShopClosed(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ForceShopClosed(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ForceShopClosed(const CCitadelUserMsg_ForceShopClosed& from);
  CCitadelUserMsg_ForceShopClosed(CCitadelUserMsg_ForceShopClosed&& from) noexcept
    : CCitadelUserMsg_ForceShopClosed() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ForceShopClosed& operator=(const CCitadelUserMsg_ForceShopClosed& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ForceShopClosed& operator=(CCitadelUserMsg_ForceShopClosed&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ForceShopClosed& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ForceShopClosed* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ForceShopClosed*>(
               &_CCitadelUserMsg_ForceShopClosed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CCitadelUserMsg_ForceShopClosed& a, CCitadelUserMsg_ForceShopClosed& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ForceShopClosed* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ForceShopClosed* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ForceShopClosed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ForceShopClosed>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CCitadelUserMsg_ForceShopClosed& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CCitadelUserMsg_ForceShopClosed& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ForceShopClosed";
  }
  protected:
  explicit CCitadelUserMsg_ForceShopClosed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ForceShopClosed)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_PlayerLifetimeStatInfo_Stat /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat) */ {
 public:
  inline CCitadelUserMsg_PlayerLifetimeStatInfo_Stat() : CCitadelUserMsg_PlayerLifetimeStatInfo_Stat(nullptr) {}
  ~CCitadelUserMsg_PlayerLifetimeStatInfo_Stat() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_PlayerLifetimeStatInfo_Stat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_PlayerLifetimeStatInfo_Stat(const CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& from);
  CCitadelUserMsg_PlayerLifetimeStatInfo_Stat(CCitadelUserMsg_PlayerLifetimeStatInfo_Stat&& from) noexcept
    : CCitadelUserMsg_PlayerLifetimeStatInfo_Stat() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& operator=(const CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& operator=(CCitadelUserMsg_PlayerLifetimeStatInfo_Stat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_PlayerLifetimeStatInfo_Stat*>(
               &_CCitadelUserMsg_PlayerLifetimeStatInfo_Stat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& a, CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_PlayerLifetimeStatInfo_Stat>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& from) {
    CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_PlayerLifetimeStatInfo.Stat";
  }
  protected:
  explicit CCitadelUserMsg_PlayerLifetimeStatInfo_Stat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatNameFieldNumber = 1,
    kMatchTotalFieldNumber = 2,
    kLifetimeValueFieldNumber = 3,
    kPriorityFieldNumber = 4,
    kPrevLifetimeMaxFieldNumber = 5,
    kStatTypeFieldNumber = 6,
    kStatTypeIdFieldNumber = 7,
  };
  // optional string stat_name = 1;
  bool has_stat_name() const;
  private:
  bool _internal_has_stat_name() const;
  public:
  void clear_stat_name();
  const std::string& stat_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_stat_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_stat_name();
  PROTOBUF_NODISCARD std::string* release_stat_name();
  void set_allocated_stat_name(std::string* stat_name);
  private:
  const std::string& _internal_stat_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stat_name(const std::string& value);
  std::string* _internal_mutable_stat_name();
  public:

  // optional uint32 match_total = 2;
  bool has_match_total() const;
  private:
  bool _internal_has_match_total() const;
  public:
  void clear_match_total();
  uint32_t match_total() const;
  void set_match_total(uint32_t value);
  private:
  uint32_t _internal_match_total() const;
  void _internal_set_match_total(uint32_t value);
  public:

  // optional uint32 lifetime_value = 3;
  bool has_lifetime_value() const;
  private:
  bool _internal_has_lifetime_value() const;
  public:
  void clear_lifetime_value();
  uint32_t lifetime_value() const;
  void set_lifetime_value(uint32_t value);
  private:
  uint32_t _internal_lifetime_value() const;
  void _internal_set_lifetime_value(uint32_t value);
  public:

  // optional uint32 priority = 4;
  bool has_priority() const;
  private:
  bool _internal_has_priority() const;
  public:
  void clear_priority();
  uint32_t priority() const;
  void set_priority(uint32_t value);
  private:
  uint32_t _internal_priority() const;
  void _internal_set_priority(uint32_t value);
  public:

  // optional uint32 prev_lifetime_max = 5;
  bool has_prev_lifetime_max() const;
  private:
  bool _internal_has_prev_lifetime_max() const;
  public:
  void clear_prev_lifetime_max();
  uint32_t prev_lifetime_max() const;
  void set_prev_lifetime_max(uint32_t value);
  private:
  uint32_t _internal_prev_lifetime_max() const;
  void _internal_set_prev_lifetime_max(uint32_t value);
  public:

  // optional uint32 stat_type = 6;
  bool has_stat_type() const;
  private:
  bool _internal_has_stat_type() const;
  public:
  void clear_stat_type();
  uint32_t stat_type() const;
  void set_stat_type(uint32_t value);
  private:
  uint32_t _internal_stat_type() const;
  void _internal_set_stat_type(uint32_t value);
  public:

  // optional uint32 stat_type_id = 7;
  bool has_stat_type_id() const;
  private:
  bool _internal_has_stat_type_id() const;
  public:
  void clear_stat_type_id();
  uint32_t stat_type_id() const;
  void set_stat_type_id(uint32_t value);
  private:
  uint32_t _internal_stat_type_id() const;
  void _internal_set_stat_type_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stat_name_;
    uint32_t match_total_;
    uint32_t lifetime_value_;
    uint32_t priority_;
    uint32_t prev_lifetime_max_;
    uint32_t stat_type_;
    uint32_t stat_type_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_PlayerLifetimeStatInfo /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_PlayerLifetimeStatInfo) */ {
 public:
  inline CCitadelUserMsg_PlayerLifetimeStatInfo() : CCitadelUserMsg_PlayerLifetimeStatInfo(nullptr) {}
  ~CCitadelUserMsg_PlayerLifetimeStatInfo() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_PlayerLifetimeStatInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_PlayerLifetimeStatInfo(const CCitadelUserMsg_PlayerLifetimeStatInfo& from);
  CCitadelUserMsg_PlayerLifetimeStatInfo(CCitadelUserMsg_PlayerLifetimeStatInfo&& from) noexcept
    : CCitadelUserMsg_PlayerLifetimeStatInfo() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_PlayerLifetimeStatInfo& operator=(const CCitadelUserMsg_PlayerLifetimeStatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_PlayerLifetimeStatInfo& operator=(CCitadelUserMsg_PlayerLifetimeStatInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_PlayerLifetimeStatInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_PlayerLifetimeStatInfo* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_PlayerLifetimeStatInfo*>(
               &_CCitadelUserMsg_PlayerLifetimeStatInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CCitadelUserMsg_PlayerLifetimeStatInfo& a, CCitadelUserMsg_PlayerLifetimeStatInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_PlayerLifetimeStatInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_PlayerLifetimeStatInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_PlayerLifetimeStatInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_PlayerLifetimeStatInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_PlayerLifetimeStatInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_PlayerLifetimeStatInfo& from) {
    CCitadelUserMsg_PlayerLifetimeStatInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_PlayerLifetimeStatInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_PlayerLifetimeStatInfo";
  }
  protected:
  explicit CCitadelUserMsg_PlayerLifetimeStatInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CCitadelUserMsg_PlayerLifetimeStatInfo_Stat Stat;

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 1,
    kMatchIdFieldNumber = 2,
    kEndOfMatchFieldNumber = 3,
    kIsOfficialMatchFieldNumber = 4,
  };
  // repeated .CCitadelUserMsg_PlayerLifetimeStatInfo.Stat stats = 1;
  int stats_size() const;
  private:
  int _internal_stats_size() const;
  public:
  void clear_stats();
  ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* mutable_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat >*
      mutable_stats();
  private:
  const ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& _internal_stats(int index) const;
  ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* _internal_add_stats();
  public:
  const ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& stats(int index) const;
  ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* add_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat >&
      stats() const;

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional bool end_of_match = 3;
  bool has_end_of_match() const;
  private:
  bool _internal_has_end_of_match() const;
  public:
  void clear_end_of_match();
  bool end_of_match() const;
  void set_end_of_match(bool value);
  private:
  bool _internal_end_of_match() const;
  void _internal_set_end_of_match(bool value);
  public:

  // optional bool is_official_match = 4;
  bool has_is_official_match() const;
  private:
  bool _internal_has_is_official_match() const;
  public:
  void clear_is_official_match();
  bool is_official_match() const;
  void set_is_official_match(bool value);
  private:
  bool _internal_is_official_match() const;
  void _internal_set_is_official_match(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_PlayerLifetimeStatInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat > stats_;
    uint64_t match_id_;
    bool end_of_match_;
    bool is_official_match_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_StaminaDrained /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_StaminaDrained) */ {
 public:
  inline CCitadelUserMsg_StaminaDrained() : CCitadelUserMsg_StaminaDrained(nullptr) {}
  ~CCitadelUserMsg_StaminaDrained() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_StaminaDrained(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_StaminaDrained(const CCitadelUserMsg_StaminaDrained& from);
  CCitadelUserMsg_StaminaDrained(CCitadelUserMsg_StaminaDrained&& from) noexcept
    : CCitadelUserMsg_StaminaDrained() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_StaminaDrained& operator=(const CCitadelUserMsg_StaminaDrained& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_StaminaDrained& operator=(CCitadelUserMsg_StaminaDrained&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_StaminaDrained& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_StaminaDrained* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_StaminaDrained*>(
               &_CCitadelUserMsg_StaminaDrained_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CCitadelUserMsg_StaminaDrained& a, CCitadelUserMsg_StaminaDrained& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_StaminaDrained* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_StaminaDrained* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_StaminaDrained* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_StaminaDrained>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_StaminaDrained& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_StaminaDrained& from) {
    CCitadelUserMsg_StaminaDrained::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_StaminaDrained* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_StaminaDrained";
  }
  protected:
  explicit CCitadelUserMsg_StaminaDrained(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStaminaDrainedFieldNumber = 2,
    kEntindexVictimFieldNumber = 1,
  };
  // optional int32 stamina_drained = 2;
  bool has_stamina_drained() const;
  private:
  bool _internal_has_stamina_drained() const;
  public:
  void clear_stamina_drained();
  int32_t stamina_drained() const;
  void set_stamina_drained(int32_t value);
  private:
  int32_t _internal_stamina_drained() const;
  void _internal_set_stamina_drained(int32_t value);
  public:

  // optional int32 entindex_victim = 1 [default = -1];
  bool has_entindex_victim() const;
  private:
  bool _internal_has_entindex_victim() const;
  public:
  void clear_entindex_victim();
  int32_t entindex_victim() const;
  void set_entindex_victim(int32_t value);
  private:
  int32_t _internal_entindex_victim() const;
  void _internal_set_entindex_victim(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_StaminaDrained)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t stamina_drained_;
    int32_t entindex_victim_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMessage_AbilityNotify /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMessage_AbilityNotify) */ {
 public:
  inline CCitadelUserMessage_AbilityNotify() : CCitadelUserMessage_AbilityNotify(nullptr) {}
  ~CCitadelUserMessage_AbilityNotify() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMessage_AbilityNotify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMessage_AbilityNotify(const CCitadelUserMessage_AbilityNotify& from);
  CCitadelUserMessage_AbilityNotify(CCitadelUserMessage_AbilityNotify&& from) noexcept
    : CCitadelUserMessage_AbilityNotify() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMessage_AbilityNotify& operator=(const CCitadelUserMessage_AbilityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMessage_AbilityNotify& operator=(CCitadelUserMessage_AbilityNotify&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMessage_AbilityNotify& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMessage_AbilityNotify* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMessage_AbilityNotify*>(
               &_CCitadelUserMessage_AbilityNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CCitadelUserMessage_AbilityNotify& a, CCitadelUserMessage_AbilityNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMessage_AbilityNotify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMessage_AbilityNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMessage_AbilityNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMessage_AbilityNotify>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMessage_AbilityNotify& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMessage_AbilityNotify& from) {
    CCitadelUserMessage_AbilityNotify::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMessage_AbilityNotify* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMessage_AbilityNotify";
  }
  protected:
  explicit CCitadelUserMessage_AbilityNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbilityIdFieldNumber = 3,
    kEntindexVictimFieldNumber = 1,
    kEntindexAttackerFieldNumber = 2,
  };
  // optional uint32 ability_id = 3;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  uint32_t ability_id() const;
  void set_ability_id(uint32_t value);
  private:
  uint32_t _internal_ability_id() const;
  void _internal_set_ability_id(uint32_t value);
  public:

  // optional int32 entindex_victim = 1 [default = -1];
  bool has_entindex_victim() const;
  private:
  bool _internal_has_entindex_victim() const;
  public:
  void clear_entindex_victim();
  int32_t entindex_victim() const;
  void set_entindex_victim(int32_t value);
  private:
  int32_t _internal_entindex_victim() const;
  void _internal_set_entindex_victim(int32_t value);
  public:

  // optional int32 entindex_attacker = 2 [default = -1];
  bool has_entindex_attacker() const;
  private:
  bool _internal_has_entindex_attacker() const;
  public:
  void clear_entindex_attacker();
  int32_t entindex_attacker() const;
  void set_entindex_attacker(int32_t value);
  private:
  int32_t _internal_entindex_attacker() const;
  void _internal_set_entindex_attacker(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMessage_AbilityNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t ability_id_;
    int32_t entindex_victim_;
    int32_t entindex_attacker_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMessage_CurrencyChanged /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMessage_CurrencyChanged) */ {
 public:
  inline CCitadelUserMessage_CurrencyChanged() : CCitadelUserMessage_CurrencyChanged(nullptr) {}
  ~CCitadelUserMessage_CurrencyChanged() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMessage_CurrencyChanged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMessage_CurrencyChanged(const CCitadelUserMessage_CurrencyChanged& from);
  CCitadelUserMessage_CurrencyChanged(CCitadelUserMessage_CurrencyChanged&& from) noexcept
    : CCitadelUserMessage_CurrencyChanged() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMessage_CurrencyChanged& operator=(const CCitadelUserMessage_CurrencyChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMessage_CurrencyChanged& operator=(CCitadelUserMessage_CurrencyChanged&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMessage_CurrencyChanged& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMessage_CurrencyChanged* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMessage_CurrencyChanged*>(
               &_CCitadelUserMessage_CurrencyChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CCitadelUserMessage_CurrencyChanged& a, CCitadelUserMessage_CurrencyChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMessage_CurrencyChanged* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMessage_CurrencyChanged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMessage_CurrencyChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMessage_CurrencyChanged>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMessage_CurrencyChanged& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMessage_CurrencyChanged& from) {
    CCitadelUserMessage_CurrencyChanged::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMessage_CurrencyChanged* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMessage_CurrencyChanged";
  }
  protected:
  explicit CCitadelUserMessage_CurrencyChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVictimPosFieldNumber = 7,
    kCurrencyTypeFieldNumber = 2,
    kCurrencySourceFieldNumber = 3,
    kDeltaFieldNumber = 4,
    kNotificationFieldNumber = 5,
    kPlaysoundFieldNumber = 8,
    kAbilityIdFieldNumber = 9,
    kEntindexHeroPawnFieldNumber = 1,
    kEntindexVictimFieldNumber = 6,
  };
  // optional .CMsgVector victim_pos = 7;
  bool has_victim_pos() const;
  private:
  bool _internal_has_victim_pos() const;
  public:
  void clear_victim_pos();
  const ::CMsgVector& victim_pos() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_victim_pos();
  ::CMsgVector* mutable_victim_pos();
  void set_allocated_victim_pos(::CMsgVector* victim_pos);
  private:
  const ::CMsgVector& _internal_victim_pos() const;
  ::CMsgVector* _internal_mutable_victim_pos();
  public:
  void unsafe_arena_set_allocated_victim_pos(
      ::CMsgVector* victim_pos);
  ::CMsgVector* unsafe_arena_release_victim_pos();

  // optional int32 currency_type = 2;
  bool has_currency_type() const;
  private:
  bool _internal_has_currency_type() const;
  public:
  void clear_currency_type();
  int32_t currency_type() const;
  void set_currency_type(int32_t value);
  private:
  int32_t _internal_currency_type() const;
  void _internal_set_currency_type(int32_t value);
  public:

  // optional int32 currency_source = 3;
  bool has_currency_source() const;
  private:
  bool _internal_has_currency_source() const;
  public:
  void clear_currency_source();
  int32_t currency_source() const;
  void set_currency_source(int32_t value);
  private:
  int32_t _internal_currency_source() const;
  void _internal_set_currency_source(int32_t value);
  public:

  // optional int32 delta = 4;
  bool has_delta() const;
  private:
  bool _internal_has_delta() const;
  public:
  void clear_delta();
  int32_t delta() const;
  void set_delta(int32_t value);
  private:
  int32_t _internal_delta() const;
  void _internal_set_delta(int32_t value);
  public:

  // optional bool notification = 5;
  bool has_notification() const;
  private:
  bool _internal_has_notification() const;
  public:
  void clear_notification();
  bool notification() const;
  void set_notification(bool value);
  private:
  bool _internal_notification() const;
  void _internal_set_notification(bool value);
  public:

  // optional int32 playsound = 8;
  bool has_playsound() const;
  private:
  bool _internal_has_playsound() const;
  public:
  void clear_playsound();
  int32_t playsound() const;
  void set_playsound(int32_t value);
  private:
  int32_t _internal_playsound() const;
  void _internal_set_playsound(int32_t value);
  public:

  // optional uint32 ability_id = 9;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  uint32_t ability_id() const;
  void set_ability_id(uint32_t value);
  private:
  uint32_t _internal_ability_id() const;
  void _internal_set_ability_id(uint32_t value);
  public:

  // optional int32 entindex_hero_pawn = 1 [default = -1];
  bool has_entindex_hero_pawn() const;
  private:
  bool _internal_has_entindex_hero_pawn() const;
  public:
  void clear_entindex_hero_pawn();
  int32_t entindex_hero_pawn() const;
  void set_entindex_hero_pawn(int32_t value);
  private:
  int32_t _internal_entindex_hero_pawn() const;
  void _internal_set_entindex_hero_pawn(int32_t value);
  public:

  // optional int32 entindex_victim = 6 [default = -1];
  bool has_entindex_victim() const;
  private:
  bool _internal_has_entindex_victim() const;
  public:
  void clear_entindex_victim();
  int32_t entindex_victim() const;
  void set_entindex_victim(int32_t value);
  private:
  int32_t _internal_entindex_victim() const;
  void _internal_set_entindex_victim(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMessage_CurrencyChanged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgVector* victim_pos_;
    int32_t currency_type_;
    int32_t currency_source_;
    int32_t delta_;
    bool notification_;
    int32_t playsound_;
    uint32_t ability_id_;
    int32_t entindex_hero_pawn_;
    int32_t entindex_victim_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMessage_GameOver /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMessage_GameOver) */ {
 public:
  inline CCitadelUserMessage_GameOver() : CCitadelUserMessage_GameOver(nullptr) {}
  ~CCitadelUserMessage_GameOver() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMessage_GameOver(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMessage_GameOver(const CCitadelUserMessage_GameOver& from);
  CCitadelUserMessage_GameOver(CCitadelUserMessage_GameOver&& from) noexcept
    : CCitadelUserMessage_GameOver() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMessage_GameOver& operator=(const CCitadelUserMessage_GameOver& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMessage_GameOver& operator=(CCitadelUserMessage_GameOver&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMessage_GameOver& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMessage_GameOver* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMessage_GameOver*>(
               &_CCitadelUserMessage_GameOver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CCitadelUserMessage_GameOver& a, CCitadelUserMessage_GameOver& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMessage_GameOver* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMessage_GameOver* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMessage_GameOver* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMessage_GameOver>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMessage_GameOver& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMessage_GameOver& from) {
    CCitadelUserMessage_GameOver::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMessage_GameOver* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMessage_GameOver";
  }
  protected:
  explicit CCitadelUserMessage_GameOver(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinningTeamFieldNumber = 1,
    kJustATestFieldNumber = 2,
  };
  // optional int32 winning_team = 1;
  bool has_winning_team() const;
  private:
  bool _internal_has_winning_team() const;
  public:
  void clear_winning_team();
  int32_t winning_team() const;
  void set_winning_team(int32_t value);
  private:
  int32_t _internal_winning_team() const;
  void _internal_set_winning_team(int32_t value);
  public:

  // optional bool just_a_test = 2;
  bool has_just_a_test() const;
  private:
  bool _internal_has_just_a_test() const;
  public:
  void clear_just_a_test();
  bool just_a_test() const;
  void set_just_a_test(bool value);
  private:
  bool _internal_just_a_test() const;
  void _internal_set_just_a_test(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMessage_GameOver)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t winning_team_;
    bool just_a_test_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_GetDamageStatsResponse_StatType /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_GetDamageStatsResponse.StatType) */ {
 public:
  inline CCitadelUserMsg_GetDamageStatsResponse_StatType() : CCitadelUserMsg_GetDamageStatsResponse_StatType(nullptr) {}
  ~CCitadelUserMsg_GetDamageStatsResponse_StatType() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_GetDamageStatsResponse_StatType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_GetDamageStatsResponse_StatType(const CCitadelUserMsg_GetDamageStatsResponse_StatType& from);
  CCitadelUserMsg_GetDamageStatsResponse_StatType(CCitadelUserMsg_GetDamageStatsResponse_StatType&& from) noexcept
    : CCitadelUserMsg_GetDamageStatsResponse_StatType() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_GetDamageStatsResponse_StatType& operator=(const CCitadelUserMsg_GetDamageStatsResponse_StatType& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_GetDamageStatsResponse_StatType& operator=(CCitadelUserMsg_GetDamageStatsResponse_StatType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_GetDamageStatsResponse_StatType& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_GetDamageStatsResponse_StatType* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_GetDamageStatsResponse_StatType*>(
               &_CCitadelUserMsg_GetDamageStatsResponse_StatType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CCitadelUserMsg_GetDamageStatsResponse_StatType& a, CCitadelUserMsg_GetDamageStatsResponse_StatType& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_GetDamageStatsResponse_StatType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_GetDamageStatsResponse_StatType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_GetDamageStatsResponse_StatType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_GetDamageStatsResponse_StatType>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_GetDamageStatsResponse_StatType& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_GetDamageStatsResponse_StatType& from) {
    CCitadelUserMsg_GetDamageStatsResponse_StatType::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_GetDamageStatsResponse_StatType* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_GetDamageStatsResponse.StatType";
  }
  protected:
  explicit CCitadelUserMsg_GetDamageStatsResponse_StatType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetPlayerSlotFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // repeated uint32 target_player_slot = 1 [packed = true];
  int target_player_slot_size() const;
  private:
  int _internal_target_player_slot_size() const;
  public:
  void clear_target_player_slot();
  private:
  uint32_t _internal_target_player_slot(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_target_player_slot() const;
  void _internal_add_target_player_slot(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_target_player_slot();
  public:
  uint32_t target_player_slot(int index) const;
  void set_target_player_slot(int index, uint32_t value);
  void add_target_player_slot(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      target_player_slot() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_target_player_slot();

  // repeated uint32 value = 2 [packed = true];
  int value_size() const;
  private:
  int _internal_value_size() const;
  public:
  void clear_value();
  private:
  uint32_t _internal_value(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_value() const;
  void _internal_add_value(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_value();
  public:
  uint32_t value(int index) const;
  void set_value(int index, uint32_t value);
  void add_value(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_GetDamageStatsResponse.StatType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > target_player_slot_;
    mutable std::atomic<int> _target_player_slot_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > value_;
    mutable std::atomic<int> _value_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_GetDamageStatsResponse /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_GetDamageStatsResponse) */ {
 public:
  inline CCitadelUserMsg_GetDamageStatsResponse() : CCitadelUserMsg_GetDamageStatsResponse(nullptr) {}
  ~CCitadelUserMsg_GetDamageStatsResponse() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_GetDamageStatsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_GetDamageStatsResponse(const CCitadelUserMsg_GetDamageStatsResponse& from);
  CCitadelUserMsg_GetDamageStatsResponse(CCitadelUserMsg_GetDamageStatsResponse&& from) noexcept
    : CCitadelUserMsg_GetDamageStatsResponse() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_GetDamageStatsResponse& operator=(const CCitadelUserMsg_GetDamageStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_GetDamageStatsResponse& operator=(CCitadelUserMsg_GetDamageStatsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_GetDamageStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_GetDamageStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_GetDamageStatsResponse*>(
               &_CCitadelUserMsg_GetDamageStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CCitadelUserMsg_GetDamageStatsResponse& a, CCitadelUserMsg_GetDamageStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_GetDamageStatsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_GetDamageStatsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_GetDamageStatsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_GetDamageStatsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_GetDamageStatsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_GetDamageStatsResponse& from) {
    CCitadelUserMsg_GetDamageStatsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_GetDamageStatsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_GetDamageStatsResponse";
  }
  protected:
  explicit CCitadelUserMsg_GetDamageStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CCitadelUserMsg_GetDamageStatsResponse_StatType StatType;

  // accessors -------------------------------------------------------

  enum : int {
    kAbilityNameFieldNumber = 2,
    kDamageFieldNumber = 3,
    kHealingFieldNumber = 4,
    kPlayerSlotFieldNumber = 1,
  };
  // optional string ability_name = 2;
  bool has_ability_name() const;
  private:
  bool _internal_has_ability_name() const;
  public:
  void clear_ability_name();
  const std::string& ability_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ability_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ability_name();
  PROTOBUF_NODISCARD std::string* release_ability_name();
  void set_allocated_ability_name(std::string* ability_name);
  private:
  const std::string& _internal_ability_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ability_name(const std::string& value);
  std::string* _internal_mutable_ability_name();
  public:

  // optional .CCitadelUserMsg_GetDamageStatsResponse.StatType damage = 3;
  bool has_damage() const;
  private:
  bool _internal_has_damage() const;
  public:
  void clear_damage();
  const ::CCitadelUserMsg_GetDamageStatsResponse_StatType& damage() const;
  PROTOBUF_NODISCARD ::CCitadelUserMsg_GetDamageStatsResponse_StatType* release_damage();
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* mutable_damage();
  void set_allocated_damage(::CCitadelUserMsg_GetDamageStatsResponse_StatType* damage);
  private:
  const ::CCitadelUserMsg_GetDamageStatsResponse_StatType& _internal_damage() const;
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* _internal_mutable_damage();
  public:
  void unsafe_arena_set_allocated_damage(
      ::CCitadelUserMsg_GetDamageStatsResponse_StatType* damage);
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* unsafe_arena_release_damage();

  // optional .CCitadelUserMsg_GetDamageStatsResponse.StatType healing = 4;
  bool has_healing() const;
  private:
  bool _internal_has_healing() const;
  public:
  void clear_healing();
  const ::CCitadelUserMsg_GetDamageStatsResponse_StatType& healing() const;
  PROTOBUF_NODISCARD ::CCitadelUserMsg_GetDamageStatsResponse_StatType* release_healing();
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* mutable_healing();
  void set_allocated_healing(::CCitadelUserMsg_GetDamageStatsResponse_StatType* healing);
  private:
  const ::CCitadelUserMsg_GetDamageStatsResponse_StatType& _internal_healing() const;
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* _internal_mutable_healing();
  public:
  void unsafe_arena_set_allocated_healing(
      ::CCitadelUserMsg_GetDamageStatsResponse_StatType* healing);
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* unsafe_arena_release_healing();

  // optional uint32 player_slot = 1;
  bool has_player_slot() const;
  private:
  bool _internal_has_player_slot() const;
  public:
  void clear_player_slot();
  uint32_t player_slot() const;
  void set_player_slot(uint32_t value);
  private:
  uint32_t _internal_player_slot() const;
  void _internal_set_player_slot(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_GetDamageStatsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ability_name_;
    ::CCitadelUserMsg_GetDamageStatsResponse_StatType* damage_;
    ::CCitadelUserMsg_GetDamageStatsResponse_StatType* healing_;
    uint32_t player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ParticipantStartSoundEvent /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ParticipantStartSoundEvent) */ {
 public:
  inline CCitadelUserMsg_ParticipantStartSoundEvent() : CCitadelUserMsg_ParticipantStartSoundEvent(nullptr) {}
  ~CCitadelUserMsg_ParticipantStartSoundEvent() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ParticipantStartSoundEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ParticipantStartSoundEvent(const CCitadelUserMsg_ParticipantStartSoundEvent& from);
  CCitadelUserMsg_ParticipantStartSoundEvent(CCitadelUserMsg_ParticipantStartSoundEvent&& from) noexcept
    : CCitadelUserMsg_ParticipantStartSoundEvent() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ParticipantStartSoundEvent& operator=(const CCitadelUserMsg_ParticipantStartSoundEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ParticipantStartSoundEvent& operator=(CCitadelUserMsg_ParticipantStartSoundEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ParticipantStartSoundEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ParticipantStartSoundEvent* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ParticipantStartSoundEvent*>(
               &_CCitadelUserMsg_ParticipantStartSoundEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CCitadelUserMsg_ParticipantStartSoundEvent& a, CCitadelUserMsg_ParticipantStartSoundEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ParticipantStartSoundEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ParticipantStartSoundEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ParticipantStartSoundEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ParticipantStartSoundEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_ParticipantStartSoundEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_ParticipantStartSoundEvent& from) {
    CCitadelUserMsg_ParticipantStartSoundEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_ParticipantStartSoundEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ParticipantStartSoundEvent";
  }
  protected:
  explicit CCitadelUserMsg_ParticipantStartSoundEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerSlotsFieldNumber = 2,
    kEventFieldNumber = 1,
  };
  // repeated int32 player_slots = 2;
  int player_slots_size() const;
  private:
  int _internal_player_slots_size() const;
  public:
  void clear_player_slots();
  private:
  int32_t _internal_player_slots(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_player_slots() const;
  void _internal_add_player_slots(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_player_slots();
  public:
  int32_t player_slots(int index) const;
  void set_player_slots(int index, int32_t value);
  void add_player_slots(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      player_slots() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_player_slots();

  // required .CMsgSosStartSoundEvent event = 1;
  bool has_event() const;
  private:
  bool _internal_has_event() const;
  public:
  void clear_event();
  const ::CMsgSosStartSoundEvent& event() const;
  PROTOBUF_NODISCARD ::CMsgSosStartSoundEvent* release_event();
  ::CMsgSosStartSoundEvent* mutable_event();
  void set_allocated_event(::CMsgSosStartSoundEvent* event);
  private:
  const ::CMsgSosStartSoundEvent& _internal_event() const;
  ::CMsgSosStartSoundEvent* _internal_mutable_event();
  public:
  void unsafe_arena_set_allocated_event(
      ::CMsgSosStartSoundEvent* event);
  ::CMsgSosStartSoundEvent* unsafe_arena_release_event();

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ParticipantStartSoundEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > player_slots_;
    ::CMsgSosStartSoundEvent* event_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ParticipantStopSoundEvent /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ParticipantStopSoundEvent) */ {
 public:
  inline CCitadelUserMsg_ParticipantStopSoundEvent() : CCitadelUserMsg_ParticipantStopSoundEvent(nullptr) {}
  ~CCitadelUserMsg_ParticipantStopSoundEvent() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ParticipantStopSoundEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ParticipantStopSoundEvent(const CCitadelUserMsg_ParticipantStopSoundEvent& from);
  CCitadelUserMsg_ParticipantStopSoundEvent(CCitadelUserMsg_ParticipantStopSoundEvent&& from) noexcept
    : CCitadelUserMsg_ParticipantStopSoundEvent() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ParticipantStopSoundEvent& operator=(const CCitadelUserMsg_ParticipantStopSoundEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ParticipantStopSoundEvent& operator=(CCitadelUserMsg_ParticipantStopSoundEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ParticipantStopSoundEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ParticipantStopSoundEvent* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ParticipantStopSoundEvent*>(
               &_CCitadelUserMsg_ParticipantStopSoundEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CCitadelUserMsg_ParticipantStopSoundEvent& a, CCitadelUserMsg_ParticipantStopSoundEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ParticipantStopSoundEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ParticipantStopSoundEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ParticipantStopSoundEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ParticipantStopSoundEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_ParticipantStopSoundEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_ParticipantStopSoundEvent& from) {
    CCitadelUserMsg_ParticipantStopSoundEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_ParticipantStopSoundEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ParticipantStopSoundEvent";
  }
  protected:
  explicit CCitadelUserMsg_ParticipantStopSoundEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerSlotsFieldNumber = 2,
    kEventFieldNumber = 1,
  };
  // repeated int32 player_slots = 2;
  int player_slots_size() const;
  private:
  int _internal_player_slots_size() const;
  public:
  void clear_player_slots();
  private:
  int32_t _internal_player_slots(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_player_slots() const;
  void _internal_add_player_slots(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_player_slots();
  public:
  int32_t player_slots(int index) const;
  void set_player_slots(int index, int32_t value);
  void add_player_slots(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      player_slots() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_player_slots();

  // required .CMsgSosStopSoundEvent event = 1;
  bool has_event() const;
  private:
  bool _internal_has_event() const;
  public:
  void clear_event();
  const ::CMsgSosStopSoundEvent& event() const;
  PROTOBUF_NODISCARD ::CMsgSosStopSoundEvent* release_event();
  ::CMsgSosStopSoundEvent* mutable_event();
  void set_allocated_event(::CMsgSosStopSoundEvent* event);
  private:
  const ::CMsgSosStopSoundEvent& _internal_event() const;
  ::CMsgSosStopSoundEvent* _internal_mutable_event();
  public:
  void unsafe_arena_set_allocated_event(
      ::CMsgSosStopSoundEvent* event);
  ::CMsgSosStopSoundEvent* unsafe_arena_release_event();

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ParticipantStopSoundEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > player_slots_;
    ::CMsgSosStopSoundEvent* event_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ParticipantStopSoundEventHash /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ParticipantStopSoundEventHash) */ {
 public:
  inline CCitadelUserMsg_ParticipantStopSoundEventHash() : CCitadelUserMsg_ParticipantStopSoundEventHash(nullptr) {}
  ~CCitadelUserMsg_ParticipantStopSoundEventHash() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ParticipantStopSoundEventHash(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ParticipantStopSoundEventHash(const CCitadelUserMsg_ParticipantStopSoundEventHash& from);
  CCitadelUserMsg_ParticipantStopSoundEventHash(CCitadelUserMsg_ParticipantStopSoundEventHash&& from) noexcept
    : CCitadelUserMsg_ParticipantStopSoundEventHash() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ParticipantStopSoundEventHash& operator=(const CCitadelUserMsg_ParticipantStopSoundEventHash& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ParticipantStopSoundEventHash& operator=(CCitadelUserMsg_ParticipantStopSoundEventHash&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ParticipantStopSoundEventHash& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ParticipantStopSoundEventHash* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ParticipantStopSoundEventHash*>(
               &_CCitadelUserMsg_ParticipantStopSoundEventHash_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CCitadelUserMsg_ParticipantStopSoundEventHash& a, CCitadelUserMsg_ParticipantStopSoundEventHash& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ParticipantStopSoundEventHash* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ParticipantStopSoundEventHash* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ParticipantStopSoundEventHash* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ParticipantStopSoundEventHash>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_ParticipantStopSoundEventHash& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_ParticipantStopSoundEventHash& from) {
    CCitadelUserMsg_ParticipantStopSoundEventHash::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_ParticipantStopSoundEventHash* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ParticipantStopSoundEventHash";
  }
  protected:
  explicit CCitadelUserMsg_ParticipantStopSoundEventHash(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerSlotsFieldNumber = 2,
    kEventFieldNumber = 1,
  };
  // repeated int32 player_slots = 2;
  int player_slots_size() const;
  private:
  int _internal_player_slots_size() const;
  public:
  void clear_player_slots();
  private:
  int32_t _internal_player_slots(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_player_slots() const;
  void _internal_add_player_slots(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_player_slots();
  public:
  int32_t player_slots(int index) const;
  void set_player_slots(int index, int32_t value);
  void add_player_slots(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      player_slots() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_player_slots();

  // required .CMsgSosStopSoundEventHash event = 1;
  bool has_event() const;
  private:
  bool _internal_has_event() const;
  public:
  void clear_event();
  const ::CMsgSosStopSoundEventHash& event() const;
  PROTOBUF_NODISCARD ::CMsgSosStopSoundEventHash* release_event();
  ::CMsgSosStopSoundEventHash* mutable_event();
  void set_allocated_event(::CMsgSosStopSoundEventHash* event);
  private:
  const ::CMsgSosStopSoundEventHash& _internal_event() const;
  ::CMsgSosStopSoundEventHash* _internal_mutable_event();
  public:
  void unsafe_arena_set_allocated_event(
      ::CMsgSosStopSoundEventHash* event);
  ::CMsgSosStopSoundEventHash* unsafe_arena_release_event();

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ParticipantStopSoundEventHash)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > player_slots_;
    ::CMsgSosStopSoundEventHash* event_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ParticipantSetSoundEventParams /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ParticipantSetSoundEventParams) */ {
 public:
  inline CCitadelUserMsg_ParticipantSetSoundEventParams() : CCitadelUserMsg_ParticipantSetSoundEventParams(nullptr) {}
  ~CCitadelUserMsg_ParticipantSetSoundEventParams() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ParticipantSetSoundEventParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ParticipantSetSoundEventParams(const CCitadelUserMsg_ParticipantSetSoundEventParams& from);
  CCitadelUserMsg_ParticipantSetSoundEventParams(CCitadelUserMsg_ParticipantSetSoundEventParams&& from) noexcept
    : CCitadelUserMsg_ParticipantSetSoundEventParams() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ParticipantSetSoundEventParams& operator=(const CCitadelUserMsg_ParticipantSetSoundEventParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ParticipantSetSoundEventParams& operator=(CCitadelUserMsg_ParticipantSetSoundEventParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ParticipantSetSoundEventParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ParticipantSetSoundEventParams* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ParticipantSetSoundEventParams*>(
               &_CCitadelUserMsg_ParticipantSetSoundEventParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CCitadelUserMsg_ParticipantSetSoundEventParams& a, CCitadelUserMsg_ParticipantSetSoundEventParams& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ParticipantSetSoundEventParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ParticipantSetSoundEventParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ParticipantSetSoundEventParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ParticipantSetSoundEventParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_ParticipantSetSoundEventParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_ParticipantSetSoundEventParams& from) {
    CCitadelUserMsg_ParticipantSetSoundEventParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_ParticipantSetSoundEventParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ParticipantSetSoundEventParams";
  }
  protected:
  explicit CCitadelUserMsg_ParticipantSetSoundEventParams(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerSlotsFieldNumber = 2,
    kEventFieldNumber = 1,
  };
  // repeated int32 player_slots = 2;
  int player_slots_size() const;
  private:
  int _internal_player_slots_size() const;
  public:
  void clear_player_slots();
  private:
  int32_t _internal_player_slots(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_player_slots() const;
  void _internal_add_player_slots(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_player_slots();
  public:
  int32_t player_slots(int index) const;
  void set_player_slots(int index, int32_t value);
  void add_player_slots(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      player_slots() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_player_slots();

  // required .CMsgSosSetSoundEventParams event = 1;
  bool has_event() const;
  private:
  bool _internal_has_event() const;
  public:
  void clear_event();
  const ::CMsgSosSetSoundEventParams& event() const;
  PROTOBUF_NODISCARD ::CMsgSosSetSoundEventParams* release_event();
  ::CMsgSosSetSoundEventParams* mutable_event();
  void set_allocated_event(::CMsgSosSetSoundEventParams* event);
  private:
  const ::CMsgSosSetSoundEventParams& _internal_event() const;
  ::CMsgSosSetSoundEventParams* _internal_mutable_event();
  public:
  void unsafe_arena_set_allocated_event(
      ::CMsgSosSetSoundEventParams* event);
  ::CMsgSosSetSoundEventParams* unsafe_arena_release_event();

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ParticipantSetSoundEventParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > player_slots_;
    ::CMsgSosSetSoundEventParams* event_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_ParticipantSetLibraryStackFields /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_ParticipantSetLibraryStackFields) */ {
 public:
  inline CCitadelUserMsg_ParticipantSetLibraryStackFields() : CCitadelUserMsg_ParticipantSetLibraryStackFields(nullptr) {}
  ~CCitadelUserMsg_ParticipantSetLibraryStackFields() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_ParticipantSetLibraryStackFields(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_ParticipantSetLibraryStackFields(const CCitadelUserMsg_ParticipantSetLibraryStackFields& from);
  CCitadelUserMsg_ParticipantSetLibraryStackFields(CCitadelUserMsg_ParticipantSetLibraryStackFields&& from) noexcept
    : CCitadelUserMsg_ParticipantSetLibraryStackFields() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_ParticipantSetLibraryStackFields& operator=(const CCitadelUserMsg_ParticipantSetLibraryStackFields& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_ParticipantSetLibraryStackFields& operator=(CCitadelUserMsg_ParticipantSetLibraryStackFields&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_ParticipantSetLibraryStackFields& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_ParticipantSetLibraryStackFields* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_ParticipantSetLibraryStackFields*>(
               &_CCitadelUserMsg_ParticipantSetLibraryStackFields_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CCitadelUserMsg_ParticipantSetLibraryStackFields& a, CCitadelUserMsg_ParticipantSetLibraryStackFields& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_ParticipantSetLibraryStackFields* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_ParticipantSetLibraryStackFields* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_ParticipantSetLibraryStackFields* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_ParticipantSetLibraryStackFields>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_ParticipantSetLibraryStackFields& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_ParticipantSetLibraryStackFields& from) {
    CCitadelUserMsg_ParticipantSetLibraryStackFields::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_ParticipantSetLibraryStackFields* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_ParticipantSetLibraryStackFields";
  }
  protected:
  explicit CCitadelUserMsg_ParticipantSetLibraryStackFields(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerSlotsFieldNumber = 2,
    kEventFieldNumber = 1,
  };
  // repeated int32 player_slots = 2;
  int player_slots_size() const;
  private:
  int _internal_player_slots_size() const;
  public:
  void clear_player_slots();
  private:
  int32_t _internal_player_slots(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_player_slots() const;
  void _internal_add_player_slots(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_player_slots();
  public:
  int32_t player_slots(int index) const;
  void set_player_slots(int index, int32_t value);
  void add_player_slots(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      player_slots() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_player_slots();

  // required .CMsgSosSetLibraryStackFields event = 1;
  bool has_event() const;
  private:
  bool _internal_has_event() const;
  public:
  void clear_event();
  const ::CMsgSosSetLibraryStackFields& event() const;
  PROTOBUF_NODISCARD ::CMsgSosSetLibraryStackFields* release_event();
  ::CMsgSosSetLibraryStackFields* mutable_event();
  void set_allocated_event(::CMsgSosSetLibraryStackFields* event);
  private:
  const ::CMsgSosSetLibraryStackFields& _internal_event() const;
  ::CMsgSosSetLibraryStackFields* _internal_mutable_event();
  public:
  void unsafe_arena_set_allocated_event(
      ::CMsgSosSetLibraryStackFields* event);
  ::CMsgSosSetLibraryStackFields* unsafe_arena_release_event();

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_ParticipantSetLibraryStackFields)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > player_slots_;
    ::CMsgSosSetLibraryStackFields* event_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CCitadelUserMsg_BossKilled /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCitadelUserMsg_BossKilled) */ {
 public:
  inline CCitadelUserMsg_BossKilled() : CCitadelUserMsg_BossKilled(nullptr) {}
  ~CCitadelUserMsg_BossKilled() override;
  explicit PROTOBUF_CONSTEXPR CCitadelUserMsg_BossKilled(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCitadelUserMsg_BossKilled(const CCitadelUserMsg_BossKilled& from);
  CCitadelUserMsg_BossKilled(CCitadelUserMsg_BossKilled&& from) noexcept
    : CCitadelUserMsg_BossKilled() {
    *this = ::std::move(from);
  }

  inline CCitadelUserMsg_BossKilled& operator=(const CCitadelUserMsg_BossKilled& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserMsg_BossKilled& operator=(CCitadelUserMsg_BossKilled&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserMsg_BossKilled& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserMsg_BossKilled* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserMsg_BossKilled*>(
               &_CCitadelUserMsg_BossKilled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CCitadelUserMsg_BossKilled& a, CCitadelUserMsg_BossKilled& b) {
    a.Swap(&b);
  }
  inline void Swap(CCitadelUserMsg_BossKilled* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserMsg_BossKilled* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserMsg_BossKilled* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CCitadelUserMsg_BossKilled>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CCitadelUserMsg_BossKilled& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CCitadelUserMsg_BossKilled& from) {
    CCitadelUserMsg_BossKilled::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CCitadelUserMsg_BossKilled* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCitadelUserMsg_BossKilled";
  }
  protected:
  explicit CCitadelUserMsg_BossKilled(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectiveTeamFieldNumber = 1,
    kObjectiveMaskChangeFieldNumber = 2,
    kEntityKilledClassFieldNumber = 4,
    kGametimeFieldNumber = 6,
    kEntityKilledFieldNumber = 3,
    kEntityKillerFieldNumber = 5,
  };
  // optional int32 objective_team = 1;
  bool has_objective_team() const;
  private:
  bool _internal_has_objective_team() const;
  public:
  void clear_objective_team();
  int32_t objective_team() const;
  void set_objective_team(int32_t value);
  private:
  int32_t _internal_objective_team() const;
  void _internal_set_objective_team(int32_t value);
  public:

  // optional int32 objective_mask_change = 2;
  bool has_objective_mask_change() const;
  private:
  bool _internal_has_objective_mask_change() const;
  public:
  void clear_objective_mask_change();
  int32_t objective_mask_change() const;
  void set_objective_mask_change(int32_t value);
  private:
  int32_t _internal_objective_mask_change() const;
  void _internal_set_objective_mask_change(int32_t value);
  public:

  // required int32 entity_killed_class = 4;
  bool has_entity_killed_class() const;
  private:
  bool _internal_has_entity_killed_class() const;
  public:
  void clear_entity_killed_class();
  int32_t entity_killed_class() const;
  void set_entity_killed_class(int32_t value);
  private:
  int32_t _internal_entity_killed_class() const;
  void _internal_set_entity_killed_class(int32_t value);
  public:

  // required float gametime = 6;
  bool has_gametime() const;
  private:
  bool _internal_has_gametime() const;
  public:
  void clear_gametime();
  float gametime() const;
  void set_gametime(float value);
  private:
  float _internal_gametime() const;
  void _internal_set_gametime(float value);
  public:

  // required uint32 entity_killed = 3 [default = 16777215];
  bool has_entity_killed() const;
  private:
  bool _internal_has_entity_killed() const;
  public:
  void clear_entity_killed();
  uint32_t entity_killed() const;
  void set_entity_killed(uint32_t value);
  private:
  uint32_t _internal_entity_killed() const;
  void _internal_set_entity_killed(uint32_t value);
  public:

  // required uint32 entity_killer = 5 [default = 16777215];
  bool has_entity_killer() const;
  private:
  bool _internal_has_entity_killer() const;
  public:
  void clear_entity_killer();
  uint32_t entity_killer() const;
  void set_entity_killer(uint32_t value);
  private:
  uint32_t _internal_entity_killer() const;
  void _internal_set_entity_killer(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CCitadelUserMsg_BossKilled)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t objective_team_;
    int32_t objective_mask_change_;
    int32_t entity_killed_class_;
    float gametime_;
    uint32_t entity_killed_;
    uint32_t entity_killer_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusermessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CUserMessageEmpty

// optional uint32 empty = 1;
inline bool CUserMessageEmpty::_internal_has_empty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CUserMessageEmpty::has_empty() const {
  return _internal_has_empty();
}
inline void CUserMessageEmpty::clear_empty() {
  _impl_.empty_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CUserMessageEmpty::_internal_empty() const {
  return _impl_.empty_;
}
inline uint32_t CUserMessageEmpty::empty() const {
  // @@protoc_insertion_point(field_get:CUserMessageEmpty.empty)
  return _internal_empty();
}
inline void CUserMessageEmpty::_internal_set_empty(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.empty_ = value;
}
inline void CUserMessageEmpty::set_empty(uint32_t value) {
  _internal_set_empty(value);
  // @@protoc_insertion_point(field_set:CUserMessageEmpty.empty)
}

// -------------------------------------------------------------------

// CCitadelUserMessage_Damage

// optional int32 damage = 1;
inline bool CCitadelUserMessage_Damage::_internal_has_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_damage() const {
  return _internal_has_damage();
}
inline void CCitadelUserMessage_Damage::clear_damage() {
  _impl_.damage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_damage() const {
  return _impl_.damage_;
}
inline int32_t CCitadelUserMessage_Damage::damage() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.damage)
  return _internal_damage();
}
inline void CCitadelUserMessage_Damage::_internal_set_damage(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.damage_ = value;
}
inline void CCitadelUserMessage_Damage::set_damage(int32_t value) {
  _internal_set_damage(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.damage)
}

// optional int32 pre_damage = 2;
inline bool CCitadelUserMessage_Damage::_internal_has_pre_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_pre_damage() const {
  return _internal_has_pre_damage();
}
inline void CCitadelUserMessage_Damage::clear_pre_damage() {
  _impl_.pre_damage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_pre_damage() const {
  return _impl_.pre_damage_;
}
inline int32_t CCitadelUserMessage_Damage::pre_damage() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.pre_damage)
  return _internal_pre_damage();
}
inline void CCitadelUserMessage_Damage::_internal_set_pre_damage(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.pre_damage_ = value;
}
inline void CCitadelUserMessage_Damage::set_pre_damage(int32_t value) {
  _internal_set_pre_damage(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.pre_damage)
}

// optional int32 type = 3;
inline bool CCitadelUserMessage_Damage::_internal_has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_type() const {
  return _internal_has_type();
}
inline void CCitadelUserMessage_Damage::clear_type() {
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_type() const {
  return _impl_.type_;
}
inline int32_t CCitadelUserMessage_Damage::type() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.type)
  return _internal_type();
}
inline void CCitadelUserMessage_Damage::_internal_set_type(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.type_ = value;
}
inline void CCitadelUserMessage_Damage::set_type(int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.type)
}

// optional int32 citadel_type = 4;
inline bool CCitadelUserMessage_Damage::_internal_has_citadel_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_citadel_type() const {
  return _internal_has_citadel_type();
}
inline void CCitadelUserMessage_Damage::clear_citadel_type() {
  _impl_.citadel_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_citadel_type() const {
  return _impl_.citadel_type_;
}
inline int32_t CCitadelUserMessage_Damage::citadel_type() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.citadel_type)
  return _internal_citadel_type();
}
inline void CCitadelUserMessage_Damage::_internal_set_citadel_type(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.citadel_type_ = value;
}
inline void CCitadelUserMessage_Damage::set_citadel_type(int32_t value) {
  _internal_set_citadel_type(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.citadel_type)
}

// optional .CMsgVector origin = 5;
inline bool CCitadelUserMessage_Damage::_internal_has_origin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.origin_ != nullptr);
  return value;
}
inline bool CCitadelUserMessage_Damage::has_origin() const {
  return _internal_has_origin();
}
inline const ::CMsgVector& CCitadelUserMessage_Damage::_internal_origin() const {
  const ::CMsgVector* p = _impl_.origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCitadelUserMessage_Damage::origin() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.origin)
  return _internal_origin();
}
inline void CCitadelUserMessage_Damage::unsafe_arena_set_allocated_origin(
    ::CMsgVector* origin) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.origin_);
  }
  _impl_.origin_ = origin;
  if (origin) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMessage_Damage.origin)
}
inline ::CMsgVector* CCitadelUserMessage_Damage::release_origin() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.origin_;
  _impl_.origin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CCitadelUserMessage_Damage::unsafe_arena_release_origin() {
  // @@protoc_insertion_point(field_release:CCitadelUserMessage_Damage.origin)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.origin_;
  _impl_.origin_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCitadelUserMessage_Damage::_internal_mutable_origin() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.origin_ = p;
  }
  return _impl_.origin_;
}
inline ::CMsgVector* CCitadelUserMessage_Damage::mutable_origin() {
  ::CMsgVector* _msg = _internal_mutable_origin();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMessage_Damage.origin)
  return _msg;
}
inline void CCitadelUserMessage_Damage::set_allocated_origin(::CMsgVector* origin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.origin_);
  }
  if (origin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin));
    if (message_arena != submessage_arena) {
      origin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMessage_Damage.origin)
}

// optional int32 entindex_victim = 6 [default = -1];
inline bool CCitadelUserMessage_Damage::_internal_has_entindex_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_entindex_victim() const {
  return _internal_has_entindex_victim();
}
inline void CCitadelUserMessage_Damage::clear_entindex_victim() {
  _impl_.entindex_victim_ = -1;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_entindex_victim() const {
  return _impl_.entindex_victim_;
}
inline int32_t CCitadelUserMessage_Damage::entindex_victim() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.entindex_victim)
  return _internal_entindex_victim();
}
inline void CCitadelUserMessage_Damage::_internal_set_entindex_victim(int32_t value) {
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.entindex_victim_ = value;
}
inline void CCitadelUserMessage_Damage::set_entindex_victim(int32_t value) {
  _internal_set_entindex_victim(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.entindex_victim)
}

// optional int32 entindex_inflictor = 7 [default = -1];
inline bool CCitadelUserMessage_Damage::_internal_has_entindex_inflictor() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_entindex_inflictor() const {
  return _internal_has_entindex_inflictor();
}
inline void CCitadelUserMessage_Damage::clear_entindex_inflictor() {
  _impl_.entindex_inflictor_ = -1;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_entindex_inflictor() const {
  return _impl_.entindex_inflictor_;
}
inline int32_t CCitadelUserMessage_Damage::entindex_inflictor() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.entindex_inflictor)
  return _internal_entindex_inflictor();
}
inline void CCitadelUserMessage_Damage::_internal_set_entindex_inflictor(int32_t value) {
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.entindex_inflictor_ = value;
}
inline void CCitadelUserMessage_Damage::set_entindex_inflictor(int32_t value) {
  _internal_set_entindex_inflictor(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.entindex_inflictor)
}

// optional int32 entindex_attacker = 8 [default = -1];
inline bool CCitadelUserMessage_Damage::_internal_has_entindex_attacker() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_entindex_attacker() const {
  return _internal_has_entindex_attacker();
}
inline void CCitadelUserMessage_Damage::clear_entindex_attacker() {
  _impl_.entindex_attacker_ = -1;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_entindex_attacker() const {
  return _impl_.entindex_attacker_;
}
inline int32_t CCitadelUserMessage_Damage::entindex_attacker() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.entindex_attacker)
  return _internal_entindex_attacker();
}
inline void CCitadelUserMessage_Damage::_internal_set_entindex_attacker(int32_t value) {
  _impl_._has_bits_[0] |= 0x00040000u;
  _impl_.entindex_attacker_ = value;
}
inline void CCitadelUserMessage_Damage::set_entindex_attacker(int32_t value) {
  _internal_set_entindex_attacker(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.entindex_attacker)
}

// optional int32 entindex_ability = 9 [default = -1];
inline bool CCitadelUserMessage_Damage::_internal_has_entindex_ability() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_entindex_ability() const {
  return _internal_has_entindex_ability();
}
inline void CCitadelUserMessage_Damage::clear_entindex_ability() {
  _impl_.entindex_ability_ = -1;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_entindex_ability() const {
  return _impl_.entindex_ability_;
}
inline int32_t CCitadelUserMessage_Damage::entindex_ability() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.entindex_ability)
  return _internal_entindex_ability();
}
inline void CCitadelUserMessage_Damage::_internal_set_entindex_ability(int32_t value) {
  _impl_._has_bits_[0] |= 0x00080000u;
  _impl_.entindex_ability_ = value;
}
inline void CCitadelUserMessage_Damage::set_entindex_ability(int32_t value) {
  _internal_set_entindex_ability(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.entindex_ability)
}

// optional int32 damage_absorbed = 10;
inline bool CCitadelUserMessage_Damage::_internal_has_damage_absorbed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_damage_absorbed() const {
  return _internal_has_damage_absorbed();
}
inline void CCitadelUserMessage_Damage::clear_damage_absorbed() {
  _impl_.damage_absorbed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_damage_absorbed() const {
  return _impl_.damage_absorbed_;
}
inline int32_t CCitadelUserMessage_Damage::damage_absorbed() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.damage_absorbed)
  return _internal_damage_absorbed();
}
inline void CCitadelUserMessage_Damage::_internal_set_damage_absorbed(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.damage_absorbed_ = value;
}
inline void CCitadelUserMessage_Damage::set_damage_absorbed(int32_t value) {
  _internal_set_damage_absorbed(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.damage_absorbed)
}

// optional int32 victim_health_max = 11;
inline bool CCitadelUserMessage_Damage::_internal_has_victim_health_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_victim_health_max() const {
  return _internal_has_victim_health_max();
}
inline void CCitadelUserMessage_Damage::clear_victim_health_max() {
  _impl_.victim_health_max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_victim_health_max() const {
  return _impl_.victim_health_max_;
}
inline int32_t CCitadelUserMessage_Damage::victim_health_max() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.victim_health_max)
  return _internal_victim_health_max();
}
inline void CCitadelUserMessage_Damage::_internal_set_victim_health_max(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.victim_health_max_ = value;
}
inline void CCitadelUserMessage_Damage::set_victim_health_max(int32_t value) {
  _internal_set_victim_health_max(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.victim_health_max)
}

// optional int32 victim_health_new = 12;
inline bool CCitadelUserMessage_Damage::_internal_has_victim_health_new() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_victim_health_new() const {
  return _internal_has_victim_health_new();
}
inline void CCitadelUserMessage_Damage::clear_victim_health_new() {
  _impl_.victim_health_new_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_victim_health_new() const {
  return _impl_.victim_health_new_;
}
inline int32_t CCitadelUserMessage_Damage::victim_health_new() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.victim_health_new)
  return _internal_victim_health_new();
}
inline void CCitadelUserMessage_Damage::_internal_set_victim_health_new(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.victim_health_new_ = value;
}
inline void CCitadelUserMessage_Damage::set_victim_health_new(int32_t value) {
  _internal_set_victim_health_new(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.victim_health_new)
}

// optional uint64 flags = 13;
inline bool CCitadelUserMessage_Damage::_internal_has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_flags() const {
  return _internal_has_flags();
}
inline void CCitadelUserMessage_Damage::clear_flags() {
  _impl_.flags_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint64_t CCitadelUserMessage_Damage::_internal_flags() const {
  return _impl_.flags_;
}
inline uint64_t CCitadelUserMessage_Damage::flags() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.flags)
  return _internal_flags();
}
inline void CCitadelUserMessage_Damage::_internal_set_flags(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.flags_ = value;
}
inline void CCitadelUserMessage_Damage::set_flags(uint64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.flags)
}

// optional uint32 ability_id = 14;
inline bool CCitadelUserMessage_Damage::_internal_has_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CCitadelUserMessage_Damage::clear_ability_id() {
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CCitadelUserMessage_Damage::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline uint32_t CCitadelUserMessage_Damage::ability_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.ability_id)
  return _internal_ability_id();
}
inline void CCitadelUserMessage_Damage::_internal_set_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.ability_id_ = value;
}
inline void CCitadelUserMessage_Damage::set_ability_id(uint32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.ability_id)
}

// optional uint32 attacker_class = 15;
inline bool CCitadelUserMessage_Damage::_internal_has_attacker_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_attacker_class() const {
  return _internal_has_attacker_class();
}
inline void CCitadelUserMessage_Damage::clear_attacker_class() {
  _impl_.attacker_class_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline uint32_t CCitadelUserMessage_Damage::_internal_attacker_class() const {
  return _impl_.attacker_class_;
}
inline uint32_t CCitadelUserMessage_Damage::attacker_class() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.attacker_class)
  return _internal_attacker_class();
}
inline void CCitadelUserMessage_Damage::_internal_set_attacker_class(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.attacker_class_ = value;
}
inline void CCitadelUserMessage_Damage::set_attacker_class(uint32_t value) {
  _internal_set_attacker_class(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.attacker_class)
}

// optional uint32 victim_class = 16;
inline bool CCitadelUserMessage_Damage::_internal_has_victim_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_victim_class() const {
  return _internal_has_victim_class();
}
inline void CCitadelUserMessage_Damage::clear_victim_class() {
  _impl_.victim_class_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline uint32_t CCitadelUserMessage_Damage::_internal_victim_class() const {
  return _impl_.victim_class_;
}
inline uint32_t CCitadelUserMessage_Damage::victim_class() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.victim_class)
  return _internal_victim_class();
}
inline void CCitadelUserMessage_Damage::_internal_set_victim_class(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.victim_class_ = value;
}
inline void CCitadelUserMessage_Damage::set_victim_class(uint32_t value) {
  _internal_set_victim_class(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.victim_class)
}

// optional int32 victim_shield_max = 17;
inline bool CCitadelUserMessage_Damage::_internal_has_victim_shield_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_victim_shield_max() const {
  return _internal_has_victim_shield_max();
}
inline void CCitadelUserMessage_Damage::clear_victim_shield_max() {
  _impl_.victim_shield_max_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_victim_shield_max() const {
  return _impl_.victim_shield_max_;
}
inline int32_t CCitadelUserMessage_Damage::victim_shield_max() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.victim_shield_max)
  return _internal_victim_shield_max();
}
inline void CCitadelUserMessage_Damage::_internal_set_victim_shield_max(int32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.victim_shield_max_ = value;
}
inline void CCitadelUserMessage_Damage::set_victim_shield_max(int32_t value) {
  _internal_set_victim_shield_max(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.victim_shield_max)
}

// optional int32 victim_shield_new = 18;
inline bool CCitadelUserMessage_Damage::_internal_has_victim_shield_new() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_victim_shield_new() const {
  return _internal_has_victim_shield_new();
}
inline void CCitadelUserMessage_Damage::clear_victim_shield_new() {
  _impl_.victim_shield_new_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_victim_shield_new() const {
  return _impl_.victim_shield_new_;
}
inline int32_t CCitadelUserMessage_Damage::victim_shield_new() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.victim_shield_new)
  return _internal_victim_shield_new();
}
inline void CCitadelUserMessage_Damage::_internal_set_victim_shield_new(int32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.victim_shield_new_ = value;
}
inline void CCitadelUserMessage_Damage::set_victim_shield_new(int32_t value) {
  _internal_set_victim_shield_new(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.victim_shield_new)
}

// optional int32 hits = 19;
inline bool CCitadelUserMessage_Damage::_internal_has_hits() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_hits() const {
  return _internal_has_hits();
}
inline void CCitadelUserMessage_Damage::clear_hits() {
  _impl_.hits_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_hits() const {
  return _impl_.hits_;
}
inline int32_t CCitadelUserMessage_Damage::hits() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.hits)
  return _internal_hits();
}
inline void CCitadelUserMessage_Damage::_internal_set_hits(int32_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.hits_ = value;
}
inline void CCitadelUserMessage_Damage::set_hits(int32_t value) {
  _internal_set_hits(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.hits)
}

// optional int32 health_lost = 20;
inline bool CCitadelUserMessage_Damage::_internal_has_health_lost() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CCitadelUserMessage_Damage::has_health_lost() const {
  return _internal_has_health_lost();
}
inline void CCitadelUserMessage_Damage::clear_health_lost() {
  _impl_.health_lost_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline int32_t CCitadelUserMessage_Damage::_internal_health_lost() const {
  return _impl_.health_lost_;
}
inline int32_t CCitadelUserMessage_Damage::health_lost() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_Damage.health_lost)
  return _internal_health_lost();
}
inline void CCitadelUserMessage_Damage::_internal_set_health_lost(int32_t value) {
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.health_lost_ = value;
}
inline void CCitadelUserMessage_Damage::set_health_lost(int32_t value) {
  _internal_set_health_lost(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_Damage.health_lost)
}

// -------------------------------------------------------------------

// PingCommonData

// optional uint32 ping_message_id = 1;
inline bool PingCommonData::_internal_has_ping_message_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PingCommonData::has_ping_message_id() const {
  return _internal_has_ping_message_id();
}
inline void PingCommonData::clear_ping_message_id() {
  _impl_.ping_message_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t PingCommonData::_internal_ping_message_id() const {
  return _impl_.ping_message_id_;
}
inline uint32_t PingCommonData::ping_message_id() const {
  // @@protoc_insertion_point(field_get:PingCommonData.ping_message_id)
  return _internal_ping_message_id();
}
inline void PingCommonData::_internal_set_ping_message_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.ping_message_id_ = value;
}
inline void PingCommonData::set_ping_message_id(uint32_t value) {
  _internal_set_ping_message_id(value);
  // @@protoc_insertion_point(field_set:PingCommonData.ping_message_id)
}

// optional .CMsgVector ping_location = 2;
inline bool PingCommonData::_internal_has_ping_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ping_location_ != nullptr);
  return value;
}
inline bool PingCommonData::has_ping_location() const {
  return _internal_has_ping_location();
}
inline const ::CMsgVector& PingCommonData::_internal_ping_location() const {
  const ::CMsgVector* p = _impl_.ping_location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& PingCommonData::ping_location() const {
  // @@protoc_insertion_point(field_get:PingCommonData.ping_location)
  return _internal_ping_location();
}
inline void PingCommonData::unsafe_arena_set_allocated_ping_location(
    ::CMsgVector* ping_location) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_location_);
  }
  _impl_.ping_location_ = ping_location;
  if (ping_location) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PingCommonData.ping_location)
}
inline ::CMsgVector* PingCommonData::release_ping_location() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.ping_location_;
  _impl_.ping_location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* PingCommonData::unsafe_arena_release_ping_location() {
  // @@protoc_insertion_point(field_release:PingCommonData.ping_location)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.ping_location_;
  _impl_.ping_location_ = nullptr;
  return temp;
}
inline ::CMsgVector* PingCommonData::_internal_mutable_ping_location() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.ping_location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.ping_location_ = p;
  }
  return _impl_.ping_location_;
}
inline ::CMsgVector* PingCommonData::mutable_ping_location() {
  ::CMsgVector* _msg = _internal_mutable_ping_location();
  // @@protoc_insertion_point(field_mutable:PingCommonData.ping_location)
  return _msg;
}
inline void PingCommonData::set_allocated_ping_location(::CMsgVector* ping_location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_location_);
  }
  if (ping_location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ping_location));
    if (message_arena != submessage_arena) {
      ping_location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ping_location, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.ping_location_ = ping_location;
  // @@protoc_insertion_point(field_set_allocated:PingCommonData.ping_location)
}

// optional uint32 entity_index = 3 [default = 16777215];
inline bool PingCommonData::_internal_has_entity_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PingCommonData::has_entity_index() const {
  return _internal_has_entity_index();
}
inline void PingCommonData::clear_entity_index() {
  _impl_.entity_index_ = 16777215u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t PingCommonData::_internal_entity_index() const {
  return _impl_.entity_index_;
}
inline uint32_t PingCommonData::entity_index() const {
  // @@protoc_insertion_point(field_get:PingCommonData.entity_index)
  return _internal_entity_index();
}
inline void PingCommonData::_internal_set_entity_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.entity_index_ = value;
}
inline void PingCommonData::set_entity_index(uint32_t value) {
  _internal_set_entity_index(value);
  // @@protoc_insertion_point(field_set:PingCommonData.entity_index)
}

// optional int32 sender_player_slot = 4 [default = -1];
inline bool PingCommonData::_internal_has_sender_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool PingCommonData::has_sender_player_slot() const {
  return _internal_has_sender_player_slot();
}
inline void PingCommonData::clear_sender_player_slot() {
  _impl_.sender_player_slot_ = -1;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int32_t PingCommonData::_internal_sender_player_slot() const {
  return _impl_.sender_player_slot_;
}
inline int32_t PingCommonData::sender_player_slot() const {
  // @@protoc_insertion_point(field_get:PingCommonData.sender_player_slot)
  return _internal_sender_player_slot();
}
inline void PingCommonData::_internal_set_sender_player_slot(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.sender_player_slot_ = value;
}
inline void PingCommonData::set_sender_player_slot(int32_t value) {
  _internal_set_sender_player_slot(value);
  // @@protoc_insertion_point(field_set:PingCommonData.sender_player_slot)
}

// optional int32 speech_concept = 5;
inline bool PingCommonData::_internal_has_speech_concept() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PingCommonData::has_speech_concept() const {
  return _internal_has_speech_concept();
}
inline void PingCommonData::clear_speech_concept() {
  _impl_.speech_concept_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t PingCommonData::_internal_speech_concept() const {
  return _impl_.speech_concept_;
}
inline int32_t PingCommonData::speech_concept() const {
  // @@protoc_insertion_point(field_get:PingCommonData.speech_concept)
  return _internal_speech_concept();
}
inline void PingCommonData::_internal_set_speech_concept(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.speech_concept_ = value;
}
inline void PingCommonData::set_speech_concept(int32_t value) {
  _internal_set_speech_concept(value);
  // @@protoc_insertion_point(field_set:PingCommonData.speech_concept)
}

// optional string response_chosen = 6;
inline bool PingCommonData::_internal_has_response_chosen() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PingCommonData::has_response_chosen() const {
  return _internal_has_response_chosen();
}
inline void PingCommonData::clear_response_chosen() {
  _impl_.response_chosen_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PingCommonData::response_chosen() const {
  // @@protoc_insertion_point(field_get:PingCommonData.response_chosen)
  return _internal_response_chosen();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PingCommonData::set_response_chosen(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.response_chosen_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PingCommonData.response_chosen)
}
inline std::string* PingCommonData::mutable_response_chosen() {
  std::string* _s = _internal_mutable_response_chosen();
  // @@protoc_insertion_point(field_mutable:PingCommonData.response_chosen)
  return _s;
}
inline const std::string& PingCommonData::_internal_response_chosen() const {
  return _impl_.response_chosen_.Get();
}
inline void PingCommonData::_internal_set_response_chosen(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.response_chosen_.Set(value, GetArenaForAllocation());
}
inline std::string* PingCommonData::_internal_mutable_response_chosen() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.response_chosen_.Mutable(GetArenaForAllocation());
}
inline std::string* PingCommonData::release_response_chosen() {
  // @@protoc_insertion_point(field_release:PingCommonData.response_chosen)
  if (!_internal_has_response_chosen()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.response_chosen_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.response_chosen_.IsDefault()) {
    _impl_.response_chosen_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PingCommonData::set_allocated_response_chosen(std::string* response_chosen) {
  if (response_chosen != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.response_chosen_.SetAllocated(response_chosen, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.response_chosen_.IsDefault()) {
    _impl_.response_chosen_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PingCommonData.response_chosen)
}

// optional float cooldown_time = 7;
inline bool PingCommonData::_internal_has_cooldown_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PingCommonData::has_cooldown_time() const {
  return _internal_has_cooldown_time();
}
inline void PingCommonData::clear_cooldown_time() {
  _impl_.cooldown_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float PingCommonData::_internal_cooldown_time() const {
  return _impl_.cooldown_time_;
}
inline float PingCommonData::cooldown_time() const {
  // @@protoc_insertion_point(field_get:PingCommonData.cooldown_time)
  return _internal_cooldown_time();
}
inline void PingCommonData::_internal_set_cooldown_time(float value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.cooldown_time_ = value;
}
inline void PingCommonData::set_cooldown_time(float value) {
  _internal_set_cooldown_time(value);
  // @@protoc_insertion_point(field_set:PingCommonData.cooldown_time)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_MapPing

// required .PingCommonData ping_data = 1;
inline bool CCitadelUserMsg_MapPing::_internal_has_ping_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ping_data_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_MapPing::has_ping_data() const {
  return _internal_has_ping_data();
}
inline void CCitadelUserMsg_MapPing::clear_ping_data() {
  if (_impl_.ping_data_ != nullptr) _impl_.ping_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::PingCommonData& CCitadelUserMsg_MapPing::_internal_ping_data() const {
  const ::PingCommonData* p = _impl_.ping_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::PingCommonData&>(
      ::_PingCommonData_default_instance_);
}
inline const ::PingCommonData& CCitadelUserMsg_MapPing::ping_data() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_MapPing.ping_data)
  return _internal_ping_data();
}
inline void CCitadelUserMsg_MapPing::unsafe_arena_set_allocated_ping_data(
    ::PingCommonData* ping_data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_data_);
  }
  _impl_.ping_data_ = ping_data;
  if (ping_data) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_MapPing.ping_data)
}
inline ::PingCommonData* CCitadelUserMsg_MapPing::release_ping_data() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PingCommonData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PingCommonData* CCitadelUserMsg_MapPing::unsafe_arena_release_ping_data() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_MapPing.ping_data)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PingCommonData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
  return temp;
}
inline ::PingCommonData* CCitadelUserMsg_MapPing::_internal_mutable_ping_data() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.ping_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::PingCommonData>(GetArenaForAllocation());
    _impl_.ping_data_ = p;
  }
  return _impl_.ping_data_;
}
inline ::PingCommonData* CCitadelUserMsg_MapPing::mutable_ping_data() {
  ::PingCommonData* _msg = _internal_mutable_ping_data();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_MapPing.ping_data)
  return _msg;
}
inline void CCitadelUserMsg_MapPing::set_allocated_ping_data(::PingCommonData* ping_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.ping_data_;
  }
  if (ping_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ping_data);
    if (message_arena != submessage_arena) {
      ping_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ping_data, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.ping_data_ = ping_data;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_MapPing.ping_data)
}

// optional uint32 event_type = 2;
inline bool CCitadelUserMsg_MapPing::_internal_has_event_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_MapPing::has_event_type() const {
  return _internal_has_event_type();
}
inline void CCitadelUserMsg_MapPing::clear_event_type() {
  _impl_.event_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CCitadelUserMsg_MapPing::_internal_event_type() const {
  return _impl_.event_type_;
}
inline uint32_t CCitadelUserMsg_MapPing::event_type() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_MapPing.event_type)
  return _internal_event_type();
}
inline void CCitadelUserMsg_MapPing::_internal_set_event_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.event_type_ = value;
}
inline void CCitadelUserMsg_MapPing::set_event_type(uint32_t value) {
  _internal_set_event_type(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_MapPing.event_type)
}

// optional .ChatMsgPingMarkerInfo ping_marker_and_sound_info = 3 [default = k_EPingMarkerInfo_ShowMarkerAndSound];
inline bool CCitadelUserMsg_MapPing::_internal_has_ping_marker_and_sound_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_MapPing::has_ping_marker_and_sound_info() const {
  return _internal_has_ping_marker_and_sound_info();
}
inline void CCitadelUserMsg_MapPing::clear_ping_marker_and_sound_info() {
  _impl_.ping_marker_and_sound_info_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::ChatMsgPingMarkerInfo CCitadelUserMsg_MapPing::_internal_ping_marker_and_sound_info() const {
  return static_cast< ::ChatMsgPingMarkerInfo >(_impl_.ping_marker_and_sound_info_);
}
inline ::ChatMsgPingMarkerInfo CCitadelUserMsg_MapPing::ping_marker_and_sound_info() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_MapPing.ping_marker_and_sound_info)
  return _internal_ping_marker_and_sound_info();
}
inline void CCitadelUserMsg_MapPing::_internal_set_ping_marker_and_sound_info(::ChatMsgPingMarkerInfo value) {
  assert(::ChatMsgPingMarkerInfo_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.ping_marker_and_sound_info_ = value;
}
inline void CCitadelUserMsg_MapPing::set_ping_marker_and_sound_info(::ChatMsgPingMarkerInfo value) {
  _internal_set_ping_marker_and_sound_info(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_MapPing.ping_marker_and_sound_info)
}

// optional bool pinged_enemy_entity = 4;
inline bool CCitadelUserMsg_MapPing::_internal_has_pinged_enemy_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_MapPing::has_pinged_enemy_entity() const {
  return _internal_has_pinged_enemy_entity();
}
inline void CCitadelUserMsg_MapPing::clear_pinged_enemy_entity() {
  _impl_.pinged_enemy_entity_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool CCitadelUserMsg_MapPing::_internal_pinged_enemy_entity() const {
  return _impl_.pinged_enemy_entity_;
}
inline bool CCitadelUserMsg_MapPing::pinged_enemy_entity() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_MapPing.pinged_enemy_entity)
  return _internal_pinged_enemy_entity();
}
inline void CCitadelUserMsg_MapPing::_internal_set_pinged_enemy_entity(bool value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.pinged_enemy_entity_ = value;
}
inline void CCitadelUserMsg_MapPing::set_pinged_enemy_entity(bool value) {
  _internal_set_pinged_enemy_entity(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_MapPing.pinged_enemy_entity)
}

// optional uint32 pinged_entity_class = 5;
inline bool CCitadelUserMsg_MapPing::_internal_has_pinged_entity_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_MapPing::has_pinged_entity_class() const {
  return _internal_has_pinged_entity_class();
}
inline void CCitadelUserMsg_MapPing::clear_pinged_entity_class() {
  _impl_.pinged_entity_class_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CCitadelUserMsg_MapPing::_internal_pinged_entity_class() const {
  return _impl_.pinged_entity_class_;
}
inline uint32_t CCitadelUserMsg_MapPing::pinged_entity_class() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_MapPing.pinged_entity_class)
  return _internal_pinged_entity_class();
}
inline void CCitadelUserMsg_MapPing::_internal_set_pinged_entity_class(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.pinged_entity_class_ = value;
}
inline void CCitadelUserMsg_MapPing::set_pinged_entity_class(uint32_t value) {
  _internal_set_pinged_entity_class(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_MapPing.pinged_entity_class)
}

// optional bool is_minimap_ping = 6;
inline bool CCitadelUserMsg_MapPing::_internal_has_is_minimap_ping() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMsg_MapPing::has_is_minimap_ping() const {
  return _internal_has_is_minimap_ping();
}
inline void CCitadelUserMsg_MapPing::clear_is_minimap_ping() {
  _impl_.is_minimap_ping_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool CCitadelUserMsg_MapPing::_internal_is_minimap_ping() const {
  return _impl_.is_minimap_ping_;
}
inline bool CCitadelUserMsg_MapPing::is_minimap_ping() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_MapPing.is_minimap_ping)
  return _internal_is_minimap_ping();
}
inline void CCitadelUserMsg_MapPing::_internal_set_is_minimap_ping(bool value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.is_minimap_ping_ = value;
}
inline void CCitadelUserMsg_MapPing::set_is_minimap_ping(bool value) {
  _internal_set_is_minimap_ping(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_MapPing.is_minimap_ping)
}

// optional string pinged_hero_name = 7;
inline bool CCitadelUserMsg_MapPing::_internal_has_pinged_hero_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_MapPing::has_pinged_hero_name() const {
  return _internal_has_pinged_hero_name();
}
inline void CCitadelUserMsg_MapPing::clear_pinged_hero_name() {
  _impl_.pinged_hero_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCitadelUserMsg_MapPing::pinged_hero_name() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_MapPing.pinged_hero_name)
  return _internal_pinged_hero_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCitadelUserMsg_MapPing::set_pinged_hero_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.pinged_hero_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_MapPing.pinged_hero_name)
}
inline std::string* CCitadelUserMsg_MapPing::mutable_pinged_hero_name() {
  std::string* _s = _internal_mutable_pinged_hero_name();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_MapPing.pinged_hero_name)
  return _s;
}
inline const std::string& CCitadelUserMsg_MapPing::_internal_pinged_hero_name() const {
  return _impl_.pinged_hero_name_.Get();
}
inline void CCitadelUserMsg_MapPing::_internal_set_pinged_hero_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pinged_hero_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_MapPing::_internal_mutable_pinged_hero_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.pinged_hero_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_MapPing::release_pinged_hero_name() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_MapPing.pinged_hero_name)
  if (!_internal_has_pinged_hero_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.pinged_hero_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.pinged_hero_name_.IsDefault()) {
    _impl_.pinged_hero_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CCitadelUserMsg_MapPing::set_allocated_pinged_hero_name(std::string* pinged_hero_name) {
  if (pinged_hero_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pinged_hero_name_.SetAllocated(pinged_hero_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.pinged_hero_name_.IsDefault()) {
    _impl_.pinged_hero_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_MapPing.pinged_hero_name)
}

// optional bool is_blind_ping = 8;
inline bool CCitadelUserMsg_MapPing::_internal_has_is_blind_ping() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCitadelUserMsg_MapPing::has_is_blind_ping() const {
  return _internal_has_is_blind_ping();
}
inline void CCitadelUserMsg_MapPing::clear_is_blind_ping() {
  _impl_.is_blind_ping_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool CCitadelUserMsg_MapPing::_internal_is_blind_ping() const {
  return _impl_.is_blind_ping_;
}
inline bool CCitadelUserMsg_MapPing::is_blind_ping() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_MapPing.is_blind_ping)
  return _internal_is_blind_ping();
}
inline void CCitadelUserMsg_MapPing::_internal_set_is_blind_ping(bool value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.is_blind_ping_ = value;
}
inline void CCitadelUserMsg_MapPing::set_is_blind_ping(bool value) {
  _internal_set_is_blind_ping(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_MapPing.is_blind_ping)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_PingWheel

// required .PingCommonData ping_data = 1;
inline bool CCitadelUserMsg_PingWheel::_internal_has_ping_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ping_data_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_PingWheel::has_ping_data() const {
  return _internal_has_ping_data();
}
inline void CCitadelUserMsg_PingWheel::clear_ping_data() {
  if (_impl_.ping_data_ != nullptr) _impl_.ping_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PingCommonData& CCitadelUserMsg_PingWheel::_internal_ping_data() const {
  const ::PingCommonData* p = _impl_.ping_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::PingCommonData&>(
      ::_PingCommonData_default_instance_);
}
inline const ::PingCommonData& CCitadelUserMsg_PingWheel::ping_data() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PingWheel.ping_data)
  return _internal_ping_data();
}
inline void CCitadelUserMsg_PingWheel::unsafe_arena_set_allocated_ping_data(
    ::PingCommonData* ping_data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_data_);
  }
  _impl_.ping_data_ = ping_data;
  if (ping_data) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_PingWheel.ping_data)
}
inline ::PingCommonData* CCitadelUserMsg_PingWheel::release_ping_data() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PingCommonData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PingCommonData* CCitadelUserMsg_PingWheel::unsafe_arena_release_ping_data() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_PingWheel.ping_data)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PingCommonData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
  return temp;
}
inline ::PingCommonData* CCitadelUserMsg_PingWheel::_internal_mutable_ping_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ping_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::PingCommonData>(GetArenaForAllocation());
    _impl_.ping_data_ = p;
  }
  return _impl_.ping_data_;
}
inline ::PingCommonData* CCitadelUserMsg_PingWheel::mutable_ping_data() {
  ::PingCommonData* _msg = _internal_mutable_ping_data();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_PingWheel.ping_data)
  return _msg;
}
inline void CCitadelUserMsg_PingWheel::set_allocated_ping_data(::PingCommonData* ping_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.ping_data_;
  }
  if (ping_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ping_data);
    if (message_arena != submessage_arena) {
      ping_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ping_data, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ping_data_ = ping_data;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_PingWheel.ping_data)
}

// optional uint32 ping_wheel_option_id = 2;
inline bool CCitadelUserMsg_PingWheel::_internal_has_ping_wheel_option_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PingWheel::has_ping_wheel_option_id() const {
  return _internal_has_ping_wheel_option_id();
}
inline void CCitadelUserMsg_PingWheel::clear_ping_wheel_option_id() {
  _impl_.ping_wheel_option_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CCitadelUserMsg_PingWheel::_internal_ping_wheel_option_id() const {
  return _impl_.ping_wheel_option_id_;
}
inline uint32_t CCitadelUserMsg_PingWheel::ping_wheel_option_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PingWheel.ping_wheel_option_id)
  return _internal_ping_wheel_option_id();
}
inline void CCitadelUserMsg_PingWheel::_internal_set_ping_wheel_option_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ping_wheel_option_id_ = value;
}
inline void CCitadelUserMsg_PingWheel::set_ping_wheel_option_id(uint32_t value) {
  _internal_set_ping_wheel_option_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PingWheel.ping_wheel_option_id)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_AbilityPing

// optional .PingCommonData ping_data = 1;
inline bool CCitadelUserMsg_AbilityPing::_internal_has_ping_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ping_data_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_AbilityPing::has_ping_data() const {
  return _internal_has_ping_data();
}
inline void CCitadelUserMsg_AbilityPing::clear_ping_data() {
  if (_impl_.ping_data_ != nullptr) _impl_.ping_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PingCommonData& CCitadelUserMsg_AbilityPing::_internal_ping_data() const {
  const ::PingCommonData* p = _impl_.ping_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::PingCommonData&>(
      ::_PingCommonData_default_instance_);
}
inline const ::PingCommonData& CCitadelUserMsg_AbilityPing::ping_data() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityPing.ping_data)
  return _internal_ping_data();
}
inline void CCitadelUserMsg_AbilityPing::unsafe_arena_set_allocated_ping_data(
    ::PingCommonData* ping_data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_data_);
  }
  _impl_.ping_data_ = ping_data;
  if (ping_data) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_AbilityPing.ping_data)
}
inline ::PingCommonData* CCitadelUserMsg_AbilityPing::release_ping_data() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PingCommonData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PingCommonData* CCitadelUserMsg_AbilityPing::unsafe_arena_release_ping_data() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_AbilityPing.ping_data)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PingCommonData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
  return temp;
}
inline ::PingCommonData* CCitadelUserMsg_AbilityPing::_internal_mutable_ping_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ping_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::PingCommonData>(GetArenaForAllocation());
    _impl_.ping_data_ = p;
  }
  return _impl_.ping_data_;
}
inline ::PingCommonData* CCitadelUserMsg_AbilityPing::mutable_ping_data() {
  ::PingCommonData* _msg = _internal_mutable_ping_data();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_AbilityPing.ping_data)
  return _msg;
}
inline void CCitadelUserMsg_AbilityPing::set_allocated_ping_data(::PingCommonData* ping_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.ping_data_;
  }
  if (ping_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ping_data);
    if (message_arena != submessage_arena) {
      ping_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ping_data, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ping_data_ = ping_data;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_AbilityPing.ping_data)
}

// optional uint32 ability_id = 2;
inline bool CCitadelUserMsg_AbilityPing::_internal_has_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityPing::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CCitadelUserMsg_AbilityPing::clear_ability_id() {
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CCitadelUserMsg_AbilityPing::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline uint32_t CCitadelUserMsg_AbilityPing::ability_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityPing.ability_id)
  return _internal_ability_id();
}
inline void CCitadelUserMsg_AbilityPing::_internal_set_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ability_id_ = value;
}
inline void CCitadelUserMsg_AbilityPing::set_ability_id(uint32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityPing.ability_id)
}

// optional float ability_cooldown = 3;
inline bool CCitadelUserMsg_AbilityPing::_internal_has_ability_cooldown() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityPing::has_ability_cooldown() const {
  return _internal_has_ability_cooldown();
}
inline void CCitadelUserMsg_AbilityPing::clear_ability_cooldown() {
  _impl_.ability_cooldown_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CCitadelUserMsg_AbilityPing::_internal_ability_cooldown() const {
  return _impl_.ability_cooldown_;
}
inline float CCitadelUserMsg_AbilityPing::ability_cooldown() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityPing.ability_cooldown)
  return _internal_ability_cooldown();
}
inline void CCitadelUserMsg_AbilityPing::_internal_set_ability_cooldown(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.ability_cooldown_ = value;
}
inline void CCitadelUserMsg_AbilityPing::set_ability_cooldown(float value) {
  _internal_set_ability_cooldown(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityPing.ability_cooldown)
}

// optional .ChatMsgPingMarkerInfo ping_marker_and_sound_info = 4 [default = k_EPingMarkerInfo_ShowMarkerAndSound];
inline bool CCitadelUserMsg_AbilityPing::_internal_has_ping_marker_and_sound_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityPing::has_ping_marker_and_sound_info() const {
  return _internal_has_ping_marker_and_sound_info();
}
inline void CCitadelUserMsg_AbilityPing::clear_ping_marker_and_sound_info() {
  _impl_.ping_marker_and_sound_info_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::ChatMsgPingMarkerInfo CCitadelUserMsg_AbilityPing::_internal_ping_marker_and_sound_info() const {
  return static_cast< ::ChatMsgPingMarkerInfo >(_impl_.ping_marker_and_sound_info_);
}
inline ::ChatMsgPingMarkerInfo CCitadelUserMsg_AbilityPing::ping_marker_and_sound_info() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityPing.ping_marker_and_sound_info)
  return _internal_ping_marker_and_sound_info();
}
inline void CCitadelUserMsg_AbilityPing::_internal_set_ping_marker_and_sound_info(::ChatMsgPingMarkerInfo value) {
  assert(::ChatMsgPingMarkerInfo_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.ping_marker_and_sound_info_ = value;
}
inline void CCitadelUserMsg_AbilityPing::set_ping_marker_and_sound_info(::ChatMsgPingMarkerInfo value) {
  _internal_set_ping_marker_and_sound_info(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityPing.ping_marker_and_sound_info)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_QuickResponse

// required .PingCommonData ping_data = 1;
inline bool CCitadelUserMsg_QuickResponse::_internal_has_ping_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ping_data_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_QuickResponse::has_ping_data() const {
  return _internal_has_ping_data();
}
inline void CCitadelUserMsg_QuickResponse::clear_ping_data() {
  if (_impl_.ping_data_ != nullptr) _impl_.ping_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PingCommonData& CCitadelUserMsg_QuickResponse::_internal_ping_data() const {
  const ::PingCommonData* p = _impl_.ping_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::PingCommonData&>(
      ::_PingCommonData_default_instance_);
}
inline const ::PingCommonData& CCitadelUserMsg_QuickResponse::ping_data() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_QuickResponse.ping_data)
  return _internal_ping_data();
}
inline void CCitadelUserMsg_QuickResponse::unsafe_arena_set_allocated_ping_data(
    ::PingCommonData* ping_data) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ping_data_);
  }
  _impl_.ping_data_ = ping_data;
  if (ping_data) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_QuickResponse.ping_data)
}
inline ::PingCommonData* CCitadelUserMsg_QuickResponse::release_ping_data() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PingCommonData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PingCommonData* CCitadelUserMsg_QuickResponse::unsafe_arena_release_ping_data() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_QuickResponse.ping_data)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PingCommonData* temp = _impl_.ping_data_;
  _impl_.ping_data_ = nullptr;
  return temp;
}
inline ::PingCommonData* CCitadelUserMsg_QuickResponse::_internal_mutable_ping_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ping_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::PingCommonData>(GetArenaForAllocation());
    _impl_.ping_data_ = p;
  }
  return _impl_.ping_data_;
}
inline ::PingCommonData* CCitadelUserMsg_QuickResponse::mutable_ping_data() {
  ::PingCommonData* _msg = _internal_mutable_ping_data();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_QuickResponse.ping_data)
  return _msg;
}
inline void CCitadelUserMsg_QuickResponse::set_allocated_ping_data(::PingCommonData* ping_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.ping_data_;
  }
  if (ping_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ping_data);
    if (message_arena != submessage_arena) {
      ping_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ping_data, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ping_data_ = ping_data;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_QuickResponse.ping_data)
}

// optional uint32 responding_to_ping_message_id = 2;
inline bool CCitadelUserMsg_QuickResponse::_internal_has_responding_to_ping_message_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_QuickResponse::has_responding_to_ping_message_id() const {
  return _internal_has_responding_to_ping_message_id();
}
inline void CCitadelUserMsg_QuickResponse::clear_responding_to_ping_message_id() {
  _impl_.responding_to_ping_message_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CCitadelUserMsg_QuickResponse::_internal_responding_to_ping_message_id() const {
  return _impl_.responding_to_ping_message_id_;
}
inline uint32_t CCitadelUserMsg_QuickResponse::responding_to_ping_message_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_QuickResponse.responding_to_ping_message_id)
  return _internal_responding_to_ping_message_id();
}
inline void CCitadelUserMsg_QuickResponse::_internal_set_responding_to_ping_message_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.responding_to_ping_message_id_ = value;
}
inline void CCitadelUserMsg_QuickResponse::set_responding_to_ping_message_id(uint32_t value) {
  _internal_set_responding_to_ping_message_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_QuickResponse.responding_to_ping_message_id)
}

// optional int32 responding_to_player_slot = 3 [default = -1];
inline bool CCitadelUserMsg_QuickResponse::_internal_has_responding_to_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_QuickResponse::has_responding_to_player_slot() const {
  return _internal_has_responding_to_player_slot();
}
inline void CCitadelUserMsg_QuickResponse::clear_responding_to_player_slot() {
  _impl_.responding_to_player_slot_ = -1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CCitadelUserMsg_QuickResponse::_internal_responding_to_player_slot() const {
  return _impl_.responding_to_player_slot_;
}
inline int32_t CCitadelUserMsg_QuickResponse::responding_to_player_slot() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_QuickResponse.responding_to_player_slot)
  return _internal_responding_to_player_slot();
}
inline void CCitadelUserMsg_QuickResponse::_internal_set_responding_to_player_slot(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.responding_to_player_slot_ = value;
}
inline void CCitadelUserMsg_QuickResponse::set_responding_to_player_slot(int32_t value) {
  _internal_set_responding_to_player_slot(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_QuickResponse.responding_to_player_slot)
}

// optional .CMsgLaneColor lane_color = 4 [default = k_ELaneColor_Invalid];
inline bool CCitadelUserMsg_QuickResponse::_internal_has_lane_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_QuickResponse::has_lane_color() const {
  return _internal_has_lane_color();
}
inline void CCitadelUserMsg_QuickResponse::clear_lane_color() {
  _impl_.lane_color_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CMsgLaneColor CCitadelUserMsg_QuickResponse::_internal_lane_color() const {
  return static_cast< ::CMsgLaneColor >(_impl_.lane_color_);
}
inline ::CMsgLaneColor CCitadelUserMsg_QuickResponse::lane_color() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_QuickResponse.lane_color)
  return _internal_lane_color();
}
inline void CCitadelUserMsg_QuickResponse::_internal_set_lane_color(::CMsgLaneColor value) {
  assert(::CMsgLaneColor_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.lane_color_ = value;
}
inline void CCitadelUserMsg_QuickResponse::set_lane_color(::CMsgLaneColor value) {
  _internal_set_lane_color(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_QuickResponse.lane_color)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_MapLine

// optional int32 sender_player_slot = 1 [default = -1];
inline bool CCitadelUserMsg_MapLine::_internal_has_sender_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_MapLine::has_sender_player_slot() const {
  return _internal_has_sender_player_slot();
}
inline void CCitadelUserMsg_MapLine::clear_sender_player_slot() {
  _impl_.sender_player_slot_ = -1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_MapLine::_internal_sender_player_slot() const {
  return _impl_.sender_player_slot_;
}
inline int32_t CCitadelUserMsg_MapLine::sender_player_slot() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_MapLine.sender_player_slot)
  return _internal_sender_player_slot();
}
inline void CCitadelUserMsg_MapLine::_internal_set_sender_player_slot(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sender_player_slot_ = value;
}
inline void CCitadelUserMsg_MapLine::set_sender_player_slot(int32_t value) {
  _internal_set_sender_player_slot(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_MapLine.sender_player_slot)
}

// optional .CMsgMapLine mapline = 2;
inline bool CCitadelUserMsg_MapLine::_internal_has_mapline() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mapline_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_MapLine::has_mapline() const {
  return _internal_has_mapline();
}
inline const ::CMsgMapLine& CCitadelUserMsg_MapLine::_internal_mapline() const {
  const ::CMsgMapLine* p = _impl_.mapline_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgMapLine&>(
      ::_CMsgMapLine_default_instance_);
}
inline const ::CMsgMapLine& CCitadelUserMsg_MapLine::mapline() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_MapLine.mapline)
  return _internal_mapline();
}
inline void CCitadelUserMsg_MapLine::unsafe_arena_set_allocated_mapline(
    ::CMsgMapLine* mapline) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mapline_);
  }
  _impl_.mapline_ = mapline;
  if (mapline) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_MapLine.mapline)
}
inline ::CMsgMapLine* CCitadelUserMsg_MapLine::release_mapline() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgMapLine* temp = _impl_.mapline_;
  _impl_.mapline_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgMapLine* CCitadelUserMsg_MapLine::unsafe_arena_release_mapline() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_MapLine.mapline)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgMapLine* temp = _impl_.mapline_;
  _impl_.mapline_ = nullptr;
  return temp;
}
inline ::CMsgMapLine* CCitadelUserMsg_MapLine::_internal_mutable_mapline() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.mapline_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgMapLine>(GetArenaForAllocation());
    _impl_.mapline_ = p;
  }
  return _impl_.mapline_;
}
inline ::CMsgMapLine* CCitadelUserMsg_MapLine::mutable_mapline() {
  ::CMsgMapLine* _msg = _internal_mutable_mapline();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_MapLine.mapline)
  return _msg;
}
inline void CCitadelUserMsg_MapLine::set_allocated_mapline(::CMsgMapLine* mapline) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.mapline_);
  }
  if (mapline) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mapline));
    if (message_arena != submessage_arena) {
      mapline = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mapline, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.mapline_ = mapline;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_MapLine.mapline)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_TeamRewards

// optional uint32 xp = 1;
inline bool CCitadelUserMsg_TeamRewards::_internal_has_xp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_TeamRewards::has_xp() const {
  return _internal_has_xp();
}
inline void CCitadelUserMsg_TeamRewards::clear_xp() {
  _impl_.xp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CCitadelUserMsg_TeamRewards::_internal_xp() const {
  return _impl_.xp_;
}
inline uint32_t CCitadelUserMsg_TeamRewards::xp() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_TeamRewards.xp)
  return _internal_xp();
}
inline void CCitadelUserMsg_TeamRewards::_internal_set_xp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.xp_ = value;
}
inline void CCitadelUserMsg_TeamRewards::set_xp(uint32_t value) {
  _internal_set_xp(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_TeamRewards.xp)
}

// optional uint32 gold = 2;
inline bool CCitadelUserMsg_TeamRewards::_internal_has_gold() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_TeamRewards::has_gold() const {
  return _internal_has_gold();
}
inline void CCitadelUserMsg_TeamRewards::clear_gold() {
  _impl_.gold_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CCitadelUserMsg_TeamRewards::_internal_gold() const {
  return _impl_.gold_;
}
inline uint32_t CCitadelUserMsg_TeamRewards::gold() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_TeamRewards.gold)
  return _internal_gold();
}
inline void CCitadelUserMsg_TeamRewards::_internal_set_gold(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.gold_ = value;
}
inline void CCitadelUserMsg_TeamRewards::set_gold(uint32_t value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_TeamRewards.gold)
}

// optional bool winner = 3;
inline bool CCitadelUserMsg_TeamRewards::_internal_has_winner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_TeamRewards::has_winner() const {
  return _internal_has_winner();
}
inline void CCitadelUserMsg_TeamRewards::clear_winner() {
  _impl_.winner_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CCitadelUserMsg_TeamRewards::_internal_winner() const {
  return _impl_.winner_;
}
inline bool CCitadelUserMsg_TeamRewards::winner() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_TeamRewards.winner)
  return _internal_winner();
}
inline void CCitadelUserMsg_TeamRewards::_internal_set_winner(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.winner_ = value;
}
inline void CCitadelUserMsg_TeamRewards::set_winner(bool value) {
  _internal_set_winner(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_TeamRewards.winner)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_TriggerDamageFlash

// optional int32 entindex_flash_victim = 1 [default = -1];
inline bool CCitadelUserMsg_TriggerDamageFlash::_internal_has_entindex_flash_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_TriggerDamageFlash::has_entindex_flash_victim() const {
  return _internal_has_entindex_flash_victim();
}
inline void CCitadelUserMsg_TriggerDamageFlash::clear_entindex_flash_victim() {
  _impl_.entindex_flash_victim_ = -1;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int32_t CCitadelUserMsg_TriggerDamageFlash::_internal_entindex_flash_victim() const {
  return _impl_.entindex_flash_victim_;
}
inline int32_t CCitadelUserMsg_TriggerDamageFlash::entindex_flash_victim() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_TriggerDamageFlash.entindex_flash_victim)
  return _internal_entindex_flash_victim();
}
inline void CCitadelUserMsg_TriggerDamageFlash::_internal_set_entindex_flash_victim(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.entindex_flash_victim_ = value;
}
inline void CCitadelUserMsg_TriggerDamageFlash::set_entindex_flash_victim(int32_t value) {
  _internal_set_entindex_flash_victim(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_TriggerDamageFlash.entindex_flash_victim)
}

// optional int32 entindex_flash_attacker = 2 [default = -1];
inline bool CCitadelUserMsg_TriggerDamageFlash::_internal_has_entindex_flash_attacker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMsg_TriggerDamageFlash::has_entindex_flash_attacker() const {
  return _internal_has_entindex_flash_attacker();
}
inline void CCitadelUserMsg_TriggerDamageFlash::clear_entindex_flash_attacker() {
  _impl_.entindex_flash_attacker_ = -1;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int32_t CCitadelUserMsg_TriggerDamageFlash::_internal_entindex_flash_attacker() const {
  return _impl_.entindex_flash_attacker_;
}
inline int32_t CCitadelUserMsg_TriggerDamageFlash::entindex_flash_attacker() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_TriggerDamageFlash.entindex_flash_attacker)
  return _internal_entindex_flash_attacker();
}
inline void CCitadelUserMsg_TriggerDamageFlash::_internal_set_entindex_flash_attacker(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.entindex_flash_attacker_ = value;
}
inline void CCitadelUserMsg_TriggerDamageFlash::set_entindex_flash_attacker(int32_t value) {
  _internal_set_entindex_flash_attacker(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_TriggerDamageFlash.entindex_flash_attacker)
}

// optional int32 entindex_flash_hitgroup = 3;
inline bool CCitadelUserMsg_TriggerDamageFlash::_internal_has_entindex_flash_hitgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_TriggerDamageFlash::has_entindex_flash_hitgroup() const {
  return _internal_has_entindex_flash_hitgroup();
}
inline void CCitadelUserMsg_TriggerDamageFlash::clear_entindex_flash_hitgroup() {
  _impl_.entindex_flash_hitgroup_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_TriggerDamageFlash::_internal_entindex_flash_hitgroup() const {
  return _impl_.entindex_flash_hitgroup_;
}
inline int32_t CCitadelUserMsg_TriggerDamageFlash::entindex_flash_hitgroup() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_TriggerDamageFlash.entindex_flash_hitgroup)
  return _internal_entindex_flash_hitgroup();
}
inline void CCitadelUserMsg_TriggerDamageFlash::_internal_set_entindex_flash_hitgroup(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entindex_flash_hitgroup_ = value;
}
inline void CCitadelUserMsg_TriggerDamageFlash::set_entindex_flash_hitgroup(int32_t value) {
  _internal_set_entindex_flash_hitgroup(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_TriggerDamageFlash.entindex_flash_hitgroup)
}

// optional uint32 flash_value = 4;
inline bool CCitadelUserMsg_TriggerDamageFlash::_internal_has_flash_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_TriggerDamageFlash::has_flash_value() const {
  return _internal_has_flash_value();
}
inline void CCitadelUserMsg_TriggerDamageFlash::clear_flash_value() {
  _impl_.flash_value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CCitadelUserMsg_TriggerDamageFlash::_internal_flash_value() const {
  return _impl_.flash_value_;
}
inline uint32_t CCitadelUserMsg_TriggerDamageFlash::flash_value() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_TriggerDamageFlash.flash_value)
  return _internal_flash_value();
}
inline void CCitadelUserMsg_TriggerDamageFlash::_internal_set_flash_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.flash_value_ = value;
}
inline void CCitadelUserMsg_TriggerDamageFlash::set_flash_value(uint32_t value) {
  _internal_set_flash_value(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_TriggerDamageFlash.flash_value)
}

// optional uint32 flash_type = 5;
inline bool CCitadelUserMsg_TriggerDamageFlash::_internal_has_flash_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_TriggerDamageFlash::has_flash_type() const {
  return _internal_has_flash_type();
}
inline void CCitadelUserMsg_TriggerDamageFlash::clear_flash_type() {
  _impl_.flash_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CCitadelUserMsg_TriggerDamageFlash::_internal_flash_type() const {
  return _impl_.flash_type_;
}
inline uint32_t CCitadelUserMsg_TriggerDamageFlash::flash_type() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_TriggerDamageFlash.flash_type)
  return _internal_flash_type();
}
inline void CCitadelUserMsg_TriggerDamageFlash::_internal_set_flash_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.flash_type_ = value;
}
inline void CCitadelUserMsg_TriggerDamageFlash::set_flash_type(uint32_t value) {
  _internal_set_flash_type(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_TriggerDamageFlash.flash_type)
}

// optional uint32 flash_flags = 6;
inline bool CCitadelUserMsg_TriggerDamageFlash::_internal_has_flash_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_TriggerDamageFlash::has_flash_flags() const {
  return _internal_has_flash_flags();
}
inline void CCitadelUserMsg_TriggerDamageFlash::clear_flash_flags() {
  _impl_.flash_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CCitadelUserMsg_TriggerDamageFlash::_internal_flash_flags() const {
  return _impl_.flash_flags_;
}
inline uint32_t CCitadelUserMsg_TriggerDamageFlash::flash_flags() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_TriggerDamageFlash.flash_flags)
  return _internal_flash_flags();
}
inline void CCitadelUserMsg_TriggerDamageFlash::_internal_set_flash_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.flash_flags_ = value;
}
inline void CCitadelUserMsg_TriggerDamageFlash::set_flash_flags(uint32_t value) {
  _internal_set_flash_flags(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_TriggerDamageFlash.flash_flags)
}

// optional .CMsgVector flash_position = 7;
inline bool CCitadelUserMsg_TriggerDamageFlash::_internal_has_flash_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.flash_position_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_TriggerDamageFlash::has_flash_position() const {
  return _internal_has_flash_position();
}
inline const ::CMsgVector& CCitadelUserMsg_TriggerDamageFlash::_internal_flash_position() const {
  const ::CMsgVector* p = _impl_.flash_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCitadelUserMsg_TriggerDamageFlash::flash_position() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_TriggerDamageFlash.flash_position)
  return _internal_flash_position();
}
inline void CCitadelUserMsg_TriggerDamageFlash::unsafe_arena_set_allocated_flash_position(
    ::CMsgVector* flash_position) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flash_position_);
  }
  _impl_.flash_position_ = flash_position;
  if (flash_position) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_TriggerDamageFlash.flash_position)
}
inline ::CMsgVector* CCitadelUserMsg_TriggerDamageFlash::release_flash_position() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.flash_position_;
  _impl_.flash_position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_TriggerDamageFlash::unsafe_arena_release_flash_position() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_TriggerDamageFlash.flash_position)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.flash_position_;
  _impl_.flash_position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_TriggerDamageFlash::_internal_mutable_flash_position() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.flash_position_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.flash_position_ = p;
  }
  return _impl_.flash_position_;
}
inline ::CMsgVector* CCitadelUserMsg_TriggerDamageFlash::mutable_flash_position() {
  ::CMsgVector* _msg = _internal_mutable_flash_position();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_TriggerDamageFlash.flash_position)
  return _msg;
}
inline void CCitadelUserMsg_TriggerDamageFlash::set_allocated_flash_position(::CMsgVector* flash_position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.flash_position_);
  }
  if (flash_position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(flash_position));
    if (message_arena != submessage_arena) {
      flash_position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, flash_position, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.flash_position_ = flash_position;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_TriggerDamageFlash.flash_position)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_AbilitiesChanged

// optional int32 entindex_purchaser = 1 [default = -1];
inline bool CCitadelUserMsg_AbilitiesChanged::_internal_has_entindex_purchaser() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilitiesChanged::has_entindex_purchaser() const {
  return _internal_has_entindex_purchaser();
}
inline void CCitadelUserMsg_AbilitiesChanged::clear_entindex_purchaser() {
  _impl_.entindex_purchaser_ = -1;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMsg_AbilitiesChanged::_internal_entindex_purchaser() const {
  return _impl_.entindex_purchaser_;
}
inline int32_t CCitadelUserMsg_AbilitiesChanged::entindex_purchaser() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilitiesChanged.entindex_purchaser)
  return _internal_entindex_purchaser();
}
inline void CCitadelUserMsg_AbilitiesChanged::_internal_set_entindex_purchaser(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.entindex_purchaser_ = value;
}
inline void CCitadelUserMsg_AbilitiesChanged::set_entindex_purchaser(int32_t value) {
  _internal_set_entindex_purchaser(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilitiesChanged.entindex_purchaser)
}

// optional int32 entindex_ability = 2 [default = -1];
inline bool CCitadelUserMsg_AbilitiesChanged::_internal_has_entindex_ability() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilitiesChanged::has_entindex_ability() const {
  return _internal_has_entindex_ability();
}
inline void CCitadelUserMsg_AbilitiesChanged::clear_entindex_ability() {
  _impl_.entindex_ability_ = -1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CCitadelUserMsg_AbilitiesChanged::_internal_entindex_ability() const {
  return _impl_.entindex_ability_;
}
inline int32_t CCitadelUserMsg_AbilitiesChanged::entindex_ability() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilitiesChanged.entindex_ability)
  return _internal_entindex_ability();
}
inline void CCitadelUserMsg_AbilitiesChanged::_internal_set_entindex_ability(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.entindex_ability_ = value;
}
inline void CCitadelUserMsg_AbilitiesChanged::set_entindex_ability(int32_t value) {
  _internal_set_entindex_ability(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilitiesChanged.entindex_ability)
}

// optional uint32 ability_id = 3;
inline bool CCitadelUserMsg_AbilitiesChanged::_internal_has_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilitiesChanged::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CCitadelUserMsg_AbilitiesChanged::clear_ability_id() {
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CCitadelUserMsg_AbilitiesChanged::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline uint32_t CCitadelUserMsg_AbilitiesChanged::ability_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilitiesChanged.ability_id)
  return _internal_ability_id();
}
inline void CCitadelUserMsg_AbilitiesChanged::_internal_set_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ability_id_ = value;
}
inline void CCitadelUserMsg_AbilitiesChanged::set_ability_id(uint32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilitiesChanged.ability_id)
}

// optional .CCitadelUserMsg_AbilitiesChanged.Change change = 4 [default = EInvalid];
inline bool CCitadelUserMsg_AbilitiesChanged::_internal_has_change() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilitiesChanged::has_change() const {
  return _internal_has_change();
}
inline void CCitadelUserMsg_AbilitiesChanged::clear_change() {
  _impl_.change_ = -1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CCitadelUserMsg_AbilitiesChanged_Change CCitadelUserMsg_AbilitiesChanged::_internal_change() const {
  return static_cast< ::CCitadelUserMsg_AbilitiesChanged_Change >(_impl_.change_);
}
inline ::CCitadelUserMsg_AbilitiesChanged_Change CCitadelUserMsg_AbilitiesChanged::change() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilitiesChanged.change)
  return _internal_change();
}
inline void CCitadelUserMsg_AbilitiesChanged::_internal_set_change(::CCitadelUserMsg_AbilitiesChanged_Change value) {
  assert(::CCitadelUserMsg_AbilitiesChanged_Change_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.change_ = value;
}
inline void CCitadelUserMsg_AbilitiesChanged::set_change(::CCitadelUserMsg_AbilitiesChanged_Change value) {
  _internal_set_change(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilitiesChanged.change)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_AbilityInterrupted

// optional int32 entindex_victim = 1 [default = -1];
inline bool CCitadelUserMsg_AbilityInterrupted::_internal_has_entindex_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityInterrupted::has_entindex_victim() const {
  return _internal_has_entindex_victim();
}
inline void CCitadelUserMsg_AbilityInterrupted::clear_entindex_victim() {
  _impl_.entindex_victim_ = -1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CCitadelUserMsg_AbilityInterrupted::_internal_entindex_victim() const {
  return _impl_.entindex_victim_;
}
inline int32_t CCitadelUserMsg_AbilityInterrupted::entindex_victim() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityInterrupted.entindex_victim)
  return _internal_entindex_victim();
}
inline void CCitadelUserMsg_AbilityInterrupted::_internal_set_entindex_victim(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.entindex_victim_ = value;
}
inline void CCitadelUserMsg_AbilityInterrupted::set_entindex_victim(int32_t value) {
  _internal_set_entindex_victim(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityInterrupted.entindex_victim)
}

// optional int32 entindex_interrupter = 2 [default = -1];
inline bool CCitadelUserMsg_AbilityInterrupted::_internal_has_entindex_interrupter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityInterrupted::has_entindex_interrupter() const {
  return _internal_has_entindex_interrupter();
}
inline void CCitadelUserMsg_AbilityInterrupted::clear_entindex_interrupter() {
  _impl_.entindex_interrupter_ = -1;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline int32_t CCitadelUserMsg_AbilityInterrupted::_internal_entindex_interrupter() const {
  return _impl_.entindex_interrupter_;
}
inline int32_t CCitadelUserMsg_AbilityInterrupted::entindex_interrupter() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityInterrupted.entindex_interrupter)
  return _internal_entindex_interrupter();
}
inline void CCitadelUserMsg_AbilityInterrupted::_internal_set_entindex_interrupter(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.entindex_interrupter_ = value;
}
inline void CCitadelUserMsg_AbilityInterrupted::set_entindex_interrupter(int32_t value) {
  _internal_set_entindex_interrupter(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityInterrupted.entindex_interrupter)
}

// optional uint32 ability_id_interrupted = 3;
inline bool CCitadelUserMsg_AbilityInterrupted::_internal_has_ability_id_interrupted() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityInterrupted::has_ability_id_interrupted() const {
  return _internal_has_ability_id_interrupted();
}
inline void CCitadelUserMsg_AbilityInterrupted::clear_ability_id_interrupted() {
  _impl_.ability_id_interrupted_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CCitadelUserMsg_AbilityInterrupted::_internal_ability_id_interrupted() const {
  return _impl_.ability_id_interrupted_;
}
inline uint32_t CCitadelUserMsg_AbilityInterrupted::ability_id_interrupted() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityInterrupted.ability_id_interrupted)
  return _internal_ability_id_interrupted();
}
inline void CCitadelUserMsg_AbilityInterrupted::_internal_set_ability_id_interrupted(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ability_id_interrupted_ = value;
}
inline void CCitadelUserMsg_AbilityInterrupted::set_ability_id_interrupted(uint32_t value) {
  _internal_set_ability_id_interrupted(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityInterrupted.ability_id_interrupted)
}

// optional uint32 ability_id_interrupter = 4;
inline bool CCitadelUserMsg_AbilityInterrupted::_internal_has_ability_id_interrupter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityInterrupted::has_ability_id_interrupter() const {
  return _internal_has_ability_id_interrupter();
}
inline void CCitadelUserMsg_AbilityInterrupted::clear_ability_id_interrupter() {
  _impl_.ability_id_interrupter_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CCitadelUserMsg_AbilityInterrupted::_internal_ability_id_interrupter() const {
  return _impl_.ability_id_interrupter_;
}
inline uint32_t CCitadelUserMsg_AbilityInterrupted::ability_id_interrupter() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityInterrupted.ability_id_interrupter)
  return _internal_ability_id_interrupter();
}
inline void CCitadelUserMsg_AbilityInterrupted::_internal_set_ability_id_interrupter(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ability_id_interrupter_ = value;
}
inline void CCitadelUserMsg_AbilityInterrupted::set_ability_id_interrupter(uint32_t value) {
  _internal_set_ability_id_interrupter(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityInterrupted.ability_id_interrupter)
}

// optional uint32 hero_id_interrupter = 5;
inline bool CCitadelUserMsg_AbilityInterrupted::_internal_has_hero_id_interrupter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityInterrupted::has_hero_id_interrupter() const {
  return _internal_has_hero_id_interrupter();
}
inline void CCitadelUserMsg_AbilityInterrupted::clear_hero_id_interrupter() {
  _impl_.hero_id_interrupter_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CCitadelUserMsg_AbilityInterrupted::_internal_hero_id_interrupter() const {
  return _impl_.hero_id_interrupter_;
}
inline uint32_t CCitadelUserMsg_AbilityInterrupted::hero_id_interrupter() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityInterrupted.hero_id_interrupter)
  return _internal_hero_id_interrupter();
}
inline void CCitadelUserMsg_AbilityInterrupted::_internal_set_hero_id_interrupter(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.hero_id_interrupter_ = value;
}
inline void CCitadelUserMsg_AbilityInterrupted::set_hero_id_interrupter(uint32_t value) {
  _internal_set_hero_id_interrupter(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityInterrupted.hero_id_interrupter)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_AbilityLateFailure

// optional int32 entindex_caster = 1 [default = -1];
inline bool CCitadelUserMsg_AbilityLateFailure::_internal_has_entindex_caster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityLateFailure::has_entindex_caster() const {
  return _internal_has_entindex_caster();
}
inline void CCitadelUserMsg_AbilityLateFailure::clear_entindex_caster() {
  _impl_.entindex_caster_ = -1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_AbilityLateFailure::_internal_entindex_caster() const {
  return _impl_.entindex_caster_;
}
inline int32_t CCitadelUserMsg_AbilityLateFailure::entindex_caster() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityLateFailure.entindex_caster)
  return _internal_entindex_caster();
}
inline void CCitadelUserMsg_AbilityLateFailure::_internal_set_entindex_caster(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entindex_caster_ = value;
}
inline void CCitadelUserMsg_AbilityLateFailure::set_entindex_caster(int32_t value) {
  _internal_set_entindex_caster(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityLateFailure.entindex_caster)
}

// optional int32 entindex_ability = 2 [default = -1];
inline bool CCitadelUserMsg_AbilityLateFailure::_internal_has_entindex_ability() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityLateFailure::has_entindex_ability() const {
  return _internal_has_entindex_ability();
}
inline void CCitadelUserMsg_AbilityLateFailure::clear_entindex_ability() {
  _impl_.entindex_ability_ = -1;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMsg_AbilityLateFailure::_internal_entindex_ability() const {
  return _impl_.entindex_ability_;
}
inline int32_t CCitadelUserMsg_AbilityLateFailure::entindex_ability() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityLateFailure.entindex_ability)
  return _internal_entindex_ability();
}
inline void CCitadelUserMsg_AbilityLateFailure::_internal_set_entindex_ability(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.entindex_ability_ = value;
}
inline void CCitadelUserMsg_AbilityLateFailure::set_entindex_ability(int32_t value) {
  _internal_set_entindex_ability(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityLateFailure.entindex_ability)
}

// optional uint32 failure_type = 3;
inline bool CCitadelUserMsg_AbilityLateFailure::_internal_has_failure_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_AbilityLateFailure::has_failure_type() const {
  return _internal_has_failure_type();
}
inline void CCitadelUserMsg_AbilityLateFailure::clear_failure_type() {
  _impl_.failure_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CCitadelUserMsg_AbilityLateFailure::_internal_failure_type() const {
  return _impl_.failure_type_;
}
inline uint32_t CCitadelUserMsg_AbilityLateFailure::failure_type() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_AbilityLateFailure.failure_type)
  return _internal_failure_type();
}
inline void CCitadelUserMsg_AbilityLateFailure::_internal_set_failure_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.failure_type_ = value;
}
inline void CCitadelUserMsg_AbilityLateFailure::set_failure_type(uint32_t value) {
  _internal_set_failure_type(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_AbilityLateFailure.failure_type)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_RecentDamageSummary_DamageRecord

// optional int32 damage = 1;
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_has_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::has_damage() const {
  return _internal_has_damage();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::clear_damage() {
  _impl_.damage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_damage() const {
  return _impl_.damage_;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::damage() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.DamageRecord.damage)
  return _internal_damage();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_set_damage(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.damage_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::set_damage(int32_t value) {
  _internal_set_damage(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.DamageRecord.damage)
}

// optional int32 hits = 2;
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_has_hits() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::has_hits() const {
  return _internal_has_hits();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::clear_hits() {
  _impl_.hits_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_hits() const {
  return _impl_.hits_;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::hits() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.DamageRecord.hits)
  return _internal_hits();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_set_hits(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.hits_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::set_hits(int32_t value) {
  _internal_set_hits(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.DamageRecord.hits)
}

// optional uint32 damage_type = 3;
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_has_damage_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::has_damage_type() const {
  return _internal_has_damage_type();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::clear_damage_type() {
  _impl_.damage_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_damage_type() const {
  return _impl_.damage_type_;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::damage_type() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.DamageRecord.damage_type)
  return _internal_damage_type();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_set_damage_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.damage_type_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::set_damage_type(uint32_t value) {
  _internal_set_damage_type(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.DamageRecord.damage_type)
}

// optional uint32 hero_id = 4;
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::hero_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.DamageRecord.hero_id)
  return _internal_hero_id();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.hero_id_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.DamageRecord.hero_id)
}

// optional uint32 ability_id = 5;
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_has_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::clear_ability_id() {
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::ability_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.DamageRecord.ability_id)
  return _internal_ability_id();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_set_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.ability_id_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::set_ability_id(uint32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.DamageRecord.ability_id)
}

// optional uint32 attacker_class = 6;
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_has_attacker_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::has_attacker_class() const {
  return _internal_has_attacker_class();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::clear_attacker_class() {
  _impl_.attacker_class_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_attacker_class() const {
  return _impl_.attacker_class_;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::attacker_class() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.DamageRecord.attacker_class)
  return _internal_attacker_class();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_set_attacker_class(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.attacker_class_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::set_attacker_class(uint32_t value) {
  _internal_set_attacker_class(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.DamageRecord.attacker_class)
}

// optional int32 damage_absorbed = 7;
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_has_damage_absorbed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::has_damage_absorbed() const {
  return _internal_has_damage_absorbed();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::clear_damage_absorbed() {
  _impl_.damage_absorbed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_damage_absorbed() const {
  return _impl_.damage_absorbed_;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::damage_absorbed() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.DamageRecord.damage_absorbed)
  return _internal_damage_absorbed();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_set_damage_absorbed(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.damage_absorbed_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::set_damage_absorbed(int32_t value) {
  _internal_set_damage_absorbed(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.DamageRecord.damage_absorbed)
}

// optional bool is_killing_blow = 8;
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_has_is_killing_blow() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::has_is_killing_blow() const {
  return _internal_has_is_killing_blow();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::clear_is_killing_blow() {
  _impl_.is_killing_blow_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_is_killing_blow() const {
  return _impl_.is_killing_blow_;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::is_killing_blow() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.DamageRecord.is_killing_blow)
  return _internal_is_killing_blow();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_set_is_killing_blow(bool value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.is_killing_blow_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::set_is_killing_blow(bool value) {
  _internal_set_is_killing_blow(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.DamageRecord.is_killing_blow)
}

// optional uint32 victim_hero_id = 9;
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_has_victim_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_DamageRecord::has_victim_hero_id() const {
  return _internal_has_victim_hero_id();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::clear_victim_hero_id() {
  _impl_.victim_hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_victim_hero_id() const {
  return _impl_.victim_hero_id_;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_DamageRecord::victim_hero_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.DamageRecord.victim_hero_id)
  return _internal_victim_hero_id();
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::_internal_set_victim_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.victim_hero_id_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_DamageRecord::set_victim_hero_id(uint32_t value) {
  _internal_set_victim_hero_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.DamageRecord.victim_hero_id)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_RecentDamageSummary_ModifierRecord

// optional uint32 ability_id = 1;
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_has_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::clear_ability_id() {
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_ModifierRecord::ability_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.ability_id)
  return _internal_ability_id();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_set_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ability_id_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::set_ability_id(uint32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.ability_id)
}

// optional uint32 modifier_type_id = 2;
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_has_modifier_type_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::has_modifier_type_id() const {
  return _internal_has_modifier_type_id();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::clear_modifier_type_id() {
  _impl_.modifier_type_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_modifier_type_id() const {
  return _impl_.modifier_type_id_;
}
inline uint32_t CCitadelUserMsg_RecentDamageSummary_ModifierRecord::modifier_type_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.modifier_type_id)
  return _internal_modifier_type_id();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_set_modifier_type_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.modifier_type_id_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::set_modifier_type_id(uint32_t value) {
  _internal_set_modifier_type_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.modifier_type_id)
}

// optional int32 entindex_caster = 3 [default = -1];
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_has_entindex_caster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::has_entindex_caster() const {
  return _internal_has_entindex_caster();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::clear_entindex_caster() {
  _impl_.entindex_caster_ = -1;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_entindex_caster() const {
  return _impl_.entindex_caster_;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary_ModifierRecord::entindex_caster() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.entindex_caster)
  return _internal_entindex_caster();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_set_entindex_caster(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.entindex_caster_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::set_entindex_caster(int32_t value) {
  _internal_set_entindex_caster(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.entindex_caster)
}

// optional float start_time = 4;
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::has_start_time() const {
  return _internal_has_start_time();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::clear_start_time() {
  _impl_.start_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_start_time() const {
  return _impl_.start_time_;
}
inline float CCitadelUserMsg_RecentDamageSummary_ModifierRecord::start_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.start_time)
  return _internal_start_time();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_set_start_time(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.start_time_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::set_start_time(float value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.start_time)
}

// optional float end_time = 5;
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_has_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::has_end_time() const {
  return _internal_has_end_time();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::clear_end_time() {
  _impl_.end_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_end_time() const {
  return _impl_.end_time_;
}
inline float CCitadelUserMsg_RecentDamageSummary_ModifierRecord::end_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.end_time)
  return _internal_end_time();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_set_end_time(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.end_time_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::set_end_time(float value) {
  _internal_set_end_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.end_time)
}

// optional bool debuff = 6;
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_has_debuff() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::has_debuff() const {
  return _internal_has_debuff();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::clear_debuff() {
  _impl_.debuff_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_debuff() const {
  return _impl_.debuff_;
}
inline bool CCitadelUserMsg_RecentDamageSummary_ModifierRecord::debuff() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.debuff)
  return _internal_debuff();
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::_internal_set_debuff(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.debuff_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary_ModifierRecord::set_debuff(bool value) {
  _internal_set_debuff(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.ModifierRecord.debuff)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_RecentDamageSummary

// optional int32 player_slot = 1 [default = -1];
inline bool CCitadelUserMsg_RecentDamageSummary::_internal_has_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary::has_player_slot() const {
  return _internal_has_player_slot();
}
inline void CCitadelUserMsg_RecentDamageSummary::clear_player_slot() {
  _impl_.player_slot_ = -1;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary::_internal_player_slot() const {
  return _impl_.player_slot_;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary::player_slot() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.player_slot)
  return _internal_player_slot();
}
inline void CCitadelUserMsg_RecentDamageSummary::_internal_set_player_slot(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.player_slot_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary::set_player_slot(int32_t value) {
  _internal_set_player_slot(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.player_slot)
}

// repeated .CCitadelUserMsg_RecentDamageSummary.DamageRecord damage_records = 2;
inline int CCitadelUserMsg_RecentDamageSummary::_internal_damage_records_size() const {
  return _impl_.damage_records_.size();
}
inline int CCitadelUserMsg_RecentDamageSummary::damage_records_size() const {
  return _internal_damage_records_size();
}
inline void CCitadelUserMsg_RecentDamageSummary::clear_damage_records() {
  _impl_.damage_records_.Clear();
}
inline ::CCitadelUserMsg_RecentDamageSummary_DamageRecord* CCitadelUserMsg_RecentDamageSummary::mutable_damage_records(int index) {
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_RecentDamageSummary.damage_records)
  return _impl_.damage_records_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_RecentDamageSummary_DamageRecord >*
CCitadelUserMsg_RecentDamageSummary::mutable_damage_records() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_RecentDamageSummary.damage_records)
  return &_impl_.damage_records_;
}
inline const ::CCitadelUserMsg_RecentDamageSummary_DamageRecord& CCitadelUserMsg_RecentDamageSummary::_internal_damage_records(int index) const {
  return _impl_.damage_records_.Get(index);
}
inline const ::CCitadelUserMsg_RecentDamageSummary_DamageRecord& CCitadelUserMsg_RecentDamageSummary::damage_records(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.damage_records)
  return _internal_damage_records(index);
}
inline ::CCitadelUserMsg_RecentDamageSummary_DamageRecord* CCitadelUserMsg_RecentDamageSummary::_internal_add_damage_records() {
  return _impl_.damage_records_.Add();
}
inline ::CCitadelUserMsg_RecentDamageSummary_DamageRecord* CCitadelUserMsg_RecentDamageSummary::add_damage_records() {
  ::CCitadelUserMsg_RecentDamageSummary_DamageRecord* _add = _internal_add_damage_records();
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_RecentDamageSummary.damage_records)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_RecentDamageSummary_DamageRecord >&
CCitadelUserMsg_RecentDamageSummary::damage_records() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_RecentDamageSummary.damage_records)
  return _impl_.damage_records_;
}

// optional float start_time = 3;
inline bool CCitadelUserMsg_RecentDamageSummary::_internal_has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary::has_start_time() const {
  return _internal_has_start_time();
}
inline void CCitadelUserMsg_RecentDamageSummary::clear_start_time() {
  _impl_.start_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float CCitadelUserMsg_RecentDamageSummary::_internal_start_time() const {
  return _impl_.start_time_;
}
inline float CCitadelUserMsg_RecentDamageSummary::start_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.start_time)
  return _internal_start_time();
}
inline void CCitadelUserMsg_RecentDamageSummary::_internal_set_start_time(float value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.start_time_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary::set_start_time(float value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.start_time)
}

// optional float end_time = 4;
inline bool CCitadelUserMsg_RecentDamageSummary::_internal_has_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary::has_end_time() const {
  return _internal_has_end_time();
}
inline void CCitadelUserMsg_RecentDamageSummary::clear_end_time() {
  _impl_.end_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CCitadelUserMsg_RecentDamageSummary::_internal_end_time() const {
  return _impl_.end_time_;
}
inline float CCitadelUserMsg_RecentDamageSummary::end_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.end_time)
  return _internal_end_time();
}
inline void CCitadelUserMsg_RecentDamageSummary::_internal_set_end_time(float value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.end_time_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary::set_end_time(float value) {
  _internal_set_end_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.end_time)
}

// optional int32 total_damage = 5;
inline bool CCitadelUserMsg_RecentDamageSummary::_internal_has_total_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary::has_total_damage() const {
  return _internal_has_total_damage();
}
inline void CCitadelUserMsg_RecentDamageSummary::clear_total_damage() {
  _impl_.total_damage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary::_internal_total_damage() const {
  return _impl_.total_damage_;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary::total_damage() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.total_damage)
  return _internal_total_damage();
}
inline void CCitadelUserMsg_RecentDamageSummary::_internal_set_total_damage(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.total_damage_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary::set_total_damage(int32_t value) {
  _internal_set_total_damage(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.total_damage)
}

// optional int32 lost_gold = 6;
inline bool CCitadelUserMsg_RecentDamageSummary::_internal_has_lost_gold() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_RecentDamageSummary::has_lost_gold() const {
  return _internal_has_lost_gold();
}
inline void CCitadelUserMsg_RecentDamageSummary::clear_lost_gold() {
  _impl_.lost_gold_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary::_internal_lost_gold() const {
  return _impl_.lost_gold_;
}
inline int32_t CCitadelUserMsg_RecentDamageSummary::lost_gold() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.lost_gold)
  return _internal_lost_gold();
}
inline void CCitadelUserMsg_RecentDamageSummary::_internal_set_lost_gold(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.lost_gold_ = value;
}
inline void CCitadelUserMsg_RecentDamageSummary::set_lost_gold(int32_t value) {
  _internal_set_lost_gold(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_RecentDamageSummary.lost_gold)
}

// repeated .CCitadelUserMsg_RecentDamageSummary.ModifierRecord modifier_records = 7;
inline int CCitadelUserMsg_RecentDamageSummary::_internal_modifier_records_size() const {
  return _impl_.modifier_records_.size();
}
inline int CCitadelUserMsg_RecentDamageSummary::modifier_records_size() const {
  return _internal_modifier_records_size();
}
inline void CCitadelUserMsg_RecentDamageSummary::clear_modifier_records() {
  _impl_.modifier_records_.Clear();
}
inline ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord* CCitadelUserMsg_RecentDamageSummary::mutable_modifier_records(int index) {
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_RecentDamageSummary.modifier_records)
  return _impl_.modifier_records_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord >*
CCitadelUserMsg_RecentDamageSummary::mutable_modifier_records() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_RecentDamageSummary.modifier_records)
  return &_impl_.modifier_records_;
}
inline const ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord& CCitadelUserMsg_RecentDamageSummary::_internal_modifier_records(int index) const {
  return _impl_.modifier_records_.Get(index);
}
inline const ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord& CCitadelUserMsg_RecentDamageSummary::modifier_records(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_RecentDamageSummary.modifier_records)
  return _internal_modifier_records(index);
}
inline ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord* CCitadelUserMsg_RecentDamageSummary::_internal_add_modifier_records() {
  return _impl_.modifier_records_.Add();
}
inline ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord* CCitadelUserMsg_RecentDamageSummary::add_modifier_records() {
  ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord* _add = _internal_add_modifier_records();
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_RecentDamageSummary.modifier_records)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_RecentDamageSummary_ModifierRecord >&
CCitadelUserMsg_RecentDamageSummary::modifier_records() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_RecentDamageSummary.modifier_records)
  return _impl_.modifier_records_;
}

// -------------------------------------------------------------------

// CCitadelUserMsg_SpectatorTeamChanged

// optional int32 teamnumber = 1;
inline bool CCitadelUserMsg_SpectatorTeamChanged::_internal_has_teamnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_SpectatorTeamChanged::has_teamnumber() const {
  return _internal_has_teamnumber();
}
inline void CCitadelUserMsg_SpectatorTeamChanged::clear_teamnumber() {
  _impl_.teamnumber_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMsg_SpectatorTeamChanged::_internal_teamnumber() const {
  return _impl_.teamnumber_;
}
inline int32_t CCitadelUserMsg_SpectatorTeamChanged::teamnumber() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_SpectatorTeamChanged.teamnumber)
  return _internal_teamnumber();
}
inline void CCitadelUserMsg_SpectatorTeamChanged::_internal_set_teamnumber(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.teamnumber_ = value;
}
inline void CCitadelUserMsg_SpectatorTeamChanged::set_teamnumber(int32_t value) {
  _internal_set_teamnumber(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_SpectatorTeamChanged.teamnumber)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ChatWheel

// optional uint32 chat_message_id = 1;
inline bool CCitadelUserMsg_ChatWheel::_internal_has_chat_message_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatWheel::has_chat_message_id() const {
  return _internal_has_chat_message_id();
}
inline void CCitadelUserMsg_ChatWheel::clear_chat_message_id() {
  _impl_.chat_message_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CCitadelUserMsg_ChatWheel::_internal_chat_message_id() const {
  return _impl_.chat_message_id_;
}
inline uint32_t CCitadelUserMsg_ChatWheel::chat_message_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatWheel.chat_message_id)
  return _internal_chat_message_id();
}
inline void CCitadelUserMsg_ChatWheel::_internal_set_chat_message_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.chat_message_id_ = value;
}
inline void CCitadelUserMsg_ChatWheel::set_chat_message_id(uint32_t value) {
  _internal_set_chat_message_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatWheel.chat_message_id)
}

// optional int32 player_slot = 2 [default = -1];
inline bool CCitadelUserMsg_ChatWheel::_internal_has_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatWheel::has_player_slot() const {
  return _internal_has_player_slot();
}
inline void CCitadelUserMsg_ChatWheel::clear_player_slot() {
  _impl_.player_slot_ = -1;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int32_t CCitadelUserMsg_ChatWheel::_internal_player_slot() const {
  return _impl_.player_slot_;
}
inline int32_t CCitadelUserMsg_ChatWheel::player_slot() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatWheel.player_slot)
  return _internal_player_slot();
}
inline void CCitadelUserMsg_ChatWheel::_internal_set_player_slot(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.player_slot_ = value;
}
inline void CCitadelUserMsg_ChatWheel::set_player_slot(int32_t value) {
  _internal_set_player_slot(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatWheel.player_slot)
}

// optional int32 pawn_entindex = 3 [default = -1];
inline bool CCitadelUserMsg_ChatWheel::_internal_has_pawn_entindex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatWheel::has_pawn_entindex() const {
  return _internal_has_pawn_entindex();
}
inline void CCitadelUserMsg_ChatWheel::clear_pawn_entindex() {
  _impl_.pawn_entindex_ = -1;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int32_t CCitadelUserMsg_ChatWheel::_internal_pawn_entindex() const {
  return _impl_.pawn_entindex_;
}
inline int32_t CCitadelUserMsg_ChatWheel::pawn_entindex() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatWheel.pawn_entindex)
  return _internal_pawn_entindex();
}
inline void CCitadelUserMsg_ChatWheel::_internal_set_pawn_entindex(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.pawn_entindex_ = value;
}
inline void CCitadelUserMsg_ChatWheel::set_pawn_entindex(int32_t value) {
  _internal_set_pawn_entindex(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatWheel.pawn_entindex)
}

// optional uint32 account_id = 4;
inline bool CCitadelUserMsg_ChatWheel::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatWheel::has_account_id() const {
  return _internal_has_account_id();
}
inline void CCitadelUserMsg_ChatWheel::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CCitadelUserMsg_ChatWheel::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CCitadelUserMsg_ChatWheel::account_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatWheel.account_id)
  return _internal_account_id();
}
inline void CCitadelUserMsg_ChatWheel::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.account_id_ = value;
}
inline void CCitadelUserMsg_ChatWheel::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatWheel.account_id)
}

// optional uint32 hero_id = 5;
inline bool CCitadelUserMsg_ChatWheel::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatWheel::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CCitadelUserMsg_ChatWheel::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CCitadelUserMsg_ChatWheel::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CCitadelUserMsg_ChatWheel::hero_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatWheel.hero_id)
  return _internal_hero_id();
}
inline void CCitadelUserMsg_ChatWheel::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.hero_id_ = value;
}
inline void CCitadelUserMsg_ChatWheel::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatWheel.hero_id)
}

// optional string param_1 = 6;
inline bool CCitadelUserMsg_ChatWheel::_internal_has_param_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatWheel::has_param_1() const {
  return _internal_has_param_1();
}
inline void CCitadelUserMsg_ChatWheel::clear_param_1() {
  _impl_.param_1_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCitadelUserMsg_ChatWheel::param_1() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatWheel.param_1)
  return _internal_param_1();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCitadelUserMsg_ChatWheel::set_param_1(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.param_1_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatWheel.param_1)
}
inline std::string* CCitadelUserMsg_ChatWheel::mutable_param_1() {
  std::string* _s = _internal_mutable_param_1();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_ChatWheel.param_1)
  return _s;
}
inline const std::string& CCitadelUserMsg_ChatWheel::_internal_param_1() const {
  return _impl_.param_1_.Get();
}
inline void CCitadelUserMsg_ChatWheel::_internal_set_param_1(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.param_1_.Set(value, GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_ChatWheel::_internal_mutable_param_1() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.param_1_.Mutable(GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_ChatWheel::release_param_1() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_ChatWheel.param_1)
  if (!_internal_has_param_1()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.param_1_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.param_1_.IsDefault()) {
    _impl_.param_1_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CCitadelUserMsg_ChatWheel::set_allocated_param_1(std::string* param_1) {
  if (param_1 != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.param_1_.SetAllocated(param_1, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.param_1_.IsDefault()) {
    _impl_.param_1_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_ChatWheel.param_1)
}

// optional .CMsgLaneColor lane_color = 7 [default = k_ELaneColor_Invalid];
inline bool CCitadelUserMsg_ChatWheel::_internal_has_lane_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatWheel::has_lane_color() const {
  return _internal_has_lane_color();
}
inline void CCitadelUserMsg_ChatWheel::clear_lane_color() {
  _impl_.lane_color_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::CMsgLaneColor CCitadelUserMsg_ChatWheel::_internal_lane_color() const {
  return static_cast< ::CMsgLaneColor >(_impl_.lane_color_);
}
inline ::CMsgLaneColor CCitadelUserMsg_ChatWheel::lane_color() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatWheel.lane_color)
  return _internal_lane_color();
}
inline void CCitadelUserMsg_ChatWheel::_internal_set_lane_color(::CMsgLaneColor value) {
  assert(::CMsgLaneColor_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.lane_color_ = value;
}
inline void CCitadelUserMsg_ChatWheel::set_lane_color(::CMsgLaneColor value) {
  _internal_set_lane_color(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatWheel.lane_color)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ChatMsg

// optional int32 player_slot = 1 [default = -1];
inline bool CCitadelUserMsg_ChatMsg::_internal_has_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatMsg::has_player_slot() const {
  return _internal_has_player_slot();
}
inline void CCitadelUserMsg_ChatMsg::clear_player_slot() {
  _impl_.player_slot_ = -1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CCitadelUserMsg_ChatMsg::_internal_player_slot() const {
  return _impl_.player_slot_;
}
inline int32_t CCitadelUserMsg_ChatMsg::player_slot() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatMsg.player_slot)
  return _internal_player_slot();
}
inline void CCitadelUserMsg_ChatMsg::_internal_set_player_slot(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.player_slot_ = value;
}
inline void CCitadelUserMsg_ChatMsg::set_player_slot(int32_t value) {
  _internal_set_player_slot(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatMsg.player_slot)
}

// optional string text = 2;
inline bool CCitadelUserMsg_ChatMsg::_internal_has_text() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatMsg::has_text() const {
  return _internal_has_text();
}
inline void CCitadelUserMsg_ChatMsg::clear_text() {
  _impl_.text_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCitadelUserMsg_ChatMsg::text() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatMsg.text)
  return _internal_text();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCitadelUserMsg_ChatMsg::set_text(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.text_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatMsg.text)
}
inline std::string* CCitadelUserMsg_ChatMsg::mutable_text() {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_ChatMsg.text)
  return _s;
}
inline const std::string& CCitadelUserMsg_ChatMsg::_internal_text() const {
  return _impl_.text_.Get();
}
inline void CCitadelUserMsg_ChatMsg::_internal_set_text(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.text_.Set(value, GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_ChatMsg::_internal_mutable_text() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.text_.Mutable(GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_ChatMsg::release_text() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_ChatMsg.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.text_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.text_.IsDefault()) {
    _impl_.text_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CCitadelUserMsg_ChatMsg::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.text_.SetAllocated(text, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.text_.IsDefault()) {
    _impl_.text_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_ChatMsg.text)
}

// optional bool all_chat = 3;
inline bool CCitadelUserMsg_ChatMsg::_internal_has_all_chat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatMsg::has_all_chat() const {
  return _internal_has_all_chat();
}
inline void CCitadelUserMsg_ChatMsg::clear_all_chat() {
  _impl_.all_chat_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CCitadelUserMsg_ChatMsg::_internal_all_chat() const {
  return _impl_.all_chat_;
}
inline bool CCitadelUserMsg_ChatMsg::all_chat() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatMsg.all_chat)
  return _internal_all_chat();
}
inline void CCitadelUserMsg_ChatMsg::_internal_set_all_chat(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.all_chat_ = value;
}
inline void CCitadelUserMsg_ChatMsg::set_all_chat(bool value) {
  _internal_set_all_chat(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatMsg.all_chat)
}

// optional .CMsgLaneColor lane_color = 4 [default = k_ELaneColor_Invalid];
inline bool CCitadelUserMsg_ChatMsg::_internal_has_lane_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatMsg::has_lane_color() const {
  return _internal_has_lane_color();
}
inline void CCitadelUserMsg_ChatMsg::clear_lane_color() {
  _impl_.lane_color_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CMsgLaneColor CCitadelUserMsg_ChatMsg::_internal_lane_color() const {
  return static_cast< ::CMsgLaneColor >(_impl_.lane_color_);
}
inline ::CMsgLaneColor CCitadelUserMsg_ChatMsg::lane_color() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatMsg.lane_color)
  return _internal_lane_color();
}
inline void CCitadelUserMsg_ChatMsg::_internal_set_lane_color(::CMsgLaneColor value) {
  assert(::CMsgLaneColor_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.lane_color_ = value;
}
inline void CCitadelUserMsg_ChatMsg::set_lane_color(::CMsgLaneColor value) {
  _internal_set_lane_color(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatMsg.lane_color)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_GoldHistory_GoldRecord

// optional int32 currency_source = 1;
inline bool CCitadelUserMsg_GoldHistory_GoldRecord::_internal_has_currency_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_GoldHistory_GoldRecord::has_currency_source() const {
  return _internal_has_currency_source();
}
inline void CCitadelUserMsg_GoldHistory_GoldRecord::clear_currency_source() {
  _impl_.currency_source_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMsg_GoldHistory_GoldRecord::_internal_currency_source() const {
  return _impl_.currency_source_;
}
inline int32_t CCitadelUserMsg_GoldHistory_GoldRecord::currency_source() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GoldHistory.GoldRecord.currency_source)
  return _internal_currency_source();
}
inline void CCitadelUserMsg_GoldHistory_GoldRecord::_internal_set_currency_source(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.currency_source_ = value;
}
inline void CCitadelUserMsg_GoldHistory_GoldRecord::set_currency_source(int32_t value) {
  _internal_set_currency_source(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_GoldHistory.GoldRecord.currency_source)
}

// optional int32 gold = 2;
inline bool CCitadelUserMsg_GoldHistory_GoldRecord::_internal_has_gold() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_GoldHistory_GoldRecord::has_gold() const {
  return _internal_has_gold();
}
inline void CCitadelUserMsg_GoldHistory_GoldRecord::clear_gold() {
  _impl_.gold_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_GoldHistory_GoldRecord::_internal_gold() const {
  return _impl_.gold_;
}
inline int32_t CCitadelUserMsg_GoldHistory_GoldRecord::gold() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GoldHistory.GoldRecord.gold)
  return _internal_gold();
}
inline void CCitadelUserMsg_GoldHistory_GoldRecord::_internal_set_gold(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.gold_ = value;
}
inline void CCitadelUserMsg_GoldHistory_GoldRecord::set_gold(int32_t value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_GoldHistory.GoldRecord.gold)
}

// optional int32 events = 3;
inline bool CCitadelUserMsg_GoldHistory_GoldRecord::_internal_has_events() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_GoldHistory_GoldRecord::has_events() const {
  return _internal_has_events();
}
inline void CCitadelUserMsg_GoldHistory_GoldRecord::clear_events() {
  _impl_.events_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMsg_GoldHistory_GoldRecord::_internal_events() const {
  return _impl_.events_;
}
inline int32_t CCitadelUserMsg_GoldHistory_GoldRecord::events() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GoldHistory.GoldRecord.events)
  return _internal_events();
}
inline void CCitadelUserMsg_GoldHistory_GoldRecord::_internal_set_events(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.events_ = value;
}
inline void CCitadelUserMsg_GoldHistory_GoldRecord::set_events(int32_t value) {
  _internal_set_events(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_GoldHistory.GoldRecord.events)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_GoldHistory_MinuteRecord

// optional int32 match_minute = 1;
inline bool CCitadelUserMsg_GoldHistory_MinuteRecord::_internal_has_match_minute() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_GoldHistory_MinuteRecord::has_match_minute() const {
  return _internal_has_match_minute();
}
inline void CCitadelUserMsg_GoldHistory_MinuteRecord::clear_match_minute() {
  _impl_.match_minute_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMsg_GoldHistory_MinuteRecord::_internal_match_minute() const {
  return _impl_.match_minute_;
}
inline int32_t CCitadelUserMsg_GoldHistory_MinuteRecord::match_minute() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GoldHistory.MinuteRecord.match_minute)
  return _internal_match_minute();
}
inline void CCitadelUserMsg_GoldHistory_MinuteRecord::_internal_set_match_minute(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_minute_ = value;
}
inline void CCitadelUserMsg_GoldHistory_MinuteRecord::set_match_minute(int32_t value) {
  _internal_set_match_minute(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_GoldHistory.MinuteRecord.match_minute)
}

// repeated .CCitadelUserMsg_GoldHistory.GoldRecord gold_records = 2;
inline int CCitadelUserMsg_GoldHistory_MinuteRecord::_internal_gold_records_size() const {
  return _impl_.gold_records_.size();
}
inline int CCitadelUserMsg_GoldHistory_MinuteRecord::gold_records_size() const {
  return _internal_gold_records_size();
}
inline void CCitadelUserMsg_GoldHistory_MinuteRecord::clear_gold_records() {
  _impl_.gold_records_.Clear();
}
inline ::CCitadelUserMsg_GoldHistory_GoldRecord* CCitadelUserMsg_GoldHistory_MinuteRecord::mutable_gold_records(int index) {
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_GoldHistory.MinuteRecord.gold_records)
  return _impl_.gold_records_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_GoldHistory_GoldRecord >*
CCitadelUserMsg_GoldHistory_MinuteRecord::mutable_gold_records() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_GoldHistory.MinuteRecord.gold_records)
  return &_impl_.gold_records_;
}
inline const ::CCitadelUserMsg_GoldHistory_GoldRecord& CCitadelUserMsg_GoldHistory_MinuteRecord::_internal_gold_records(int index) const {
  return _impl_.gold_records_.Get(index);
}
inline const ::CCitadelUserMsg_GoldHistory_GoldRecord& CCitadelUserMsg_GoldHistory_MinuteRecord::gold_records(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GoldHistory.MinuteRecord.gold_records)
  return _internal_gold_records(index);
}
inline ::CCitadelUserMsg_GoldHistory_GoldRecord* CCitadelUserMsg_GoldHistory_MinuteRecord::_internal_add_gold_records() {
  return _impl_.gold_records_.Add();
}
inline ::CCitadelUserMsg_GoldHistory_GoldRecord* CCitadelUserMsg_GoldHistory_MinuteRecord::add_gold_records() {
  ::CCitadelUserMsg_GoldHistory_GoldRecord* _add = _internal_add_gold_records();
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_GoldHistory.MinuteRecord.gold_records)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_GoldHistory_GoldRecord >&
CCitadelUserMsg_GoldHistory_MinuteRecord::gold_records() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_GoldHistory.MinuteRecord.gold_records)
  return _impl_.gold_records_;
}

// -------------------------------------------------------------------

// CCitadelUserMsg_GoldHistory

// optional int32 entindex_player = 1 [default = -1];
inline bool CCitadelUserMsg_GoldHistory::_internal_has_entindex_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_GoldHistory::has_entindex_player() const {
  return _internal_has_entindex_player();
}
inline void CCitadelUserMsg_GoldHistory::clear_entindex_player() {
  _impl_.entindex_player_ = -1;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMsg_GoldHistory::_internal_entindex_player() const {
  return _impl_.entindex_player_;
}
inline int32_t CCitadelUserMsg_GoldHistory::entindex_player() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GoldHistory.entindex_player)
  return _internal_entindex_player();
}
inline void CCitadelUserMsg_GoldHistory::_internal_set_entindex_player(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entindex_player_ = value;
}
inline void CCitadelUserMsg_GoldHistory::set_entindex_player(int32_t value) {
  _internal_set_entindex_player(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_GoldHistory.entindex_player)
}

// repeated .CCitadelUserMsg_GoldHistory.MinuteRecord minute_records = 2;
inline int CCitadelUserMsg_GoldHistory::_internal_minute_records_size() const {
  return _impl_.minute_records_.size();
}
inline int CCitadelUserMsg_GoldHistory::minute_records_size() const {
  return _internal_minute_records_size();
}
inline void CCitadelUserMsg_GoldHistory::clear_minute_records() {
  _impl_.minute_records_.Clear();
}
inline ::CCitadelUserMsg_GoldHistory_MinuteRecord* CCitadelUserMsg_GoldHistory::mutable_minute_records(int index) {
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_GoldHistory.minute_records)
  return _impl_.minute_records_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_GoldHistory_MinuteRecord >*
CCitadelUserMsg_GoldHistory::mutable_minute_records() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_GoldHistory.minute_records)
  return &_impl_.minute_records_;
}
inline const ::CCitadelUserMsg_GoldHistory_MinuteRecord& CCitadelUserMsg_GoldHistory::_internal_minute_records(int index) const {
  return _impl_.minute_records_.Get(index);
}
inline const ::CCitadelUserMsg_GoldHistory_MinuteRecord& CCitadelUserMsg_GoldHistory::minute_records(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GoldHistory.minute_records)
  return _internal_minute_records(index);
}
inline ::CCitadelUserMsg_GoldHistory_MinuteRecord* CCitadelUserMsg_GoldHistory::_internal_add_minute_records() {
  return _impl_.minute_records_.Add();
}
inline ::CCitadelUserMsg_GoldHistory_MinuteRecord* CCitadelUserMsg_GoldHistory::add_minute_records() {
  ::CCitadelUserMsg_GoldHistory_MinuteRecord* _add = _internal_add_minute_records();
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_GoldHistory.minute_records)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_GoldHistory_MinuteRecord >&
CCitadelUserMsg_GoldHistory::minute_records() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_GoldHistory.minute_records)
  return _impl_.minute_records_;
}

// -------------------------------------------------------------------

// CCitadelUserMsg_CameraController_Maintain

// optional float duration = 1 [default = 1];
inline bool CCitadelUserMsg_CameraController_Maintain::_internal_has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Maintain::has_duration() const {
  return _internal_has_duration();
}
inline void CCitadelUserMsg_CameraController_Maintain::clear_duration() {
  _impl_.duration_ = 1;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float CCitadelUserMsg_CameraController_Maintain::_internal_duration() const {
  return _impl_.duration_;
}
inline float CCitadelUserMsg_CameraController_Maintain::duration() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Maintain.duration)
  return _internal_duration();
}
inline void CCitadelUserMsg_CameraController_Maintain::_internal_set_duration(float value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.duration_ = value;
}
inline void CCitadelUserMsg_CameraController_Maintain::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Maintain.duration)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_CameraController_Approach

// optional float speed = 1 [default = 600];
inline bool CCitadelUserMsg_CameraController_Approach::_internal_has_speed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Approach::has_speed() const {
  return _internal_has_speed();
}
inline void CCitadelUserMsg_CameraController_Approach::clear_speed() {
  _impl_.speed_ = 600;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float CCitadelUserMsg_CameraController_Approach::_internal_speed() const {
  return _impl_.speed_;
}
inline float CCitadelUserMsg_CameraController_Approach::speed() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Approach.speed)
  return _internal_speed();
}
inline void CCitadelUserMsg_CameraController_Approach::_internal_set_speed(float value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.speed_ = value;
}
inline void CCitadelUserMsg_CameraController_Approach::set_speed(float value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Approach.speed)
}

// optional float default_speed = 2 [default = 600];
inline bool CCitadelUserMsg_CameraController_Approach::_internal_has_default_speed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Approach::has_default_speed() const {
  return _internal_has_default_speed();
}
inline void CCitadelUserMsg_CameraController_Approach::clear_default_speed() {
  _impl_.default_speed_ = 600;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float CCitadelUserMsg_CameraController_Approach::_internal_default_speed() const {
  return _impl_.default_speed_;
}
inline float CCitadelUserMsg_CameraController_Approach::default_speed() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Approach.default_speed)
  return _internal_default_speed();
}
inline void CCitadelUserMsg_CameraController_Approach::_internal_set_default_speed(float value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.default_speed_ = value;
}
inline void CCitadelUserMsg_CameraController_Approach::set_default_speed(float value) {
  _internal_set_default_speed(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Approach.default_speed)
}

// optional float acceleration = 3 [default = 1000];
inline bool CCitadelUserMsg_CameraController_Approach::_internal_has_acceleration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Approach::has_acceleration() const {
  return _internal_has_acceleration();
}
inline void CCitadelUserMsg_CameraController_Approach::clear_acceleration() {
  _impl_.acceleration_ = 1000;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CCitadelUserMsg_CameraController_Approach::_internal_acceleration() const {
  return _impl_.acceleration_;
}
inline float CCitadelUserMsg_CameraController_Approach::acceleration() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Approach.acceleration)
  return _internal_acceleration();
}
inline void CCitadelUserMsg_CameraController_Approach::_internal_set_acceleration(float value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.acceleration_ = value;
}
inline void CCitadelUserMsg_CameraController_Approach::set_acceleration(float value) {
  _internal_set_acceleration(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Approach.acceleration)
}

// optional float min_duration = 4 [default = 0];
inline bool CCitadelUserMsg_CameraController_Approach::_internal_has_min_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Approach::has_min_duration() const {
  return _internal_has_min_duration();
}
inline void CCitadelUserMsg_CameraController_Approach::clear_min_duration() {
  _impl_.min_duration_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CCitadelUserMsg_CameraController_Approach::_internal_min_duration() const {
  return _impl_.min_duration_;
}
inline float CCitadelUserMsg_CameraController_Approach::min_duration() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Approach.min_duration)
  return _internal_min_duration();
}
inline void CCitadelUserMsg_CameraController_Approach::_internal_set_min_duration(float value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.min_duration_ = value;
}
inline void CCitadelUserMsg_CameraController_Approach::set_min_duration(float value) {
  _internal_set_min_duration(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Approach.min_duration)
}

// optional float approach_float = 5;
inline bool CCitadelUserMsg_CameraController_Approach::_internal_has_approach_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Approach::has_approach_float() const {
  return _internal_has_approach_float();
}
inline void CCitadelUserMsg_CameraController_Approach::clear_approach_float() {
  _impl_.approach_float_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CCitadelUserMsg_CameraController_Approach::_internal_approach_float() const {
  return _impl_.approach_float_;
}
inline float CCitadelUserMsg_CameraController_Approach::approach_float() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Approach.approach_float)
  return _internal_approach_float();
}
inline void CCitadelUserMsg_CameraController_Approach::_internal_set_approach_float(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.approach_float_ = value;
}
inline void CCitadelUserMsg_CameraController_Approach::set_approach_float(float value) {
  _internal_set_approach_float(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Approach.approach_float)
}

// optional .CMsgVector approach_vector = 6;
inline bool CCitadelUserMsg_CameraController_Approach::_internal_has_approach_vector() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.approach_vector_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_CameraController_Approach::has_approach_vector() const {
  return _internal_has_approach_vector();
}
inline const ::CMsgVector& CCitadelUserMsg_CameraController_Approach::_internal_approach_vector() const {
  const ::CMsgVector* p = _impl_.approach_vector_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCitadelUserMsg_CameraController_Approach::approach_vector() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Approach.approach_vector)
  return _internal_approach_vector();
}
inline void CCitadelUserMsg_CameraController_Approach::unsafe_arena_set_allocated_approach_vector(
    ::CMsgVector* approach_vector) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.approach_vector_);
  }
  _impl_.approach_vector_ = approach_vector;
  if (approach_vector) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_CameraController.Approach.approach_vector)
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Approach::release_approach_vector() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.approach_vector_;
  _impl_.approach_vector_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Approach::unsafe_arena_release_approach_vector() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_CameraController.Approach.approach_vector)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.approach_vector_;
  _impl_.approach_vector_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Approach::_internal_mutable_approach_vector() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.approach_vector_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.approach_vector_ = p;
  }
  return _impl_.approach_vector_;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Approach::mutable_approach_vector() {
  ::CMsgVector* _msg = _internal_mutable_approach_vector();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_CameraController.Approach.approach_vector)
  return _msg;
}
inline void CCitadelUserMsg_CameraController_Approach::set_allocated_approach_vector(::CMsgVector* approach_vector) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.approach_vector_);
  }
  if (approach_vector) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(approach_vector));
    if (message_arena != submessage_arena) {
      approach_vector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, approach_vector, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.approach_vector_ = approach_vector;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_CameraController.Approach.approach_vector)
}

// optional bool chase_default = 7;
inline bool CCitadelUserMsg_CameraController_Approach::_internal_has_chase_default() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Approach::has_chase_default() const {
  return _internal_has_chase_default();
}
inline void CCitadelUserMsg_CameraController_Approach::clear_chase_default() {
  _impl_.chase_default_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool CCitadelUserMsg_CameraController_Approach::_internal_chase_default() const {
  return _impl_.chase_default_;
}
inline bool CCitadelUserMsg_CameraController_Approach::chase_default() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Approach.chase_default)
  return _internal_chase_default();
}
inline void CCitadelUserMsg_CameraController_Approach::_internal_set_chase_default(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.chase_default_ = value;
}
inline void CCitadelUserMsg_CameraController_Approach::set_chase_default(bool value) {
  _internal_set_chase_default(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Approach.chase_default)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_CameraController_Spring

// optional float spring_strength = 1 [default = 10];
inline bool CCitadelUserMsg_CameraController_Spring::_internal_has_spring_strength() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Spring::has_spring_strength() const {
  return _internal_has_spring_strength();
}
inline void CCitadelUserMsg_CameraController_Spring::clear_spring_strength() {
  _impl_.spring_strength_ = 10;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CCitadelUserMsg_CameraController_Spring::_internal_spring_strength() const {
  return _impl_.spring_strength_;
}
inline float CCitadelUserMsg_CameraController_Spring::spring_strength() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Spring.spring_strength)
  return _internal_spring_strength();
}
inline void CCitadelUserMsg_CameraController_Spring::_internal_set_spring_strength(float value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.spring_strength_ = value;
}
inline void CCitadelUserMsg_CameraController_Spring::set_spring_strength(float value) {
  _internal_set_spring_strength(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Spring.spring_strength)
}

// optional float min_speed = 4 [default = 0];
inline bool CCitadelUserMsg_CameraController_Spring::_internal_has_min_speed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Spring::has_min_speed() const {
  return _internal_has_min_speed();
}
inline void CCitadelUserMsg_CameraController_Spring::clear_min_speed() {
  _impl_.min_speed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CCitadelUserMsg_CameraController_Spring::_internal_min_speed() const {
  return _impl_.min_speed_;
}
inline float CCitadelUserMsg_CameraController_Spring::min_speed() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Spring.min_speed)
  return _internal_min_speed();
}
inline void CCitadelUserMsg_CameraController_Spring::_internal_set_min_speed(float value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.min_speed_ = value;
}
inline void CCitadelUserMsg_CameraController_Spring::set_min_speed(float value) {
  _internal_set_min_speed(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Spring.min_speed)
}

// optional float max_duration = 5 [default = 0];
inline bool CCitadelUserMsg_CameraController_Spring::_internal_has_max_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Spring::has_max_duration() const {
  return _internal_has_max_duration();
}
inline void CCitadelUserMsg_CameraController_Spring::clear_max_duration() {
  _impl_.max_duration_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CCitadelUserMsg_CameraController_Spring::_internal_max_duration() const {
  return _impl_.max_duration_;
}
inline float CCitadelUserMsg_CameraController_Spring::max_duration() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Spring.max_duration)
  return _internal_max_duration();
}
inline void CCitadelUserMsg_CameraController_Spring::_internal_set_max_duration(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.max_duration_ = value;
}
inline void CCitadelUserMsg_CameraController_Spring::set_max_duration(float value) {
  _internal_set_max_duration(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Spring.max_duration)
}

// optional float target_float = 6;
inline bool CCitadelUserMsg_CameraController_Spring::_internal_has_target_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Spring::has_target_float() const {
  return _internal_has_target_float();
}
inline void CCitadelUserMsg_CameraController_Spring::clear_target_float() {
  _impl_.target_float_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CCitadelUserMsg_CameraController_Spring::_internal_target_float() const {
  return _impl_.target_float_;
}
inline float CCitadelUserMsg_CameraController_Spring::target_float() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Spring.target_float)
  return _internal_target_float();
}
inline void CCitadelUserMsg_CameraController_Spring::_internal_set_target_float(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.target_float_ = value;
}
inline void CCitadelUserMsg_CameraController_Spring::set_target_float(float value) {
  _internal_set_target_float(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Spring.target_float)
}

// optional .CMsgVector target_vector = 7;
inline bool CCitadelUserMsg_CameraController_Spring::_internal_has_target_vector() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_vector_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_CameraController_Spring::has_target_vector() const {
  return _internal_has_target_vector();
}
inline const ::CMsgVector& CCitadelUserMsg_CameraController_Spring::_internal_target_vector() const {
  const ::CMsgVector* p = _impl_.target_vector_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCitadelUserMsg_CameraController_Spring::target_vector() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Spring.target_vector)
  return _internal_target_vector();
}
inline void CCitadelUserMsg_CameraController_Spring::unsafe_arena_set_allocated_target_vector(
    ::CMsgVector* target_vector) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.target_vector_);
  }
  _impl_.target_vector_ = target_vector;
  if (target_vector) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_CameraController.Spring.target_vector)
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Spring::release_target_vector() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.target_vector_;
  _impl_.target_vector_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Spring::unsafe_arena_release_target_vector() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_CameraController.Spring.target_vector)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.target_vector_;
  _impl_.target_vector_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Spring::_internal_mutable_target_vector() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.target_vector_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.target_vector_ = p;
  }
  return _impl_.target_vector_;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Spring::mutable_target_vector() {
  ::CMsgVector* _msg = _internal_mutable_target_vector();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_CameraController.Spring.target_vector)
  return _msg;
}
inline void CCitadelUserMsg_CameraController_Spring::set_allocated_target_vector(::CMsgVector* target_vector) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.target_vector_);
  }
  if (target_vector) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_vector));
    if (message_arena != submessage_arena) {
      target_vector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target_vector, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.target_vector_ = target_vector;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_CameraController.Spring.target_vector)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_CameraController_Lerp

// optional float start_float = 1;
inline bool CCitadelUserMsg_CameraController_Lerp::_internal_has_start_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lerp::has_start_float() const {
  return _internal_has_start_float();
}
inline void CCitadelUserMsg_CameraController_Lerp::clear_start_float() {
  _impl_.start_float_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CCitadelUserMsg_CameraController_Lerp::_internal_start_float() const {
  return _impl_.start_float_;
}
inline float CCitadelUserMsg_CameraController_Lerp::start_float() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lerp.start_float)
  return _internal_start_float();
}
inline void CCitadelUserMsg_CameraController_Lerp::_internal_set_start_float(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.start_float_ = value;
}
inline void CCitadelUserMsg_CameraController_Lerp::set_start_float(float value) {
  _internal_set_start_float(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Lerp.start_float)
}

// optional .CMsgVector start_vector = 2;
inline bool CCitadelUserMsg_CameraController_Lerp::_internal_has_start_vector() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_vector_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lerp::has_start_vector() const {
  return _internal_has_start_vector();
}
inline const ::CMsgVector& CCitadelUserMsg_CameraController_Lerp::_internal_start_vector() const {
  const ::CMsgVector* p = _impl_.start_vector_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCitadelUserMsg_CameraController_Lerp::start_vector() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lerp.start_vector)
  return _internal_start_vector();
}
inline void CCitadelUserMsg_CameraController_Lerp::unsafe_arena_set_allocated_start_vector(
    ::CMsgVector* start_vector) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.start_vector_);
  }
  _impl_.start_vector_ = start_vector;
  if (start_vector) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_CameraController.Lerp.start_vector)
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Lerp::release_start_vector() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.start_vector_;
  _impl_.start_vector_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Lerp::unsafe_arena_release_start_vector() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_CameraController.Lerp.start_vector)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.start_vector_;
  _impl_.start_vector_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Lerp::_internal_mutable_start_vector() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.start_vector_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.start_vector_ = p;
  }
  return _impl_.start_vector_;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Lerp::mutable_start_vector() {
  ::CMsgVector* _msg = _internal_mutable_start_vector();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_CameraController.Lerp.start_vector)
  return _msg;
}
inline void CCitadelUserMsg_CameraController_Lerp::set_allocated_start_vector(::CMsgVector* start_vector) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.start_vector_);
  }
  if (start_vector) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_vector));
    if (message_arena != submessage_arena) {
      start_vector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_vector, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.start_vector_ = start_vector;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_CameraController.Lerp.start_vector)
}

// optional float end_float = 3;
inline bool CCitadelUserMsg_CameraController_Lerp::_internal_has_end_float() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lerp::has_end_float() const {
  return _internal_has_end_float();
}
inline void CCitadelUserMsg_CameraController_Lerp::clear_end_float() {
  _impl_.end_float_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CCitadelUserMsg_CameraController_Lerp::_internal_end_float() const {
  return _impl_.end_float_;
}
inline float CCitadelUserMsg_CameraController_Lerp::end_float() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lerp.end_float)
  return _internal_end_float();
}
inline void CCitadelUserMsg_CameraController_Lerp::_internal_set_end_float(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.end_float_ = value;
}
inline void CCitadelUserMsg_CameraController_Lerp::set_end_float(float value) {
  _internal_set_end_float(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Lerp.end_float)
}

// optional .CMsgVector end_vector = 4;
inline bool CCitadelUserMsg_CameraController_Lerp::_internal_has_end_vector() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_vector_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lerp::has_end_vector() const {
  return _internal_has_end_vector();
}
inline const ::CMsgVector& CCitadelUserMsg_CameraController_Lerp::_internal_end_vector() const {
  const ::CMsgVector* p = _impl_.end_vector_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCitadelUserMsg_CameraController_Lerp::end_vector() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lerp.end_vector)
  return _internal_end_vector();
}
inline void CCitadelUserMsg_CameraController_Lerp::unsafe_arena_set_allocated_end_vector(
    ::CMsgVector* end_vector) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.end_vector_);
  }
  _impl_.end_vector_ = end_vector;
  if (end_vector) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_CameraController.Lerp.end_vector)
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Lerp::release_end_vector() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.end_vector_;
  _impl_.end_vector_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Lerp::unsafe_arena_release_end_vector() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_CameraController.Lerp.end_vector)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.end_vector_;
  _impl_.end_vector_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Lerp::_internal_mutable_end_vector() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.end_vector_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.end_vector_ = p;
  }
  return _impl_.end_vector_;
}
inline ::CMsgVector* CCitadelUserMsg_CameraController_Lerp::mutable_end_vector() {
  ::CMsgVector* _msg = _internal_mutable_end_vector();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_CameraController.Lerp.end_vector)
  return _msg;
}
inline void CCitadelUserMsg_CameraController_Lerp::set_allocated_end_vector(::CMsgVector* end_vector) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.end_vector_);
  }
  if (end_vector) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_vector));
    if (message_arena != submessage_arena) {
      end_vector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, end_vector, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.end_vector_ = end_vector;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_CameraController.Lerp.end_vector)
}

// optional float bias = 5;
inline bool CCitadelUserMsg_CameraController_Lerp::_internal_has_bias() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lerp::has_bias() const {
  return _internal_has_bias();
}
inline void CCitadelUserMsg_CameraController_Lerp::clear_bias() {
  _impl_.bias_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CCitadelUserMsg_CameraController_Lerp::_internal_bias() const {
  return _impl_.bias_;
}
inline float CCitadelUserMsg_CameraController_Lerp::bias() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lerp.bias)
  return _internal_bias();
}
inline void CCitadelUserMsg_CameraController_Lerp::_internal_set_bias(float value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.bias_ = value;
}
inline void CCitadelUserMsg_CameraController_Lerp::set_bias(float value) {
  _internal_set_bias(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Lerp.bias)
}

// optional float gain = 6;
inline bool CCitadelUserMsg_CameraController_Lerp::_internal_has_gain() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lerp::has_gain() const {
  return _internal_has_gain();
}
inline void CCitadelUserMsg_CameraController_Lerp::clear_gain() {
  _impl_.gain_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float CCitadelUserMsg_CameraController_Lerp::_internal_gain() const {
  return _impl_.gain_;
}
inline float CCitadelUserMsg_CameraController_Lerp::gain() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lerp.gain)
  return _internal_gain();
}
inline void CCitadelUserMsg_CameraController_Lerp::_internal_set_gain(float value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.gain_ = value;
}
inline void CCitadelUserMsg_CameraController_Lerp::set_gain(float value) {
  _internal_set_gain(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Lerp.gain)
}

// optional float duration = 7 [default = 1];
inline bool CCitadelUserMsg_CameraController_Lerp::_internal_has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lerp::has_duration() const {
  return _internal_has_duration();
}
inline void CCitadelUserMsg_CameraController_Lerp::clear_duration() {
  _impl_.duration_ = 1;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float CCitadelUserMsg_CameraController_Lerp::_internal_duration() const {
  return _impl_.duration_;
}
inline float CCitadelUserMsg_CameraController_Lerp::duration() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lerp.duration)
  return _internal_duration();
}
inline void CCitadelUserMsg_CameraController_Lerp::_internal_set_duration(float value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.duration_ = value;
}
inline void CCitadelUserMsg_CameraController_Lerp::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Lerp.duration)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_CameraController_Lag

// optional float min_duration = 1;
inline bool CCitadelUserMsg_CameraController_Lag::_internal_has_min_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lag::has_min_duration() const {
  return _internal_has_min_duration();
}
inline void CCitadelUserMsg_CameraController_Lag::clear_min_duration() {
  _impl_.min_duration_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float CCitadelUserMsg_CameraController_Lag::_internal_min_duration() const {
  return _impl_.min_duration_;
}
inline float CCitadelUserMsg_CameraController_Lag::min_duration() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lag.min_duration)
  return _internal_min_duration();
}
inline void CCitadelUserMsg_CameraController_Lag::_internal_set_min_duration(float value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.min_duration_ = value;
}
inline void CCitadelUserMsg_CameraController_Lag::set_min_duration(float value) {
  _internal_set_min_duration(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Lag.min_duration)
}

// optional float lag_time = 2;
inline bool CCitadelUserMsg_CameraController_Lag::_internal_has_lag_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lag::has_lag_time() const {
  return _internal_has_lag_time();
}
inline void CCitadelUserMsg_CameraController_Lag::clear_lag_time() {
  _impl_.lag_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CCitadelUserMsg_CameraController_Lag::_internal_lag_time() const {
  return _impl_.lag_time_;
}
inline float CCitadelUserMsg_CameraController_Lag::lag_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lag.lag_time)
  return _internal_lag_time();
}
inline void CCitadelUserMsg_CameraController_Lag::_internal_set_lag_time(float value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.lag_time_ = value;
}
inline void CCitadelUserMsg_CameraController_Lag::set_lag_time(float value) {
  _internal_set_lag_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Lag.lag_time)
}

// optional float max_speed = 3;
inline bool CCitadelUserMsg_CameraController_Lag::_internal_has_max_speed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lag::has_max_speed() const {
  return _internal_has_max_speed();
}
inline void CCitadelUserMsg_CameraController_Lag::clear_max_speed() {
  _impl_.max_speed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CCitadelUserMsg_CameraController_Lag::_internal_max_speed() const {
  return _impl_.max_speed_;
}
inline float CCitadelUserMsg_CameraController_Lag::max_speed() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lag.max_speed)
  return _internal_max_speed();
}
inline void CCitadelUserMsg_CameraController_Lag::_internal_set_max_speed(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.max_speed_ = value;
}
inline void CCitadelUserMsg_CameraController_Lag::set_max_speed(float value) {
  _internal_set_max_speed(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Lag.max_speed)
}

// optional float spring_strength = 4;
inline bool CCitadelUserMsg_CameraController_Lag::_internal_has_spring_strength() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController_Lag::has_spring_strength() const {
  return _internal_has_spring_strength();
}
inline void CCitadelUserMsg_CameraController_Lag::clear_spring_strength() {
  _impl_.spring_strength_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CCitadelUserMsg_CameraController_Lag::_internal_spring_strength() const {
  return _impl_.spring_strength_;
}
inline float CCitadelUserMsg_CameraController_Lag::spring_strength() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.Lag.spring_strength)
  return _internal_spring_strength();
}
inline void CCitadelUserMsg_CameraController_Lag::_internal_set_spring_strength(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.spring_strength_ = value;
}
inline void CCitadelUserMsg_CameraController_Lag::set_spring_strength(float value) {
  _internal_set_spring_strength(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.Lag.spring_strength)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_CameraController

// required .CameraAction action = 1 [default = k_EAction_AddOp];
inline bool CCitadelUserMsg_CameraController::_internal_has_action() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_action() const {
  return _internal_has_action();
}
inline void CCitadelUserMsg_CameraController::clear_action() {
  _impl_.action_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::CameraAction CCitadelUserMsg_CameraController::_internal_action() const {
  return static_cast< ::CameraAction >(_impl_.action_);
}
inline ::CameraAction CCitadelUserMsg_CameraController::action() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.action)
  return _internal_action();
}
inline void CCitadelUserMsg_CameraController::_internal_set_action(::CameraAction value) {
  assert(::CameraAction_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.action_ = value;
}
inline void CCitadelUserMsg_CameraController::set_action(::CameraAction value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.action)
}

// optional .CameraOperation operation = 2 [default = k_ECameraOp_Maintain];
inline bool CCitadelUserMsg_CameraController::_internal_has_operation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_operation() const {
  return _internal_has_operation();
}
inline void CCitadelUserMsg_CameraController::clear_operation() {
  _impl_.operation_ = 2;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::CameraOperation CCitadelUserMsg_CameraController::_internal_operation() const {
  return static_cast< ::CameraOperation >(_impl_.operation_);
}
inline ::CameraOperation CCitadelUserMsg_CameraController::operation() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.operation)
  return _internal_operation();
}
inline void CCitadelUserMsg_CameraController::_internal_set_operation(::CameraOperation value) {
  assert(::CameraOperation_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.operation_ = value;
}
inline void CCitadelUserMsg_CameraController::set_operation(::CameraOperation value) {
  _internal_set_operation(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.operation)
}

// optional .CameraParam param = 3 [default = k_EParam_ClearAllOps];
inline bool CCitadelUserMsg_CameraController::_internal_has_param() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_param() const {
  return _internal_has_param();
}
inline void CCitadelUserMsg_CameraController::clear_param() {
  _impl_.param_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::CameraParam CCitadelUserMsg_CameraController::_internal_param() const {
  return static_cast< ::CameraParam >(_impl_.param_);
}
inline ::CameraParam CCitadelUserMsg_CameraController::param() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.param)
  return _internal_param();
}
inline void CCitadelUserMsg_CameraController::_internal_set_param(::CameraParam value) {
  assert(::CameraParam_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.param_ = value;
}
inline void CCitadelUserMsg_CameraController::set_param(::CameraParam value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.param)
}

// optional float delay = 4;
inline bool CCitadelUserMsg_CameraController::_internal_has_delay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_delay() const {
  return _internal_has_delay();
}
inline void CCitadelUserMsg_CameraController::clear_delay() {
  _impl_.delay_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline float CCitadelUserMsg_CameraController::_internal_delay() const {
  return _impl_.delay_;
}
inline float CCitadelUserMsg_CameraController::delay() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.delay)
  return _internal_delay();
}
inline void CCitadelUserMsg_CameraController::_internal_set_delay(float value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.delay_ = value;
}
inline void CCitadelUserMsg_CameraController::set_delay(float value) {
  _internal_set_delay(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.delay)
}

// optional bool relative_values = 11;
inline bool CCitadelUserMsg_CameraController::_internal_has_relative_values() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_relative_values() const {
  return _internal_has_relative_values();
}
inline void CCitadelUserMsg_CameraController::clear_relative_values() {
  _impl_.relative_values_ = false;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline bool CCitadelUserMsg_CameraController::_internal_relative_values() const {
  return _impl_.relative_values_;
}
inline bool CCitadelUserMsg_CameraController::relative_values() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.relative_values)
  return _internal_relative_values();
}
inline void CCitadelUserMsg_CameraController::_internal_set_relative_values(bool value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.relative_values_ = value;
}
inline void CCitadelUserMsg_CameraController::set_relative_values(bool value) {
  _internal_set_relative_values(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.relative_values)
}

// optional uint32 context_symbol_id = 5;
inline bool CCitadelUserMsg_CameraController::_internal_has_context_symbol_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_context_symbol_id() const {
  return _internal_has_context_symbol_id();
}
inline void CCitadelUserMsg_CameraController::clear_context_symbol_id() {
  _impl_.context_symbol_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint32_t CCitadelUserMsg_CameraController::_internal_context_symbol_id() const {
  return _impl_.context_symbol_id_;
}
inline uint32_t CCitadelUserMsg_CameraController::context_symbol_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.context_symbol_id)
  return _internal_context_symbol_id();
}
inline void CCitadelUserMsg_CameraController::_internal_set_context_symbol_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.context_symbol_id_ = value;
}
inline void CCitadelUserMsg_CameraController::set_context_symbol_id(uint32_t value) {
  _internal_set_context_symbol_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_CameraController.context_symbol_id)
}

// optional .CCitadelUserMsg_CameraController.Maintain maintain = 6;
inline bool CCitadelUserMsg_CameraController::_internal_has_maintain() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.maintain_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_maintain() const {
  return _internal_has_maintain();
}
inline void CCitadelUserMsg_CameraController::clear_maintain() {
  if (_impl_.maintain_ != nullptr) _impl_.maintain_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CCitadelUserMsg_CameraController_Maintain& CCitadelUserMsg_CameraController::_internal_maintain() const {
  const ::CCitadelUserMsg_CameraController_Maintain* p = _impl_.maintain_;
  return p != nullptr ? *p : reinterpret_cast<const ::CCitadelUserMsg_CameraController_Maintain&>(
      ::_CCitadelUserMsg_CameraController_Maintain_default_instance_);
}
inline const ::CCitadelUserMsg_CameraController_Maintain& CCitadelUserMsg_CameraController::maintain() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.maintain)
  return _internal_maintain();
}
inline void CCitadelUserMsg_CameraController::unsafe_arena_set_allocated_maintain(
    ::CCitadelUserMsg_CameraController_Maintain* maintain) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.maintain_);
  }
  _impl_.maintain_ = maintain;
  if (maintain) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_CameraController.maintain)
}
inline ::CCitadelUserMsg_CameraController_Maintain* CCitadelUserMsg_CameraController::release_maintain() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CCitadelUserMsg_CameraController_Maintain* temp = _impl_.maintain_;
  _impl_.maintain_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CCitadelUserMsg_CameraController_Maintain* CCitadelUserMsg_CameraController::unsafe_arena_release_maintain() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_CameraController.maintain)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CCitadelUserMsg_CameraController_Maintain* temp = _impl_.maintain_;
  _impl_.maintain_ = nullptr;
  return temp;
}
inline ::CCitadelUserMsg_CameraController_Maintain* CCitadelUserMsg_CameraController::_internal_mutable_maintain() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.maintain_ == nullptr) {
    auto* p = CreateMaybeMessage<::CCitadelUserMsg_CameraController_Maintain>(GetArenaForAllocation());
    _impl_.maintain_ = p;
  }
  return _impl_.maintain_;
}
inline ::CCitadelUserMsg_CameraController_Maintain* CCitadelUserMsg_CameraController::mutable_maintain() {
  ::CCitadelUserMsg_CameraController_Maintain* _msg = _internal_mutable_maintain();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_CameraController.maintain)
  return _msg;
}
inline void CCitadelUserMsg_CameraController::set_allocated_maintain(::CCitadelUserMsg_CameraController_Maintain* maintain) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.maintain_;
  }
  if (maintain) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(maintain);
    if (message_arena != submessage_arena) {
      maintain = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maintain, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.maintain_ = maintain;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_CameraController.maintain)
}

// optional .CCitadelUserMsg_CameraController.Approach approach = 7;
inline bool CCitadelUserMsg_CameraController::_internal_has_approach() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.approach_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_approach() const {
  return _internal_has_approach();
}
inline void CCitadelUserMsg_CameraController::clear_approach() {
  if (_impl_.approach_ != nullptr) _impl_.approach_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CCitadelUserMsg_CameraController_Approach& CCitadelUserMsg_CameraController::_internal_approach() const {
  const ::CCitadelUserMsg_CameraController_Approach* p = _impl_.approach_;
  return p != nullptr ? *p : reinterpret_cast<const ::CCitadelUserMsg_CameraController_Approach&>(
      ::_CCitadelUserMsg_CameraController_Approach_default_instance_);
}
inline const ::CCitadelUserMsg_CameraController_Approach& CCitadelUserMsg_CameraController::approach() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.approach)
  return _internal_approach();
}
inline void CCitadelUserMsg_CameraController::unsafe_arena_set_allocated_approach(
    ::CCitadelUserMsg_CameraController_Approach* approach) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.approach_);
  }
  _impl_.approach_ = approach;
  if (approach) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_CameraController.approach)
}
inline ::CCitadelUserMsg_CameraController_Approach* CCitadelUserMsg_CameraController::release_approach() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CCitadelUserMsg_CameraController_Approach* temp = _impl_.approach_;
  _impl_.approach_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CCitadelUserMsg_CameraController_Approach* CCitadelUserMsg_CameraController::unsafe_arena_release_approach() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_CameraController.approach)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CCitadelUserMsg_CameraController_Approach* temp = _impl_.approach_;
  _impl_.approach_ = nullptr;
  return temp;
}
inline ::CCitadelUserMsg_CameraController_Approach* CCitadelUserMsg_CameraController::_internal_mutable_approach() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.approach_ == nullptr) {
    auto* p = CreateMaybeMessage<::CCitadelUserMsg_CameraController_Approach>(GetArenaForAllocation());
    _impl_.approach_ = p;
  }
  return _impl_.approach_;
}
inline ::CCitadelUserMsg_CameraController_Approach* CCitadelUserMsg_CameraController::mutable_approach() {
  ::CCitadelUserMsg_CameraController_Approach* _msg = _internal_mutable_approach();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_CameraController.approach)
  return _msg;
}
inline void CCitadelUserMsg_CameraController::set_allocated_approach(::CCitadelUserMsg_CameraController_Approach* approach) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.approach_;
  }
  if (approach) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(approach);
    if (message_arena != submessage_arena) {
      approach = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, approach, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.approach_ = approach;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_CameraController.approach)
}

// optional .CCitadelUserMsg_CameraController.Spring spring = 8;
inline bool CCitadelUserMsg_CameraController::_internal_has_spring() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spring_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_spring() const {
  return _internal_has_spring();
}
inline void CCitadelUserMsg_CameraController::clear_spring() {
  if (_impl_.spring_ != nullptr) _impl_.spring_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CCitadelUserMsg_CameraController_Spring& CCitadelUserMsg_CameraController::_internal_spring() const {
  const ::CCitadelUserMsg_CameraController_Spring* p = _impl_.spring_;
  return p != nullptr ? *p : reinterpret_cast<const ::CCitadelUserMsg_CameraController_Spring&>(
      ::_CCitadelUserMsg_CameraController_Spring_default_instance_);
}
inline const ::CCitadelUserMsg_CameraController_Spring& CCitadelUserMsg_CameraController::spring() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.spring)
  return _internal_spring();
}
inline void CCitadelUserMsg_CameraController::unsafe_arena_set_allocated_spring(
    ::CCitadelUserMsg_CameraController_Spring* spring) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.spring_);
  }
  _impl_.spring_ = spring;
  if (spring) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_CameraController.spring)
}
inline ::CCitadelUserMsg_CameraController_Spring* CCitadelUserMsg_CameraController::release_spring() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CCitadelUserMsg_CameraController_Spring* temp = _impl_.spring_;
  _impl_.spring_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CCitadelUserMsg_CameraController_Spring* CCitadelUserMsg_CameraController::unsafe_arena_release_spring() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_CameraController.spring)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CCitadelUserMsg_CameraController_Spring* temp = _impl_.spring_;
  _impl_.spring_ = nullptr;
  return temp;
}
inline ::CCitadelUserMsg_CameraController_Spring* CCitadelUserMsg_CameraController::_internal_mutable_spring() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.spring_ == nullptr) {
    auto* p = CreateMaybeMessage<::CCitadelUserMsg_CameraController_Spring>(GetArenaForAllocation());
    _impl_.spring_ = p;
  }
  return _impl_.spring_;
}
inline ::CCitadelUserMsg_CameraController_Spring* CCitadelUserMsg_CameraController::mutable_spring() {
  ::CCitadelUserMsg_CameraController_Spring* _msg = _internal_mutable_spring();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_CameraController.spring)
  return _msg;
}
inline void CCitadelUserMsg_CameraController::set_allocated_spring(::CCitadelUserMsg_CameraController_Spring* spring) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.spring_;
  }
  if (spring) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(spring);
    if (message_arena != submessage_arena) {
      spring = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spring, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.spring_ = spring;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_CameraController.spring)
}

// optional .CCitadelUserMsg_CameraController.Lerp lerp = 9;
inline bool CCitadelUserMsg_CameraController::_internal_has_lerp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lerp_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_lerp() const {
  return _internal_has_lerp();
}
inline void CCitadelUserMsg_CameraController::clear_lerp() {
  if (_impl_.lerp_ != nullptr) _impl_.lerp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::CCitadelUserMsg_CameraController_Lerp& CCitadelUserMsg_CameraController::_internal_lerp() const {
  const ::CCitadelUserMsg_CameraController_Lerp* p = _impl_.lerp_;
  return p != nullptr ? *p : reinterpret_cast<const ::CCitadelUserMsg_CameraController_Lerp&>(
      ::_CCitadelUserMsg_CameraController_Lerp_default_instance_);
}
inline const ::CCitadelUserMsg_CameraController_Lerp& CCitadelUserMsg_CameraController::lerp() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.lerp)
  return _internal_lerp();
}
inline void CCitadelUserMsg_CameraController::unsafe_arena_set_allocated_lerp(
    ::CCitadelUserMsg_CameraController_Lerp* lerp) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.lerp_);
  }
  _impl_.lerp_ = lerp;
  if (lerp) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_CameraController.lerp)
}
inline ::CCitadelUserMsg_CameraController_Lerp* CCitadelUserMsg_CameraController::release_lerp() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CCitadelUserMsg_CameraController_Lerp* temp = _impl_.lerp_;
  _impl_.lerp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CCitadelUserMsg_CameraController_Lerp* CCitadelUserMsg_CameraController::unsafe_arena_release_lerp() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_CameraController.lerp)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CCitadelUserMsg_CameraController_Lerp* temp = _impl_.lerp_;
  _impl_.lerp_ = nullptr;
  return temp;
}
inline ::CCitadelUserMsg_CameraController_Lerp* CCitadelUserMsg_CameraController::_internal_mutable_lerp() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.lerp_ == nullptr) {
    auto* p = CreateMaybeMessage<::CCitadelUserMsg_CameraController_Lerp>(GetArenaForAllocation());
    _impl_.lerp_ = p;
  }
  return _impl_.lerp_;
}
inline ::CCitadelUserMsg_CameraController_Lerp* CCitadelUserMsg_CameraController::mutable_lerp() {
  ::CCitadelUserMsg_CameraController_Lerp* _msg = _internal_mutable_lerp();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_CameraController.lerp)
  return _msg;
}
inline void CCitadelUserMsg_CameraController::set_allocated_lerp(::CCitadelUserMsg_CameraController_Lerp* lerp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.lerp_;
  }
  if (lerp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(lerp);
    if (message_arena != submessage_arena) {
      lerp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lerp, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.lerp_ = lerp;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_CameraController.lerp)
}

// optional .CCitadelUserMsg_CameraController.Lag lag = 10;
inline bool CCitadelUserMsg_CameraController::_internal_has_lag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lag_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_CameraController::has_lag() const {
  return _internal_has_lag();
}
inline void CCitadelUserMsg_CameraController::clear_lag() {
  if (_impl_.lag_ != nullptr) _impl_.lag_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::CCitadelUserMsg_CameraController_Lag& CCitadelUserMsg_CameraController::_internal_lag() const {
  const ::CCitadelUserMsg_CameraController_Lag* p = _impl_.lag_;
  return p != nullptr ? *p : reinterpret_cast<const ::CCitadelUserMsg_CameraController_Lag&>(
      ::_CCitadelUserMsg_CameraController_Lag_default_instance_);
}
inline const ::CCitadelUserMsg_CameraController_Lag& CCitadelUserMsg_CameraController::lag() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_CameraController.lag)
  return _internal_lag();
}
inline void CCitadelUserMsg_CameraController::unsafe_arena_set_allocated_lag(
    ::CCitadelUserMsg_CameraController_Lag* lag) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.lag_);
  }
  _impl_.lag_ = lag;
  if (lag) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_CameraController.lag)
}
inline ::CCitadelUserMsg_CameraController_Lag* CCitadelUserMsg_CameraController::release_lag() {
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CCitadelUserMsg_CameraController_Lag* temp = _impl_.lag_;
  _impl_.lag_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CCitadelUserMsg_CameraController_Lag* CCitadelUserMsg_CameraController::unsafe_arena_release_lag() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_CameraController.lag)
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CCitadelUserMsg_CameraController_Lag* temp = _impl_.lag_;
  _impl_.lag_ = nullptr;
  return temp;
}
inline ::CCitadelUserMsg_CameraController_Lag* CCitadelUserMsg_CameraController::_internal_mutable_lag() {
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.lag_ == nullptr) {
    auto* p = CreateMaybeMessage<::CCitadelUserMsg_CameraController_Lag>(GetArenaForAllocation());
    _impl_.lag_ = p;
  }
  return _impl_.lag_;
}
inline ::CCitadelUserMsg_CameraController_Lag* CCitadelUserMsg_CameraController::mutable_lag() {
  ::CCitadelUserMsg_CameraController_Lag* _msg = _internal_mutable_lag();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_CameraController.lag)
  return _msg;
}
inline void CCitadelUserMsg_CameraController::set_allocated_lag(::CCitadelUserMsg_CameraController_Lag* lag) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.lag_;
  }
  if (lag) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(lag);
    if (message_arena != submessage_arena) {
      lag = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lag, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.lag_ = lag;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_CameraController.lag)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_PostMatchDetails

// optional bytes match_details = 1;
inline bool CCitadelUserMsg_PostMatchDetails::_internal_has_match_details() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PostMatchDetails::has_match_details() const {
  return _internal_has_match_details();
}
inline void CCitadelUserMsg_PostMatchDetails::clear_match_details() {
  _impl_.match_details_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCitadelUserMsg_PostMatchDetails::match_details() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PostMatchDetails.match_details)
  return _internal_match_details();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCitadelUserMsg_PostMatchDetails::set_match_details(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.match_details_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PostMatchDetails.match_details)
}
inline std::string* CCitadelUserMsg_PostMatchDetails::mutable_match_details() {
  std::string* _s = _internal_mutable_match_details();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_PostMatchDetails.match_details)
  return _s;
}
inline const std::string& CCitadelUserMsg_PostMatchDetails::_internal_match_details() const {
  return _impl_.match_details_.Get();
}
inline void CCitadelUserMsg_PostMatchDetails::_internal_set_match_details(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_details_.Set(value, GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_PostMatchDetails::_internal_mutable_match_details() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.match_details_.Mutable(GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_PostMatchDetails::release_match_details() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_PostMatchDetails.match_details)
  if (!_internal_has_match_details()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.match_details_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.match_details_.IsDefault()) {
    _impl_.match_details_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CCitadelUserMsg_PostMatchDetails::set_allocated_match_details(std::string* match_details) {
  if (match_details != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.match_details_.SetAllocated(match_details, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.match_details_.IsDefault()) {
    _impl_.match_details_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_PostMatchDetails.match_details)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ChatEvent

// optional .ECitadelChatMessage type = 1 [default = CITADEL_CHAT_MESSAGE_UNPAUSE_COUNTDOWN];
inline bool CCitadelUserMsg_ChatEvent::_internal_has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ChatEvent::has_type() const {
  return _internal_has_type();
}
inline void CCitadelUserMsg_ChatEvent::clear_type() {
  _impl_.type_ = 1;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::ECitadelChatMessage CCitadelUserMsg_ChatEvent::_internal_type() const {
  return static_cast< ::ECitadelChatMessage >(_impl_.type_);
}
inline ::ECitadelChatMessage CCitadelUserMsg_ChatEvent::type() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatEvent.type)
  return _internal_type();
}
inline void CCitadelUserMsg_ChatEvent::_internal_set_type(::ECitadelChatMessage value) {
  assert(::ECitadelChatMessage_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_ = value;
}
inline void CCitadelUserMsg_ChatEvent::set_type(::ECitadelChatMessage value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatEvent.type)
}

// repeated uint32 values = 2;
inline int CCitadelUserMsg_ChatEvent::_internal_values_size() const {
  return _impl_.values_.size();
}
inline int CCitadelUserMsg_ChatEvent::values_size() const {
  return _internal_values_size();
}
inline void CCitadelUserMsg_ChatEvent::clear_values() {
  _impl_.values_.Clear();
}
inline uint32_t CCitadelUserMsg_ChatEvent::_internal_values(int index) const {
  return _impl_.values_.Get(index);
}
inline uint32_t CCitadelUserMsg_ChatEvent::values(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatEvent.values)
  return _internal_values(index);
}
inline void CCitadelUserMsg_ChatEvent::set_values(int index, uint32_t value) {
  _impl_.values_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatEvent.values)
}
inline void CCitadelUserMsg_ChatEvent::_internal_add_values(uint32_t value) {
  _impl_.values_.Add(value);
}
inline void CCitadelUserMsg_ChatEvent::add_values(uint32_t value) {
  _internal_add_values(value);
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_ChatEvent.values)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CCitadelUserMsg_ChatEvent::_internal_values() const {
  return _impl_.values_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CCitadelUserMsg_ChatEvent::values() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_ChatEvent.values)
  return _internal_values();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CCitadelUserMsg_ChatEvent::_internal_mutable_values() {
  return &_impl_.values_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CCitadelUserMsg_ChatEvent::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_ChatEvent.values)
  return _internal_mutable_values();
}

// repeated int32 player_slots = 3;
inline int CCitadelUserMsg_ChatEvent::_internal_player_slots_size() const {
  return _impl_.player_slots_.size();
}
inline int CCitadelUserMsg_ChatEvent::player_slots_size() const {
  return _internal_player_slots_size();
}
inline void CCitadelUserMsg_ChatEvent::clear_player_slots() {
  _impl_.player_slots_.Clear();
}
inline int32_t CCitadelUserMsg_ChatEvent::_internal_player_slots(int index) const {
  return _impl_.player_slots_.Get(index);
}
inline int32_t CCitadelUserMsg_ChatEvent::player_slots(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ChatEvent.player_slots)
  return _internal_player_slots(index);
}
inline void CCitadelUserMsg_ChatEvent::set_player_slots(int index, int32_t value) {
  _impl_.player_slots_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ChatEvent.player_slots)
}
inline void CCitadelUserMsg_ChatEvent::_internal_add_player_slots(int32_t value) {
  _impl_.player_slots_.Add(value);
}
inline void CCitadelUserMsg_ChatEvent::add_player_slots(int32_t value) {
  _internal_add_player_slots(value);
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_ChatEvent.player_slots)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ChatEvent::_internal_player_slots() const {
  return _impl_.player_slots_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ChatEvent::player_slots() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_ChatEvent.player_slots)
  return _internal_player_slots();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ChatEvent::_internal_mutable_player_slots() {
  return &_impl_.player_slots_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ChatEvent::mutable_player_slots() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_ChatEvent.player_slots)
  return _internal_mutable_player_slots();
}

// -------------------------------------------------------------------

// CCitadelUserMsg_HeroKilled

// optional int32 entindex_victim = 1 [default = -1];
inline bool CCitadelUserMsg_HeroKilled::_internal_has_entindex_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_HeroKilled::has_entindex_victim() const {
  return _internal_has_entindex_victim();
}
inline void CCitadelUserMsg_HeroKilled::clear_entindex_victim() {
  _impl_.entindex_victim_ = -1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_HeroKilled::_internal_entindex_victim() const {
  return _impl_.entindex_victim_;
}
inline int32_t CCitadelUserMsg_HeroKilled::entindex_victim() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_HeroKilled.entindex_victim)
  return _internal_entindex_victim();
}
inline void CCitadelUserMsg_HeroKilled::_internal_set_entindex_victim(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entindex_victim_ = value;
}
inline void CCitadelUserMsg_HeroKilled::set_entindex_victim(int32_t value) {
  _internal_set_entindex_victim(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_HeroKilled.entindex_victim)
}

// optional int32 entindex_inflictor = 2 [default = -1];
inline bool CCitadelUserMsg_HeroKilled::_internal_has_entindex_inflictor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_HeroKilled::has_entindex_inflictor() const {
  return _internal_has_entindex_inflictor();
}
inline void CCitadelUserMsg_HeroKilled::clear_entindex_inflictor() {
  _impl_.entindex_inflictor_ = -1;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMsg_HeroKilled::_internal_entindex_inflictor() const {
  return _impl_.entindex_inflictor_;
}
inline int32_t CCitadelUserMsg_HeroKilled::entindex_inflictor() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_HeroKilled.entindex_inflictor)
  return _internal_entindex_inflictor();
}
inline void CCitadelUserMsg_HeroKilled::_internal_set_entindex_inflictor(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.entindex_inflictor_ = value;
}
inline void CCitadelUserMsg_HeroKilled::set_entindex_inflictor(int32_t value) {
  _internal_set_entindex_inflictor(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_HeroKilled.entindex_inflictor)
}

// optional int32 entindex_attacker = 3 [default = -1];
inline bool CCitadelUserMsg_HeroKilled::_internal_has_entindex_attacker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_HeroKilled::has_entindex_attacker() const {
  return _internal_has_entindex_attacker();
}
inline void CCitadelUserMsg_HeroKilled::clear_entindex_attacker() {
  _impl_.entindex_attacker_ = -1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CCitadelUserMsg_HeroKilled::_internal_entindex_attacker() const {
  return _impl_.entindex_attacker_;
}
inline int32_t CCitadelUserMsg_HeroKilled::entindex_attacker() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_HeroKilled.entindex_attacker)
  return _internal_entindex_attacker();
}
inline void CCitadelUserMsg_HeroKilled::_internal_set_entindex_attacker(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.entindex_attacker_ = value;
}
inline void CCitadelUserMsg_HeroKilled::set_entindex_attacker(int32_t value) {
  _internal_set_entindex_attacker(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_HeroKilled.entindex_attacker)
}

// repeated int32 entindex_assisters = 4;
inline int CCitadelUserMsg_HeroKilled::_internal_entindex_assisters_size() const {
  return _impl_.entindex_assisters_.size();
}
inline int CCitadelUserMsg_HeroKilled::entindex_assisters_size() const {
  return _internal_entindex_assisters_size();
}
inline void CCitadelUserMsg_HeroKilled::clear_entindex_assisters() {
  _impl_.entindex_assisters_.Clear();
}
inline int32_t CCitadelUserMsg_HeroKilled::_internal_entindex_assisters(int index) const {
  return _impl_.entindex_assisters_.Get(index);
}
inline int32_t CCitadelUserMsg_HeroKilled::entindex_assisters(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_HeroKilled.entindex_assisters)
  return _internal_entindex_assisters(index);
}
inline void CCitadelUserMsg_HeroKilled::set_entindex_assisters(int index, int32_t value) {
  _impl_.entindex_assisters_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_HeroKilled.entindex_assisters)
}
inline void CCitadelUserMsg_HeroKilled::_internal_add_entindex_assisters(int32_t value) {
  _impl_.entindex_assisters_.Add(value);
}
inline void CCitadelUserMsg_HeroKilled::add_entindex_assisters(int32_t value) {
  _internal_add_entindex_assisters(value);
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_HeroKilled.entindex_assisters)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_HeroKilled::_internal_entindex_assisters() const {
  return _impl_.entindex_assisters_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_HeroKilled::entindex_assisters() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_HeroKilled.entindex_assisters)
  return _internal_entindex_assisters();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_HeroKilled::_internal_mutable_entindex_assisters() {
  return &_impl_.entindex_assisters_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_HeroKilled::mutable_entindex_assisters() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_HeroKilled.entindex_assisters)
  return _internal_mutable_entindex_assisters();
}

// optional int32 entindex_scorer = 5 [default = -1];
inline bool CCitadelUserMsg_HeroKilled::_internal_has_entindex_scorer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_HeroKilled::has_entindex_scorer() const {
  return _internal_has_entindex_scorer();
}
inline void CCitadelUserMsg_HeroKilled::clear_entindex_scorer() {
  _impl_.entindex_scorer_ = -1;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline int32_t CCitadelUserMsg_HeroKilled::_internal_entindex_scorer() const {
  return _impl_.entindex_scorer_;
}
inline int32_t CCitadelUserMsg_HeroKilled::entindex_scorer() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_HeroKilled.entindex_scorer)
  return _internal_entindex_scorer();
}
inline void CCitadelUserMsg_HeroKilled::_internal_set_entindex_scorer(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.entindex_scorer_ = value;
}
inline void CCitadelUserMsg_HeroKilled::set_entindex_scorer(int32_t value) {
  _internal_set_entindex_scorer(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_HeroKilled.entindex_scorer)
}

// optional int32 respawn_reason = 6;
inline bool CCitadelUserMsg_HeroKilled::_internal_has_respawn_reason() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_HeroKilled::has_respawn_reason() const {
  return _internal_has_respawn_reason();
}
inline void CCitadelUserMsg_HeroKilled::clear_respawn_reason() {
  _impl_.respawn_reason_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMsg_HeroKilled::_internal_respawn_reason() const {
  return _impl_.respawn_reason_;
}
inline int32_t CCitadelUserMsg_HeroKilled::respawn_reason() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_HeroKilled.respawn_reason)
  return _internal_respawn_reason();
}
inline void CCitadelUserMsg_HeroKilled::_internal_set_respawn_reason(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.respawn_reason_ = value;
}
inline void CCitadelUserMsg_HeroKilled::set_respawn_reason(int32_t value) {
  _internal_set_respawn_reason(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_HeroKilled.respawn_reason)
}

// -------------------------------------------------------------------

// CCitadelEntityMsg_BreakablePropSpawnDebris

// optional .CEntityMsg entity_msg = 1;
inline bool CCitadelEntityMsg_BreakablePropSpawnDebris::_internal_has_entity_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_msg_ != nullptr);
  return value;
}
inline bool CCitadelEntityMsg_BreakablePropSpawnDebris::has_entity_msg() const {
  return _internal_has_entity_msg();
}
inline const ::CEntityMsg& CCitadelEntityMsg_BreakablePropSpawnDebris::_internal_entity_msg() const {
  const ::CEntityMsg* p = _impl_.entity_msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::CEntityMsg&>(
      ::_CEntityMsg_default_instance_);
}
inline const ::CEntityMsg& CCitadelEntityMsg_BreakablePropSpawnDebris::entity_msg() const {
  // @@protoc_insertion_point(field_get:CCitadelEntityMsg_BreakablePropSpawnDebris.entity_msg)
  return _internal_entity_msg();
}
inline void CCitadelEntityMsg_BreakablePropSpawnDebris::unsafe_arena_set_allocated_entity_msg(
    ::CEntityMsg* entity_msg) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_msg_);
  }
  _impl_.entity_msg_ = entity_msg;
  if (entity_msg) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelEntityMsg_BreakablePropSpawnDebris.entity_msg)
}
inline ::CEntityMsg* CCitadelEntityMsg_BreakablePropSpawnDebris::release_entity_msg() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CEntityMsg* temp = _impl_.entity_msg_;
  _impl_.entity_msg_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CEntityMsg* CCitadelEntityMsg_BreakablePropSpawnDebris::unsafe_arena_release_entity_msg() {
  // @@protoc_insertion_point(field_release:CCitadelEntityMsg_BreakablePropSpawnDebris.entity_msg)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CEntityMsg* temp = _impl_.entity_msg_;
  _impl_.entity_msg_ = nullptr;
  return temp;
}
inline ::CEntityMsg* CCitadelEntityMsg_BreakablePropSpawnDebris::_internal_mutable_entity_msg() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.entity_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::CEntityMsg>(GetArenaForAllocation());
    _impl_.entity_msg_ = p;
  }
  return _impl_.entity_msg_;
}
inline ::CEntityMsg* CCitadelEntityMsg_BreakablePropSpawnDebris::mutable_entity_msg() {
  ::CEntityMsg* _msg = _internal_mutable_entity_msg();
  // @@protoc_insertion_point(field_mutable:CCitadelEntityMsg_BreakablePropSpawnDebris.entity_msg)
  return _msg;
}
inline void CCitadelEntityMsg_BreakablePropSpawnDebris::set_allocated_entity_msg(::CEntityMsg* entity_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.entity_msg_);
  }
  if (entity_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_msg));
    if (message_arena != submessage_arena) {
      entity_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_msg, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_msg_ = entity_msg;
  // @@protoc_insertion_point(field_set_allocated:CCitadelEntityMsg_BreakablePropSpawnDebris.entity_msg)
}

// optional .CMsgVector damage_pos = 2;
inline bool CCitadelEntityMsg_BreakablePropSpawnDebris::_internal_has_damage_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.damage_pos_ != nullptr);
  return value;
}
inline bool CCitadelEntityMsg_BreakablePropSpawnDebris::has_damage_pos() const {
  return _internal_has_damage_pos();
}
inline const ::CMsgVector& CCitadelEntityMsg_BreakablePropSpawnDebris::_internal_damage_pos() const {
  const ::CMsgVector* p = _impl_.damage_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCitadelEntityMsg_BreakablePropSpawnDebris::damage_pos() const {
  // @@protoc_insertion_point(field_get:CCitadelEntityMsg_BreakablePropSpawnDebris.damage_pos)
  return _internal_damage_pos();
}
inline void CCitadelEntityMsg_BreakablePropSpawnDebris::unsafe_arena_set_allocated_damage_pos(
    ::CMsgVector* damage_pos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.damage_pos_);
  }
  _impl_.damage_pos_ = damage_pos;
  if (damage_pos) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelEntityMsg_BreakablePropSpawnDebris.damage_pos)
}
inline ::CMsgVector* CCitadelEntityMsg_BreakablePropSpawnDebris::release_damage_pos() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.damage_pos_;
  _impl_.damage_pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CCitadelEntityMsg_BreakablePropSpawnDebris::unsafe_arena_release_damage_pos() {
  // @@protoc_insertion_point(field_release:CCitadelEntityMsg_BreakablePropSpawnDebris.damage_pos)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.damage_pos_;
  _impl_.damage_pos_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCitadelEntityMsg_BreakablePropSpawnDebris::_internal_mutable_damage_pos() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.damage_pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.damage_pos_ = p;
  }
  return _impl_.damage_pos_;
}
inline ::CMsgVector* CCitadelEntityMsg_BreakablePropSpawnDebris::mutable_damage_pos() {
  ::CMsgVector* _msg = _internal_mutable_damage_pos();
  // @@protoc_insertion_point(field_mutable:CCitadelEntityMsg_BreakablePropSpawnDebris.damage_pos)
  return _msg;
}
inline void CCitadelEntityMsg_BreakablePropSpawnDebris::set_allocated_damage_pos(::CMsgVector* damage_pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.damage_pos_);
  }
  if (damage_pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(damage_pos));
    if (message_arena != submessage_arena) {
      damage_pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, damage_pos, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.damage_pos_ = damage_pos;
  // @@protoc_insertion_point(field_set_allocated:CCitadelEntityMsg_BreakablePropSpawnDebris.damage_pos)
}

// optional float damage = 3;
inline bool CCitadelEntityMsg_BreakablePropSpawnDebris::_internal_has_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelEntityMsg_BreakablePropSpawnDebris::has_damage() const {
  return _internal_has_damage();
}
inline void CCitadelEntityMsg_BreakablePropSpawnDebris::clear_damage() {
  _impl_.damage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CCitadelEntityMsg_BreakablePropSpawnDebris::_internal_damage() const {
  return _impl_.damage_;
}
inline float CCitadelEntityMsg_BreakablePropSpawnDebris::damage() const {
  // @@protoc_insertion_point(field_get:CCitadelEntityMsg_BreakablePropSpawnDebris.damage)
  return _internal_damage();
}
inline void CCitadelEntityMsg_BreakablePropSpawnDebris::_internal_set_damage(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.damage_ = value;
}
inline void CCitadelEntityMsg_BreakablePropSpawnDebris::set_damage(float value) {
  _internal_set_damage(value);
  // @@protoc_insertion_point(field_set:CCitadelEntityMsg_BreakablePropSpawnDebris.damage)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ReturnIdol

// optional int32 location_index = 1;
inline bool CCitadelUserMsg_ReturnIdol::_internal_has_location_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ReturnIdol::has_location_index() const {
  return _internal_has_location_index();
}
inline void CCitadelUserMsg_ReturnIdol::clear_location_index() {
  _impl_.location_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_ReturnIdol::_internal_location_index() const {
  return _impl_.location_index_;
}
inline int32_t CCitadelUserMsg_ReturnIdol::location_index() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ReturnIdol.location_index)
  return _internal_location_index();
}
inline void CCitadelUserMsg_ReturnIdol::_internal_set_location_index(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.location_index_ = value;
}
inline void CCitadelUserMsg_ReturnIdol::set_location_index(int32_t value) {
  _internal_set_location_index(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ReturnIdol.location_index)
}

// optional .CMsgVector return_location = 2;
inline bool CCitadelUserMsg_ReturnIdol::_internal_has_return_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.return_location_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_ReturnIdol::has_return_location() const {
  return _internal_has_return_location();
}
inline const ::CMsgVector& CCitadelUserMsg_ReturnIdol::_internal_return_location() const {
  const ::CMsgVector* p = _impl_.return_location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCitadelUserMsg_ReturnIdol::return_location() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ReturnIdol.return_location)
  return _internal_return_location();
}
inline void CCitadelUserMsg_ReturnIdol::unsafe_arena_set_allocated_return_location(
    ::CMsgVector* return_location) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.return_location_);
  }
  _impl_.return_location_ = return_location;
  if (return_location) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_ReturnIdol.return_location)
}
inline ::CMsgVector* CCitadelUserMsg_ReturnIdol::release_return_location() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.return_location_;
  _impl_.return_location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_ReturnIdol::unsafe_arena_release_return_location() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_ReturnIdol.return_location)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.return_location_;
  _impl_.return_location_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCitadelUserMsg_ReturnIdol::_internal_mutable_return_location() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.return_location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.return_location_ = p;
  }
  return _impl_.return_location_;
}
inline ::CMsgVector* CCitadelUserMsg_ReturnIdol::mutable_return_location() {
  ::CMsgVector* _msg = _internal_mutable_return_location();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_ReturnIdol.return_location)
  return _msg;
}
inline void CCitadelUserMsg_ReturnIdol::set_allocated_return_location(::CMsgVector* return_location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.return_location_);
  }
  if (return_location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return_location));
    if (message_arena != submessage_arena) {
      return_location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, return_location, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.return_location_ = return_location;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_ReturnIdol.return_location)
}

// optional bool location_enabled = 3;
inline bool CCitadelUserMsg_ReturnIdol::_internal_has_location_enabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_ReturnIdol::has_location_enabled() const {
  return _internal_has_location_enabled();
}
inline void CCitadelUserMsg_ReturnIdol::clear_location_enabled() {
  _impl_.location_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CCitadelUserMsg_ReturnIdol::_internal_location_enabled() const {
  return _impl_.location_enabled_;
}
inline bool CCitadelUserMsg_ReturnIdol::location_enabled() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ReturnIdol.location_enabled)
  return _internal_location_enabled();
}
inline void CCitadelUserMsg_ReturnIdol::_internal_set_location_enabled(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.location_enabled_ = value;
}
inline void CCitadelUserMsg_ReturnIdol::set_location_enabled(bool value) {
  _internal_set_location_enabled(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ReturnIdol.location_enabled)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_SetClientCameraAngles

// optional int32 player_slot = 1 [default = -1];
inline bool CCitadelUserMsg_SetClientCameraAngles::_internal_has_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_SetClientCameraAngles::has_player_slot() const {
  return _internal_has_player_slot();
}
inline void CCitadelUserMsg_SetClientCameraAngles::clear_player_slot() {
  _impl_.player_slot_ = -1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_SetClientCameraAngles::_internal_player_slot() const {
  return _impl_.player_slot_;
}
inline int32_t CCitadelUserMsg_SetClientCameraAngles::player_slot() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_SetClientCameraAngles.player_slot)
  return _internal_player_slot();
}
inline void CCitadelUserMsg_SetClientCameraAngles::_internal_set_player_slot(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.player_slot_ = value;
}
inline void CCitadelUserMsg_SetClientCameraAngles::set_player_slot(int32_t value) {
  _internal_set_player_slot(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_SetClientCameraAngles.player_slot)
}

// optional .CMsgQAngle camera_angles = 2;
inline bool CCitadelUserMsg_SetClientCameraAngles::_internal_has_camera_angles() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_angles_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_SetClientCameraAngles::has_camera_angles() const {
  return _internal_has_camera_angles();
}
inline const ::CMsgQAngle& CCitadelUserMsg_SetClientCameraAngles::_internal_camera_angles() const {
  const ::CMsgQAngle* p = _impl_.camera_angles_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgQAngle&>(
      ::_CMsgQAngle_default_instance_);
}
inline const ::CMsgQAngle& CCitadelUserMsg_SetClientCameraAngles::camera_angles() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_SetClientCameraAngles.camera_angles)
  return _internal_camera_angles();
}
inline void CCitadelUserMsg_SetClientCameraAngles::unsafe_arena_set_allocated_camera_angles(
    ::CMsgQAngle* camera_angles) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.camera_angles_);
  }
  _impl_.camera_angles_ = camera_angles;
  if (camera_angles) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_SetClientCameraAngles.camera_angles)
}
inline ::CMsgQAngle* CCitadelUserMsg_SetClientCameraAngles::release_camera_angles() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgQAngle* temp = _impl_.camera_angles_;
  _impl_.camera_angles_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgQAngle* CCitadelUserMsg_SetClientCameraAngles::unsafe_arena_release_camera_angles() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_SetClientCameraAngles.camera_angles)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgQAngle* temp = _impl_.camera_angles_;
  _impl_.camera_angles_ = nullptr;
  return temp;
}
inline ::CMsgQAngle* CCitadelUserMsg_SetClientCameraAngles::_internal_mutable_camera_angles() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.camera_angles_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgQAngle>(GetArenaForAllocation());
    _impl_.camera_angles_ = p;
  }
  return _impl_.camera_angles_;
}
inline ::CMsgQAngle* CCitadelUserMsg_SetClientCameraAngles::mutable_camera_angles() {
  ::CMsgQAngle* _msg = _internal_mutable_camera_angles();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_SetClientCameraAngles.camera_angles)
  return _msg;
}
inline void CCitadelUserMsg_SetClientCameraAngles::set_allocated_camera_angles(::CMsgQAngle* camera_angles) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.camera_angles_);
  }
  if (camera_angles) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(camera_angles));
    if (message_arena != submessage_arena) {
      camera_angles = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, camera_angles, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.camera_angles_ = camera_angles;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_SetClientCameraAngles.camera_angles)
}

// -------------------------------------------------------------------

// CCitadelUserMessage_BulletHit

// optional int32 shotid = 1;
inline bool CCitadelUserMessage_BulletHit::_internal_has_shotid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMessage_BulletHit::has_shotid() const {
  return _internal_has_shotid();
}
inline void CCitadelUserMessage_BulletHit::clear_shotid() {
  _impl_.shotid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMessage_BulletHit::_internal_shotid() const {
  return _impl_.shotid_;
}
inline int32_t CCitadelUserMessage_BulletHit::shotid() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_BulletHit.shotid)
  return _internal_shotid();
}
inline void CCitadelUserMessage_BulletHit::_internal_set_shotid(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.shotid_ = value;
}
inline void CCitadelUserMessage_BulletHit::set_shotid(int32_t value) {
  _internal_set_shotid(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_BulletHit.shotid)
}

// optional int32 pellet = 2;
inline bool CCitadelUserMessage_BulletHit::_internal_has_pellet() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMessage_BulletHit::has_pellet() const {
  return _internal_has_pellet();
}
inline void CCitadelUserMessage_BulletHit::clear_pellet() {
  _impl_.pellet_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMessage_BulletHit::_internal_pellet() const {
  return _impl_.pellet_;
}
inline int32_t CCitadelUserMessage_BulletHit::pellet() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_BulletHit.pellet)
  return _internal_pellet();
}
inline void CCitadelUserMessage_BulletHit::_internal_set_pellet(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pellet_ = value;
}
inline void CCitadelUserMessage_BulletHit::set_pellet(int32_t value) {
  _internal_set_pellet(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_BulletHit.pellet)
}

// optional int32 hit_entindex = 3 [default = -1];
inline bool CCitadelUserMessage_BulletHit::_internal_has_hit_entindex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMessage_BulletHit::has_hit_entindex() const {
  return _internal_has_hit_entindex();
}
inline void CCitadelUserMessage_BulletHit::clear_hit_entindex() {
  _impl_.hit_entindex_ = -1;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMessage_BulletHit::_internal_hit_entindex() const {
  return _impl_.hit_entindex_;
}
inline int32_t CCitadelUserMessage_BulletHit::hit_entindex() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_BulletHit.hit_entindex)
  return _internal_hit_entindex();
}
inline void CCitadelUserMessage_BulletHit::_internal_set_hit_entindex(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.hit_entindex_ = value;
}
inline void CCitadelUserMessage_BulletHit::set_hit_entindex(int32_t value) {
  _internal_set_hit_entindex(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_BulletHit.hit_entindex)
}

// -------------------------------------------------------------------

// CCitadelUserMessage_ObjectiveMask

// optional uint64 objective_mask_team0 = 2;
inline bool CCitadelUserMessage_ObjectiveMask::_internal_has_objective_mask_team0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMessage_ObjectiveMask::has_objective_mask_team0() const {
  return _internal_has_objective_mask_team0();
}
inline void CCitadelUserMessage_ObjectiveMask::clear_objective_mask_team0() {
  _impl_.objective_mask_team0_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CCitadelUserMessage_ObjectiveMask::_internal_objective_mask_team0() const {
  return _impl_.objective_mask_team0_;
}
inline uint64_t CCitadelUserMessage_ObjectiveMask::objective_mask_team0() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_ObjectiveMask.objective_mask_team0)
  return _internal_objective_mask_team0();
}
inline void CCitadelUserMessage_ObjectiveMask::_internal_set_objective_mask_team0(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.objective_mask_team0_ = value;
}
inline void CCitadelUserMessage_ObjectiveMask::set_objective_mask_team0(uint64_t value) {
  _internal_set_objective_mask_team0(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_ObjectiveMask.objective_mask_team0)
}

// optional uint64 objective_mask_team1 = 3;
inline bool CCitadelUserMessage_ObjectiveMask::_internal_has_objective_mask_team1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMessage_ObjectiveMask::has_objective_mask_team1() const {
  return _internal_has_objective_mask_team1();
}
inline void CCitadelUserMessage_ObjectiveMask::clear_objective_mask_team1() {
  _impl_.objective_mask_team1_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CCitadelUserMessage_ObjectiveMask::_internal_objective_mask_team1() const {
  return _impl_.objective_mask_team1_;
}
inline uint64_t CCitadelUserMessage_ObjectiveMask::objective_mask_team1() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_ObjectiveMask.objective_mask_team1)
  return _internal_objective_mask_team1();
}
inline void CCitadelUserMessage_ObjectiveMask::_internal_set_objective_mask_team1(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.objective_mask_team1_ = value;
}
inline void CCitadelUserMessage_ObjectiveMask::set_objective_mask_team1(uint64_t value) {
  _internal_set_objective_mask_team1(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_ObjectiveMask.objective_mask_team1)
}

// -------------------------------------------------------------------

// CCitadelUserMessage_ModifierApplied

// optional int32 entindex_caster = 1 [default = -1];
inline bool CCitadelUserMessage_ModifierApplied::_internal_has_entindex_caster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMessage_ModifierApplied::has_entindex_caster() const {
  return _internal_has_entindex_caster();
}
inline void CCitadelUserMessage_ModifierApplied::clear_entindex_caster() {
  _impl_.entindex_caster_ = -1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMessage_ModifierApplied::_internal_entindex_caster() const {
  return _impl_.entindex_caster_;
}
inline int32_t CCitadelUserMessage_ModifierApplied::entindex_caster() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_ModifierApplied.entindex_caster)
  return _internal_entindex_caster();
}
inline void CCitadelUserMessage_ModifierApplied::_internal_set_entindex_caster(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entindex_caster_ = value;
}
inline void CCitadelUserMessage_ModifierApplied::set_entindex_caster(int32_t value) {
  _internal_set_entindex_caster(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_ModifierApplied.entindex_caster)
}

// optional int32 entindex_parent = 2 [default = -1];
inline bool CCitadelUserMessage_ModifierApplied::_internal_has_entindex_parent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMessage_ModifierApplied::has_entindex_parent() const {
  return _internal_has_entindex_parent();
}
inline void CCitadelUserMessage_ModifierApplied::clear_entindex_parent() {
  _impl_.entindex_parent_ = -1;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMessage_ModifierApplied::_internal_entindex_parent() const {
  return _impl_.entindex_parent_;
}
inline int32_t CCitadelUserMessage_ModifierApplied::entindex_parent() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_ModifierApplied.entindex_parent)
  return _internal_entindex_parent();
}
inline void CCitadelUserMessage_ModifierApplied::_internal_set_entindex_parent(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.entindex_parent_ = value;
}
inline void CCitadelUserMessage_ModifierApplied::set_entindex_parent(int32_t value) {
  _internal_set_entindex_parent(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_ModifierApplied.entindex_parent)
}

// optional int32 serial_number = 3;
inline bool CCitadelUserMessage_ModifierApplied::_internal_has_serial_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMessage_ModifierApplied::has_serial_number() const {
  return _internal_has_serial_number();
}
inline void CCitadelUserMessage_ModifierApplied::clear_serial_number() {
  _impl_.serial_number_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMessage_ModifierApplied::_internal_serial_number() const {
  return _impl_.serial_number_;
}
inline int32_t CCitadelUserMessage_ModifierApplied::serial_number() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_ModifierApplied.serial_number)
  return _internal_serial_number();
}
inline void CCitadelUserMessage_ModifierApplied::_internal_set_serial_number(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.serial_number_ = value;
}
inline void CCitadelUserMessage_ModifierApplied::set_serial_number(int32_t value) {
  _internal_set_serial_number(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_ModifierApplied.serial_number)
}

// -------------------------------------------------------------------

// CCitadelUserMessage_AuraModifierApplied

// optional int32 entindex_caster = 1 [default = -1];
inline bool CCitadelUserMessage_AuraModifierApplied::_internal_has_entindex_caster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMessage_AuraModifierApplied::has_entindex_caster() const {
  return _internal_has_entindex_caster();
}
inline void CCitadelUserMessage_AuraModifierApplied::clear_entindex_caster() {
  _impl_.entindex_caster_ = -1;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline int32_t CCitadelUserMessage_AuraModifierApplied::_internal_entindex_caster() const {
  return _impl_.entindex_caster_;
}
inline int32_t CCitadelUserMessage_AuraModifierApplied::entindex_caster() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_AuraModifierApplied.entindex_caster)
  return _internal_entindex_caster();
}
inline void CCitadelUserMessage_AuraModifierApplied::_internal_set_entindex_caster(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.entindex_caster_ = value;
}
inline void CCitadelUserMessage_AuraModifierApplied::set_entindex_caster(int32_t value) {
  _internal_set_entindex_caster(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_AuraModifierApplied.entindex_caster)
}

// optional int32 entindex_target = 2 [default = -1];
inline bool CCitadelUserMessage_AuraModifierApplied::_internal_has_entindex_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMessage_AuraModifierApplied::has_entindex_target() const {
  return _internal_has_entindex_target();
}
inline void CCitadelUserMessage_AuraModifierApplied::clear_entindex_target() {
  _impl_.entindex_target_ = -1;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int32_t CCitadelUserMessage_AuraModifierApplied::_internal_entindex_target() const {
  return _impl_.entindex_target_;
}
inline int32_t CCitadelUserMessage_AuraModifierApplied::entindex_target() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_AuraModifierApplied.entindex_target)
  return _internal_entindex_target();
}
inline void CCitadelUserMessage_AuraModifierApplied::_internal_set_entindex_target(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.entindex_target_ = value;
}
inline void CCitadelUserMessage_AuraModifierApplied::set_entindex_target(int32_t value) {
  _internal_set_entindex_target(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_AuraModifierApplied.entindex_target)
}

// optional uint32 modifier_type_id = 3;
inline bool CCitadelUserMessage_AuraModifierApplied::_internal_has_modifier_type_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMessage_AuraModifierApplied::has_modifier_type_id() const {
  return _internal_has_modifier_type_id();
}
inline void CCitadelUserMessage_AuraModifierApplied::clear_modifier_type_id() {
  _impl_.modifier_type_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CCitadelUserMessage_AuraModifierApplied::_internal_modifier_type_id() const {
  return _impl_.modifier_type_id_;
}
inline uint32_t CCitadelUserMessage_AuraModifierApplied::modifier_type_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_AuraModifierApplied.modifier_type_id)
  return _internal_modifier_type_id();
}
inline void CCitadelUserMessage_AuraModifierApplied::_internal_set_modifier_type_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.modifier_type_id_ = value;
}
inline void CCitadelUserMessage_AuraModifierApplied::set_modifier_type_id(uint32_t value) {
  _internal_set_modifier_type_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_AuraModifierApplied.modifier_type_id)
}

// optional int32 modifier_serial_number = 4;
inline bool CCitadelUserMessage_AuraModifierApplied::_internal_has_modifier_serial_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMessage_AuraModifierApplied::has_modifier_serial_number() const {
  return _internal_has_modifier_serial_number();
}
inline void CCitadelUserMessage_AuraModifierApplied::clear_modifier_serial_number() {
  _impl_.modifier_serial_number_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMessage_AuraModifierApplied::_internal_modifier_serial_number() const {
  return _impl_.modifier_serial_number_;
}
inline int32_t CCitadelUserMessage_AuraModifierApplied::modifier_serial_number() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_AuraModifierApplied.modifier_serial_number)
  return _internal_modifier_serial_number();
}
inline void CCitadelUserMessage_AuraModifierApplied::_internal_set_modifier_serial_number(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.modifier_serial_number_ = value;
}
inline void CCitadelUserMessage_AuraModifierApplied::set_modifier_serial_number(int32_t value) {
  _internal_set_modifier_serial_number(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_AuraModifierApplied.modifier_serial_number)
}

// optional float aura_start_time = 5;
inline bool CCitadelUserMessage_AuraModifierApplied::_internal_has_aura_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMessage_AuraModifierApplied::has_aura_start_time() const {
  return _internal_has_aura_start_time();
}
inline void CCitadelUserMessage_AuraModifierApplied::clear_aura_start_time() {
  _impl_.aura_start_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CCitadelUserMessage_AuraModifierApplied::_internal_aura_start_time() const {
  return _impl_.aura_start_time_;
}
inline float CCitadelUserMessage_AuraModifierApplied::aura_start_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_AuraModifierApplied.aura_start_time)
  return _internal_aura_start_time();
}
inline void CCitadelUserMessage_AuraModifierApplied::_internal_set_aura_start_time(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.aura_start_time_ = value;
}
inline void CCitadelUserMessage_AuraModifierApplied::set_aura_start_time(float value) {
  _internal_set_aura_start_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_AuraModifierApplied.aura_start_time)
}

// optional float aura_end_time = 6;
inline bool CCitadelUserMessage_AuraModifierApplied::_internal_has_aura_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMessage_AuraModifierApplied::has_aura_end_time() const {
  return _internal_has_aura_end_time();
}
inline void CCitadelUserMessage_AuraModifierApplied::clear_aura_end_time() {
  _impl_.aura_end_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CCitadelUserMessage_AuraModifierApplied::_internal_aura_end_time() const {
  return _impl_.aura_end_time_;
}
inline float CCitadelUserMessage_AuraModifierApplied::aura_end_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_AuraModifierApplied.aura_end_time)
  return _internal_aura_end_time();
}
inline void CCitadelUserMessage_AuraModifierApplied::_internal_set_aura_end_time(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.aura_end_time_ = value;
}
inline void CCitadelUserMessage_AuraModifierApplied::set_aura_end_time(float value) {
  _internal_set_aura_end_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_AuraModifierApplied.aura_end_time)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ObstructedShotFired

// -------------------------------------------------------------------

// CCitadelUserMsg_PostProcessingAnim

// optional int32 entindex_owner = 1 [default = -1];
inline bool CCitadelUserMsg_PostProcessingAnim::_internal_has_entindex_owner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PostProcessingAnim::has_entindex_owner() const {
  return _internal_has_entindex_owner();
}
inline void CCitadelUserMsg_PostProcessingAnim::clear_entindex_owner() {
  _impl_.entindex_owner_ = -1;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline int32_t CCitadelUserMsg_PostProcessingAnim::_internal_entindex_owner() const {
  return _impl_.entindex_owner_;
}
inline int32_t CCitadelUserMsg_PostProcessingAnim::entindex_owner() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PostProcessingAnim.entindex_owner)
  return _internal_entindex_owner();
}
inline void CCitadelUserMsg_PostProcessingAnim::_internal_set_entindex_owner(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.entindex_owner_ = value;
}
inline void CCitadelUserMsg_PostProcessingAnim::set_entindex_owner(int32_t value) {
  _internal_set_entindex_owner(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PostProcessingAnim.entindex_owner)
}

// optional bool clear_all_states = 2;
inline bool CCitadelUserMsg_PostProcessingAnim::_internal_has_clear_all_states() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PostProcessingAnim::has_clear_all_states() const {
  return _internal_has_clear_all_states();
}
inline void CCitadelUserMsg_PostProcessingAnim::clear_clear_all_states() {
  _impl_.clear_all_states_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CCitadelUserMsg_PostProcessingAnim::_internal_clear_all_states() const {
  return _impl_.clear_all_states_;
}
inline bool CCitadelUserMsg_PostProcessingAnim::clear_all_states() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PostProcessingAnim.clear_all_states)
  return _internal_clear_all_states();
}
inline void CCitadelUserMsg_PostProcessingAnim::_internal_set_clear_all_states(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.clear_all_states_ = value;
}
inline void CCitadelUserMsg_PostProcessingAnim::set_clear_all_states(bool value) {
  _internal_set_clear_all_states(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PostProcessingAnim.clear_all_states)
}

// optional .PostProcessingGameStates state = 3 [default = PostProcState_Killed];
inline bool CCitadelUserMsg_PostProcessingAnim::_internal_has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PostProcessingAnim::has_state() const {
  return _internal_has_state();
}
inline void CCitadelUserMsg_PostProcessingAnim::clear_state() {
  _impl_.state_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::PostProcessingGameStates CCitadelUserMsg_PostProcessingAnim::_internal_state() const {
  return static_cast< ::PostProcessingGameStates >(_impl_.state_);
}
inline ::PostProcessingGameStates CCitadelUserMsg_PostProcessingAnim::state() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PostProcessingAnim.state)
  return _internal_state();
}
inline void CCitadelUserMsg_PostProcessingAnim::_internal_set_state(::PostProcessingGameStates value) {
  assert(::PostProcessingGameStates_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.state_ = value;
}
inline void CCitadelUserMsg_PostProcessingAnim::set_state(::PostProcessingGameStates value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PostProcessingAnim.state)
}

// optional float start_time = 4;
inline bool CCitadelUserMsg_PostProcessingAnim::_internal_has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PostProcessingAnim::has_start_time() const {
  return _internal_has_start_time();
}
inline void CCitadelUserMsg_PostProcessingAnim::clear_start_time() {
  _impl_.start_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CCitadelUserMsg_PostProcessingAnim::_internal_start_time() const {
  return _impl_.start_time_;
}
inline float CCitadelUserMsg_PostProcessingAnim::start_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PostProcessingAnim.start_time)
  return _internal_start_time();
}
inline void CCitadelUserMsg_PostProcessingAnim::_internal_set_start_time(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.start_time_ = value;
}
inline void CCitadelUserMsg_PostProcessingAnim::set_start_time(float value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PostProcessingAnim.start_time)
}

// optional float fade_in_time = 5;
inline bool CCitadelUserMsg_PostProcessingAnim::_internal_has_fade_in_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PostProcessingAnim::has_fade_in_time() const {
  return _internal_has_fade_in_time();
}
inline void CCitadelUserMsg_PostProcessingAnim::clear_fade_in_time() {
  _impl_.fade_in_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CCitadelUserMsg_PostProcessingAnim::_internal_fade_in_time() const {
  return _impl_.fade_in_time_;
}
inline float CCitadelUserMsg_PostProcessingAnim::fade_in_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PostProcessingAnim.fade_in_time)
  return _internal_fade_in_time();
}
inline void CCitadelUserMsg_PostProcessingAnim::_internal_set_fade_in_time(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.fade_in_time_ = value;
}
inline void CCitadelUserMsg_PostProcessingAnim::set_fade_in_time(float value) {
  _internal_set_fade_in_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PostProcessingAnim.fade_in_time)
}

// optional float hold_time = 6;
inline bool CCitadelUserMsg_PostProcessingAnim::_internal_has_hold_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PostProcessingAnim::has_hold_time() const {
  return _internal_has_hold_time();
}
inline void CCitadelUserMsg_PostProcessingAnim::clear_hold_time() {
  _impl_.hold_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CCitadelUserMsg_PostProcessingAnim::_internal_hold_time() const {
  return _impl_.hold_time_;
}
inline float CCitadelUserMsg_PostProcessingAnim::hold_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PostProcessingAnim.hold_time)
  return _internal_hold_time();
}
inline void CCitadelUserMsg_PostProcessingAnim::_internal_set_hold_time(float value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.hold_time_ = value;
}
inline void CCitadelUserMsg_PostProcessingAnim::set_hold_time(float value) {
  _internal_set_hold_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PostProcessingAnim.hold_time)
}

// optional float fade_out_time = 7;
inline bool CCitadelUserMsg_PostProcessingAnim::_internal_has_fade_out_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PostProcessingAnim::has_fade_out_time() const {
  return _internal_has_fade_out_time();
}
inline void CCitadelUserMsg_PostProcessingAnim::clear_fade_out_time() {
  _impl_.fade_out_time_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float CCitadelUserMsg_PostProcessingAnim::_internal_fade_out_time() const {
  return _impl_.fade_out_time_;
}
inline float CCitadelUserMsg_PostProcessingAnim::fade_out_time() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PostProcessingAnim.fade_out_time)
  return _internal_fade_out_time();
}
inline void CCitadelUserMsg_PostProcessingAnim::_internal_set_fade_out_time(float value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.fade_out_time_ = value;
}
inline void CCitadelUserMsg_PostProcessingAnim::set_fade_out_time(float value) {
  _internal_set_fade_out_time(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PostProcessingAnim.fade_out_time)
}

// optional float scale = 8;
inline bool CCitadelUserMsg_PostProcessingAnim::_internal_has_scale() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PostProcessingAnim::has_scale() const {
  return _internal_has_scale();
}
inline void CCitadelUserMsg_PostProcessingAnim::clear_scale() {
  _impl_.scale_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float CCitadelUserMsg_PostProcessingAnim::_internal_scale() const {
  return _impl_.scale_;
}
inline float CCitadelUserMsg_PostProcessingAnim::scale() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PostProcessingAnim.scale)
  return _internal_scale();
}
inline void CCitadelUserMsg_PostProcessingAnim::_internal_set_scale(float value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.scale_ = value;
}
inline void CCitadelUserMsg_PostProcessingAnim::set_scale(float value) {
  _internal_set_scale(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PostProcessingAnim.scale)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_DeathReplayData

// optional int32 killer_scorer = 1 [default = -1];
inline bool CCitadelUserMsg_DeathReplayData::_internal_has_killer_scorer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_DeathReplayData::has_killer_scorer() const {
  return _internal_has_killer_scorer();
}
inline void CCitadelUserMsg_DeathReplayData::clear_killer_scorer() {
  _impl_.killer_scorer_ = -1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_DeathReplayData::_internal_killer_scorer() const {
  return _impl_.killer_scorer_;
}
inline int32_t CCitadelUserMsg_DeathReplayData::killer_scorer() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_DeathReplayData.killer_scorer)
  return _internal_killer_scorer();
}
inline void CCitadelUserMsg_DeathReplayData::_internal_set_killer_scorer(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.killer_scorer_ = value;
}
inline void CCitadelUserMsg_DeathReplayData::set_killer_scorer(int32_t value) {
  _internal_set_killer_scorer(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_DeathReplayData.killer_scorer)
}

// optional int32 killer_inflictor = 2 [default = -1];
inline bool CCitadelUserMsg_DeathReplayData::_internal_has_killer_inflictor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_DeathReplayData::has_killer_inflictor() const {
  return _internal_has_killer_inflictor();
}
inline void CCitadelUserMsg_DeathReplayData::clear_killer_inflictor() {
  _impl_.killer_inflictor_ = -1;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMsg_DeathReplayData::_internal_killer_inflictor() const {
  return _impl_.killer_inflictor_;
}
inline int32_t CCitadelUserMsg_DeathReplayData::killer_inflictor() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_DeathReplayData.killer_inflictor)
  return _internal_killer_inflictor();
}
inline void CCitadelUserMsg_DeathReplayData::_internal_set_killer_inflictor(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.killer_inflictor_ = value;
}
inline void CCitadelUserMsg_DeathReplayData::set_killer_inflictor(int32_t value) {
  _internal_set_killer_inflictor(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_DeathReplayData.killer_inflictor)
}

// optional .CCitadelUserMsg_RecentDamageSummary damage_summary = 3;
inline bool CCitadelUserMsg_DeathReplayData::_internal_has_damage_summary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.damage_summary_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_DeathReplayData::has_damage_summary() const {
  return _internal_has_damage_summary();
}
inline void CCitadelUserMsg_DeathReplayData::clear_damage_summary() {
  if (_impl_.damage_summary_ != nullptr) _impl_.damage_summary_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CCitadelUserMsg_RecentDamageSummary& CCitadelUserMsg_DeathReplayData::_internal_damage_summary() const {
  const ::CCitadelUserMsg_RecentDamageSummary* p = _impl_.damage_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CCitadelUserMsg_RecentDamageSummary&>(
      ::_CCitadelUserMsg_RecentDamageSummary_default_instance_);
}
inline const ::CCitadelUserMsg_RecentDamageSummary& CCitadelUserMsg_DeathReplayData::damage_summary() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_DeathReplayData.damage_summary)
  return _internal_damage_summary();
}
inline void CCitadelUserMsg_DeathReplayData::unsafe_arena_set_allocated_damage_summary(
    ::CCitadelUserMsg_RecentDamageSummary* damage_summary) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.damage_summary_);
  }
  _impl_.damage_summary_ = damage_summary;
  if (damage_summary) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_DeathReplayData.damage_summary)
}
inline ::CCitadelUserMsg_RecentDamageSummary* CCitadelUserMsg_DeathReplayData::release_damage_summary() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CCitadelUserMsg_RecentDamageSummary* temp = _impl_.damage_summary_;
  _impl_.damage_summary_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CCitadelUserMsg_RecentDamageSummary* CCitadelUserMsg_DeathReplayData::unsafe_arena_release_damage_summary() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_DeathReplayData.damage_summary)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CCitadelUserMsg_RecentDamageSummary* temp = _impl_.damage_summary_;
  _impl_.damage_summary_ = nullptr;
  return temp;
}
inline ::CCitadelUserMsg_RecentDamageSummary* CCitadelUserMsg_DeathReplayData::_internal_mutable_damage_summary() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.damage_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::CCitadelUserMsg_RecentDamageSummary>(GetArenaForAllocation());
    _impl_.damage_summary_ = p;
  }
  return _impl_.damage_summary_;
}
inline ::CCitadelUserMsg_RecentDamageSummary* CCitadelUserMsg_DeathReplayData::mutable_damage_summary() {
  ::CCitadelUserMsg_RecentDamageSummary* _msg = _internal_mutable_damage_summary();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_DeathReplayData.damage_summary)
  return _msg;
}
inline void CCitadelUserMsg_DeathReplayData::set_allocated_damage_summary(::CCitadelUserMsg_RecentDamageSummary* damage_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.damage_summary_;
  }
  if (damage_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(damage_summary);
    if (message_arena != submessage_arena) {
      damage_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, damage_summary, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.damage_summary_ = damage_summary;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_DeathReplayData.damage_summary)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ForceShopClosed

// -------------------------------------------------------------------

// CCitadelUserMsg_PlayerLifetimeStatInfo_Stat

// optional string stat_name = 1;
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_has_stat_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::has_stat_name() const {
  return _internal_has_stat_name();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::clear_stat_name() {
  _impl_.stat_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::stat_name() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.stat_name)
  return _internal_stat_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::set_stat_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.stat_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.stat_name)
}
inline std::string* CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::mutable_stat_name() {
  std::string* _s = _internal_mutable_stat_name();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.stat_name)
  return _s;
}
inline const std::string& CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_stat_name() const {
  return _impl_.stat_name_.Get();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_set_stat_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.stat_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_mutable_stat_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.stat_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::release_stat_name() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.stat_name)
  if (!_internal_has_stat_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.stat_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.stat_name_.IsDefault()) {
    _impl_.stat_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::set_allocated_stat_name(std::string* stat_name) {
  if (stat_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.stat_name_.SetAllocated(stat_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.stat_name_.IsDefault()) {
    _impl_.stat_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.stat_name)
}

// optional uint32 match_total = 2;
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_has_match_total() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::has_match_total() const {
  return _internal_has_match_total();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::clear_match_total() {
  _impl_.match_total_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_match_total() const {
  return _impl_.match_total_;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::match_total() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.match_total)
  return _internal_match_total();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_set_match_total(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.match_total_ = value;
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::set_match_total(uint32_t value) {
  _internal_set_match_total(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.match_total)
}

// optional uint32 lifetime_value = 3;
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_has_lifetime_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::has_lifetime_value() const {
  return _internal_has_lifetime_value();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::clear_lifetime_value() {
  _impl_.lifetime_value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_lifetime_value() const {
  return _impl_.lifetime_value_;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::lifetime_value() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.lifetime_value)
  return _internal_lifetime_value();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_set_lifetime_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.lifetime_value_ = value;
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::set_lifetime_value(uint32_t value) {
  _internal_set_lifetime_value(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.lifetime_value)
}

// optional uint32 priority = 4;
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_has_priority() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::has_priority() const {
  return _internal_has_priority();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::clear_priority() {
  _impl_.priority_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_priority() const {
  return _impl_.priority_;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::priority() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.priority)
  return _internal_priority();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_set_priority(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.priority_ = value;
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::set_priority(uint32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.priority)
}

// optional uint32 prev_lifetime_max = 5;
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_has_prev_lifetime_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::has_prev_lifetime_max() const {
  return _internal_has_prev_lifetime_max();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::clear_prev_lifetime_max() {
  _impl_.prev_lifetime_max_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_prev_lifetime_max() const {
  return _impl_.prev_lifetime_max_;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::prev_lifetime_max() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.prev_lifetime_max)
  return _internal_prev_lifetime_max();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_set_prev_lifetime_max(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.prev_lifetime_max_ = value;
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::set_prev_lifetime_max(uint32_t value) {
  _internal_set_prev_lifetime_max(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.prev_lifetime_max)
}

// optional uint32 stat_type = 6;
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_has_stat_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::has_stat_type() const {
  return _internal_has_stat_type();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::clear_stat_type() {
  _impl_.stat_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_stat_type() const {
  return _impl_.stat_type_;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::stat_type() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.stat_type)
  return _internal_stat_type();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_set_stat_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.stat_type_ = value;
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::set_stat_type(uint32_t value) {
  _internal_set_stat_type(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.stat_type)
}

// optional uint32 stat_type_id = 7;
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_has_stat_type_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::has_stat_type_id() const {
  return _internal_has_stat_type_id();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::clear_stat_type_id() {
  _impl_.stat_type_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_stat_type_id() const {
  return _impl_.stat_type_id_;
}
inline uint32_t CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::stat_type_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.stat_type_id)
  return _internal_stat_type_id();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::_internal_set_stat_type_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.stat_type_id_ = value;
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo_Stat::set_stat_type_id(uint32_t value) {
  _internal_set_stat_type_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PlayerLifetimeStatInfo.Stat.stat_type_id)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_PlayerLifetimeStatInfo

// repeated .CCitadelUserMsg_PlayerLifetimeStatInfo.Stat stats = 1;
inline int CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_stats_size() const {
  return _impl_.stats_.size();
}
inline int CCitadelUserMsg_PlayerLifetimeStatInfo::stats_size() const {
  return _internal_stats_size();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo::clear_stats() {
  _impl_.stats_.Clear();
}
inline ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* CCitadelUserMsg_PlayerLifetimeStatInfo::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_PlayerLifetimeStatInfo.stats)
  return _impl_.stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat >*
CCitadelUserMsg_PlayerLifetimeStatInfo::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_PlayerLifetimeStatInfo.stats)
  return &_impl_.stats_;
}
inline const ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_stats(int index) const {
  return _impl_.stats_.Get(index);
}
inline const ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat& CCitadelUserMsg_PlayerLifetimeStatInfo::stats(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.stats)
  return _internal_stats(index);
}
inline ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_add_stats() {
  return _impl_.stats_.Add();
}
inline ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* CCitadelUserMsg_PlayerLifetimeStatInfo::add_stats() {
  ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat* _add = _internal_add_stats();
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_PlayerLifetimeStatInfo.stats)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCitadelUserMsg_PlayerLifetimeStatInfo_Stat >&
CCitadelUserMsg_PlayerLifetimeStatInfo::stats() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_PlayerLifetimeStatInfo.stats)
  return _impl_.stats_;
}

// optional uint64 match_id = 2;
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo::has_match_id() const {
  return _internal_has_match_id();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CCitadelUserMsg_PlayerLifetimeStatInfo::match_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.match_id)
  return _internal_match_id();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_id_ = value;
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PlayerLifetimeStatInfo.match_id)
}

// optional bool end_of_match = 3;
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_has_end_of_match() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo::has_end_of_match() const {
  return _internal_has_end_of_match();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo::clear_end_of_match() {
  _impl_.end_of_match_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_end_of_match() const {
  return _impl_.end_of_match_;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo::end_of_match() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.end_of_match)
  return _internal_end_of_match();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_set_end_of_match(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.end_of_match_ = value;
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo::set_end_of_match(bool value) {
  _internal_set_end_of_match(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PlayerLifetimeStatInfo.end_of_match)
}

// optional bool is_official_match = 4;
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_has_is_official_match() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo::has_is_official_match() const {
  return _internal_has_is_official_match();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo::clear_is_official_match() {
  _impl_.is_official_match_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_is_official_match() const {
  return _impl_.is_official_match_;
}
inline bool CCitadelUserMsg_PlayerLifetimeStatInfo::is_official_match() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_PlayerLifetimeStatInfo.is_official_match)
  return _internal_is_official_match();
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo::_internal_set_is_official_match(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.is_official_match_ = value;
}
inline void CCitadelUserMsg_PlayerLifetimeStatInfo::set_is_official_match(bool value) {
  _internal_set_is_official_match(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_PlayerLifetimeStatInfo.is_official_match)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_StaminaDrained

// optional int32 entindex_victim = 1 [default = -1];
inline bool CCitadelUserMsg_StaminaDrained::_internal_has_entindex_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_StaminaDrained::has_entindex_victim() const {
  return _internal_has_entindex_victim();
}
inline void CCitadelUserMsg_StaminaDrained::clear_entindex_victim() {
  _impl_.entindex_victim_ = -1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_StaminaDrained::_internal_entindex_victim() const {
  return _impl_.entindex_victim_;
}
inline int32_t CCitadelUserMsg_StaminaDrained::entindex_victim() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_StaminaDrained.entindex_victim)
  return _internal_entindex_victim();
}
inline void CCitadelUserMsg_StaminaDrained::_internal_set_entindex_victim(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entindex_victim_ = value;
}
inline void CCitadelUserMsg_StaminaDrained::set_entindex_victim(int32_t value) {
  _internal_set_entindex_victim(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_StaminaDrained.entindex_victim)
}

// optional int32 stamina_drained = 2;
inline bool CCitadelUserMsg_StaminaDrained::_internal_has_stamina_drained() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_StaminaDrained::has_stamina_drained() const {
  return _internal_has_stamina_drained();
}
inline void CCitadelUserMsg_StaminaDrained::clear_stamina_drained() {
  _impl_.stamina_drained_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMsg_StaminaDrained::_internal_stamina_drained() const {
  return _impl_.stamina_drained_;
}
inline int32_t CCitadelUserMsg_StaminaDrained::stamina_drained() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_StaminaDrained.stamina_drained)
  return _internal_stamina_drained();
}
inline void CCitadelUserMsg_StaminaDrained::_internal_set_stamina_drained(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.stamina_drained_ = value;
}
inline void CCitadelUserMsg_StaminaDrained::set_stamina_drained(int32_t value) {
  _internal_set_stamina_drained(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_StaminaDrained.stamina_drained)
}

// -------------------------------------------------------------------

// CCitadelUserMessage_AbilityNotify

// optional int32 entindex_victim = 1 [default = -1];
inline bool CCitadelUserMessage_AbilityNotify::_internal_has_entindex_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMessage_AbilityNotify::has_entindex_victim() const {
  return _internal_has_entindex_victim();
}
inline void CCitadelUserMessage_AbilityNotify::clear_entindex_victim() {
  _impl_.entindex_victim_ = -1;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMessage_AbilityNotify::_internal_entindex_victim() const {
  return _impl_.entindex_victim_;
}
inline int32_t CCitadelUserMessage_AbilityNotify::entindex_victim() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_AbilityNotify.entindex_victim)
  return _internal_entindex_victim();
}
inline void CCitadelUserMessage_AbilityNotify::_internal_set_entindex_victim(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entindex_victim_ = value;
}
inline void CCitadelUserMessage_AbilityNotify::set_entindex_victim(int32_t value) {
  _internal_set_entindex_victim(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_AbilityNotify.entindex_victim)
}

// optional int32 entindex_attacker = 2 [default = -1];
inline bool CCitadelUserMessage_AbilityNotify::_internal_has_entindex_attacker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMessage_AbilityNotify::has_entindex_attacker() const {
  return _internal_has_entindex_attacker();
}
inline void CCitadelUserMessage_AbilityNotify::clear_entindex_attacker() {
  _impl_.entindex_attacker_ = -1;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMessage_AbilityNotify::_internal_entindex_attacker() const {
  return _impl_.entindex_attacker_;
}
inline int32_t CCitadelUserMessage_AbilityNotify::entindex_attacker() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_AbilityNotify.entindex_attacker)
  return _internal_entindex_attacker();
}
inline void CCitadelUserMessage_AbilityNotify::_internal_set_entindex_attacker(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.entindex_attacker_ = value;
}
inline void CCitadelUserMessage_AbilityNotify::set_entindex_attacker(int32_t value) {
  _internal_set_entindex_attacker(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_AbilityNotify.entindex_attacker)
}

// optional uint32 ability_id = 3;
inline bool CCitadelUserMessage_AbilityNotify::_internal_has_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMessage_AbilityNotify::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CCitadelUserMessage_AbilityNotify::clear_ability_id() {
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CCitadelUserMessage_AbilityNotify::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline uint32_t CCitadelUserMessage_AbilityNotify::ability_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_AbilityNotify.ability_id)
  return _internal_ability_id();
}
inline void CCitadelUserMessage_AbilityNotify::_internal_set_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ability_id_ = value;
}
inline void CCitadelUserMessage_AbilityNotify::set_ability_id(uint32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_AbilityNotify.ability_id)
}

// -------------------------------------------------------------------

// CCitadelUserMessage_CurrencyChanged

// optional int32 entindex_hero_pawn = 1 [default = -1];
inline bool CCitadelUserMessage_CurrencyChanged::_internal_has_entindex_hero_pawn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCitadelUserMessage_CurrencyChanged::has_entindex_hero_pawn() const {
  return _internal_has_entindex_hero_pawn();
}
inline void CCitadelUserMessage_CurrencyChanged::clear_entindex_hero_pawn() {
  _impl_.entindex_hero_pawn_ = -1;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::_internal_entindex_hero_pawn() const {
  return _impl_.entindex_hero_pawn_;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::entindex_hero_pawn() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_CurrencyChanged.entindex_hero_pawn)
  return _internal_entindex_hero_pawn();
}
inline void CCitadelUserMessage_CurrencyChanged::_internal_set_entindex_hero_pawn(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.entindex_hero_pawn_ = value;
}
inline void CCitadelUserMessage_CurrencyChanged::set_entindex_hero_pawn(int32_t value) {
  _internal_set_entindex_hero_pawn(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_CurrencyChanged.entindex_hero_pawn)
}

// optional int32 currency_type = 2;
inline bool CCitadelUserMessage_CurrencyChanged::_internal_has_currency_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMessage_CurrencyChanged::has_currency_type() const {
  return _internal_has_currency_type();
}
inline void CCitadelUserMessage_CurrencyChanged::clear_currency_type() {
  _impl_.currency_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::_internal_currency_type() const {
  return _impl_.currency_type_;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::currency_type() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_CurrencyChanged.currency_type)
  return _internal_currency_type();
}
inline void CCitadelUserMessage_CurrencyChanged::_internal_set_currency_type(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.currency_type_ = value;
}
inline void CCitadelUserMessage_CurrencyChanged::set_currency_type(int32_t value) {
  _internal_set_currency_type(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_CurrencyChanged.currency_type)
}

// optional int32 currency_source = 3;
inline bool CCitadelUserMessage_CurrencyChanged::_internal_has_currency_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMessage_CurrencyChanged::has_currency_source() const {
  return _internal_has_currency_source();
}
inline void CCitadelUserMessage_CurrencyChanged::clear_currency_source() {
  _impl_.currency_source_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::_internal_currency_source() const {
  return _impl_.currency_source_;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::currency_source() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_CurrencyChanged.currency_source)
  return _internal_currency_source();
}
inline void CCitadelUserMessage_CurrencyChanged::_internal_set_currency_source(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.currency_source_ = value;
}
inline void CCitadelUserMessage_CurrencyChanged::set_currency_source(int32_t value) {
  _internal_set_currency_source(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_CurrencyChanged.currency_source)
}

// optional int32 delta = 4;
inline bool CCitadelUserMessage_CurrencyChanged::_internal_has_delta() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMessage_CurrencyChanged::has_delta() const {
  return _internal_has_delta();
}
inline void CCitadelUserMessage_CurrencyChanged::clear_delta() {
  _impl_.delta_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::_internal_delta() const {
  return _impl_.delta_;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::delta() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_CurrencyChanged.delta)
  return _internal_delta();
}
inline void CCitadelUserMessage_CurrencyChanged::_internal_set_delta(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.delta_ = value;
}
inline void CCitadelUserMessage_CurrencyChanged::set_delta(int32_t value) {
  _internal_set_delta(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_CurrencyChanged.delta)
}

// optional bool notification = 5;
inline bool CCitadelUserMessage_CurrencyChanged::_internal_has_notification() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMessage_CurrencyChanged::has_notification() const {
  return _internal_has_notification();
}
inline void CCitadelUserMessage_CurrencyChanged::clear_notification() {
  _impl_.notification_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CCitadelUserMessage_CurrencyChanged::_internal_notification() const {
  return _impl_.notification_;
}
inline bool CCitadelUserMessage_CurrencyChanged::notification() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_CurrencyChanged.notification)
  return _internal_notification();
}
inline void CCitadelUserMessage_CurrencyChanged::_internal_set_notification(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.notification_ = value;
}
inline void CCitadelUserMessage_CurrencyChanged::set_notification(bool value) {
  _internal_set_notification(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_CurrencyChanged.notification)
}

// optional int32 entindex_victim = 6 [default = -1];
inline bool CCitadelUserMessage_CurrencyChanged::_internal_has_entindex_victim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCitadelUserMessage_CurrencyChanged::has_entindex_victim() const {
  return _internal_has_entindex_victim();
}
inline void CCitadelUserMessage_CurrencyChanged::clear_entindex_victim() {
  _impl_.entindex_victim_ = -1;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::_internal_entindex_victim() const {
  return _impl_.entindex_victim_;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::entindex_victim() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_CurrencyChanged.entindex_victim)
  return _internal_entindex_victim();
}
inline void CCitadelUserMessage_CurrencyChanged::_internal_set_entindex_victim(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.entindex_victim_ = value;
}
inline void CCitadelUserMessage_CurrencyChanged::set_entindex_victim(int32_t value) {
  _internal_set_entindex_victim(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_CurrencyChanged.entindex_victim)
}

// optional .CMsgVector victim_pos = 7;
inline bool CCitadelUserMessage_CurrencyChanged::_internal_has_victim_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.victim_pos_ != nullptr);
  return value;
}
inline bool CCitadelUserMessage_CurrencyChanged::has_victim_pos() const {
  return _internal_has_victim_pos();
}
inline const ::CMsgVector& CCitadelUserMessage_CurrencyChanged::_internal_victim_pos() const {
  const ::CMsgVector* p = _impl_.victim_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCitadelUserMessage_CurrencyChanged::victim_pos() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_CurrencyChanged.victim_pos)
  return _internal_victim_pos();
}
inline void CCitadelUserMessage_CurrencyChanged::unsafe_arena_set_allocated_victim_pos(
    ::CMsgVector* victim_pos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.victim_pos_);
  }
  _impl_.victim_pos_ = victim_pos;
  if (victim_pos) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMessage_CurrencyChanged.victim_pos)
}
inline ::CMsgVector* CCitadelUserMessage_CurrencyChanged::release_victim_pos() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.victim_pos_;
  _impl_.victim_pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CCitadelUserMessage_CurrencyChanged::unsafe_arena_release_victim_pos() {
  // @@protoc_insertion_point(field_release:CCitadelUserMessage_CurrencyChanged.victim_pos)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.victim_pos_;
  _impl_.victim_pos_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCitadelUserMessage_CurrencyChanged::_internal_mutable_victim_pos() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.victim_pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.victim_pos_ = p;
  }
  return _impl_.victim_pos_;
}
inline ::CMsgVector* CCitadelUserMessage_CurrencyChanged::mutable_victim_pos() {
  ::CMsgVector* _msg = _internal_mutable_victim_pos();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMessage_CurrencyChanged.victim_pos)
  return _msg;
}
inline void CCitadelUserMessage_CurrencyChanged::set_allocated_victim_pos(::CMsgVector* victim_pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.victim_pos_);
  }
  if (victim_pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(victim_pos));
    if (message_arena != submessage_arena) {
      victim_pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, victim_pos, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.victim_pos_ = victim_pos;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMessage_CurrencyChanged.victim_pos)
}

// optional int32 playsound = 8;
inline bool CCitadelUserMessage_CurrencyChanged::_internal_has_playsound() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMessage_CurrencyChanged::has_playsound() const {
  return _internal_has_playsound();
}
inline void CCitadelUserMessage_CurrencyChanged::clear_playsound() {
  _impl_.playsound_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::_internal_playsound() const {
  return _impl_.playsound_;
}
inline int32_t CCitadelUserMessage_CurrencyChanged::playsound() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_CurrencyChanged.playsound)
  return _internal_playsound();
}
inline void CCitadelUserMessage_CurrencyChanged::_internal_set_playsound(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.playsound_ = value;
}
inline void CCitadelUserMessage_CurrencyChanged::set_playsound(int32_t value) {
  _internal_set_playsound(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_CurrencyChanged.playsound)
}

// optional uint32 ability_id = 9;
inline bool CCitadelUserMessage_CurrencyChanged::_internal_has_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCitadelUserMessage_CurrencyChanged::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CCitadelUserMessage_CurrencyChanged::clear_ability_id() {
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CCitadelUserMessage_CurrencyChanged::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline uint32_t CCitadelUserMessage_CurrencyChanged::ability_id() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_CurrencyChanged.ability_id)
  return _internal_ability_id();
}
inline void CCitadelUserMessage_CurrencyChanged::_internal_set_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.ability_id_ = value;
}
inline void CCitadelUserMessage_CurrencyChanged::set_ability_id(uint32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_CurrencyChanged.ability_id)
}

// -------------------------------------------------------------------

// CCitadelUserMessage_GameOver

// optional int32 winning_team = 1;
inline bool CCitadelUserMessage_GameOver::_internal_has_winning_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMessage_GameOver::has_winning_team() const {
  return _internal_has_winning_team();
}
inline void CCitadelUserMessage_GameOver::clear_winning_team() {
  _impl_.winning_team_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMessage_GameOver::_internal_winning_team() const {
  return _impl_.winning_team_;
}
inline int32_t CCitadelUserMessage_GameOver::winning_team() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_GameOver.winning_team)
  return _internal_winning_team();
}
inline void CCitadelUserMessage_GameOver::_internal_set_winning_team(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.winning_team_ = value;
}
inline void CCitadelUserMessage_GameOver::set_winning_team(int32_t value) {
  _internal_set_winning_team(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_GameOver.winning_team)
}

// optional bool just_a_test = 2;
inline bool CCitadelUserMessage_GameOver::_internal_has_just_a_test() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMessage_GameOver::has_just_a_test() const {
  return _internal_has_just_a_test();
}
inline void CCitadelUserMessage_GameOver::clear_just_a_test() {
  _impl_.just_a_test_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CCitadelUserMessage_GameOver::_internal_just_a_test() const {
  return _impl_.just_a_test_;
}
inline bool CCitadelUserMessage_GameOver::just_a_test() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMessage_GameOver.just_a_test)
  return _internal_just_a_test();
}
inline void CCitadelUserMessage_GameOver::_internal_set_just_a_test(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.just_a_test_ = value;
}
inline void CCitadelUserMessage_GameOver::set_just_a_test(bool value) {
  _internal_set_just_a_test(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMessage_GameOver.just_a_test)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_GetDamageStatsResponse_StatType

// repeated uint32 target_player_slot = 1 [packed = true];
inline int CCitadelUserMsg_GetDamageStatsResponse_StatType::_internal_target_player_slot_size() const {
  return _impl_.target_player_slot_.size();
}
inline int CCitadelUserMsg_GetDamageStatsResponse_StatType::target_player_slot_size() const {
  return _internal_target_player_slot_size();
}
inline void CCitadelUserMsg_GetDamageStatsResponse_StatType::clear_target_player_slot() {
  _impl_.target_player_slot_.Clear();
}
inline uint32_t CCitadelUserMsg_GetDamageStatsResponse_StatType::_internal_target_player_slot(int index) const {
  return _impl_.target_player_slot_.Get(index);
}
inline uint32_t CCitadelUserMsg_GetDamageStatsResponse_StatType::target_player_slot(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GetDamageStatsResponse.StatType.target_player_slot)
  return _internal_target_player_slot(index);
}
inline void CCitadelUserMsg_GetDamageStatsResponse_StatType::set_target_player_slot(int index, uint32_t value) {
  _impl_.target_player_slot_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_GetDamageStatsResponse.StatType.target_player_slot)
}
inline void CCitadelUserMsg_GetDamageStatsResponse_StatType::_internal_add_target_player_slot(uint32_t value) {
  _impl_.target_player_slot_.Add(value);
}
inline void CCitadelUserMsg_GetDamageStatsResponse_StatType::add_target_player_slot(uint32_t value) {
  _internal_add_target_player_slot(value);
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_GetDamageStatsResponse.StatType.target_player_slot)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CCitadelUserMsg_GetDamageStatsResponse_StatType::_internal_target_player_slot() const {
  return _impl_.target_player_slot_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CCitadelUserMsg_GetDamageStatsResponse_StatType::target_player_slot() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_GetDamageStatsResponse.StatType.target_player_slot)
  return _internal_target_player_slot();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CCitadelUserMsg_GetDamageStatsResponse_StatType::_internal_mutable_target_player_slot() {
  return &_impl_.target_player_slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CCitadelUserMsg_GetDamageStatsResponse_StatType::mutable_target_player_slot() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_GetDamageStatsResponse.StatType.target_player_slot)
  return _internal_mutable_target_player_slot();
}

// repeated uint32 value = 2 [packed = true];
inline int CCitadelUserMsg_GetDamageStatsResponse_StatType::_internal_value_size() const {
  return _impl_.value_.size();
}
inline int CCitadelUserMsg_GetDamageStatsResponse_StatType::value_size() const {
  return _internal_value_size();
}
inline void CCitadelUserMsg_GetDamageStatsResponse_StatType::clear_value() {
  _impl_.value_.Clear();
}
inline uint32_t CCitadelUserMsg_GetDamageStatsResponse_StatType::_internal_value(int index) const {
  return _impl_.value_.Get(index);
}
inline uint32_t CCitadelUserMsg_GetDamageStatsResponse_StatType::value(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GetDamageStatsResponse.StatType.value)
  return _internal_value(index);
}
inline void CCitadelUserMsg_GetDamageStatsResponse_StatType::set_value(int index, uint32_t value) {
  _impl_.value_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_GetDamageStatsResponse.StatType.value)
}
inline void CCitadelUserMsg_GetDamageStatsResponse_StatType::_internal_add_value(uint32_t value) {
  _impl_.value_.Add(value);
}
inline void CCitadelUserMsg_GetDamageStatsResponse_StatType::add_value(uint32_t value) {
  _internal_add_value(value);
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_GetDamageStatsResponse.StatType.value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CCitadelUserMsg_GetDamageStatsResponse_StatType::_internal_value() const {
  return _impl_.value_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CCitadelUserMsg_GetDamageStatsResponse_StatType::value() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_GetDamageStatsResponse.StatType.value)
  return _internal_value();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CCitadelUserMsg_GetDamageStatsResponse_StatType::_internal_mutable_value() {
  return &_impl_.value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CCitadelUserMsg_GetDamageStatsResponse_StatType::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_GetDamageStatsResponse.StatType.value)
  return _internal_mutable_value();
}

// -------------------------------------------------------------------

// CCitadelUserMsg_GetDamageStatsResponse

// optional uint32 player_slot = 1;
inline bool CCitadelUserMsg_GetDamageStatsResponse::_internal_has_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_GetDamageStatsResponse::has_player_slot() const {
  return _internal_has_player_slot();
}
inline void CCitadelUserMsg_GetDamageStatsResponse::clear_player_slot() {
  _impl_.player_slot_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CCitadelUserMsg_GetDamageStatsResponse::_internal_player_slot() const {
  return _impl_.player_slot_;
}
inline uint32_t CCitadelUserMsg_GetDamageStatsResponse::player_slot() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GetDamageStatsResponse.player_slot)
  return _internal_player_slot();
}
inline void CCitadelUserMsg_GetDamageStatsResponse::_internal_set_player_slot(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.player_slot_ = value;
}
inline void CCitadelUserMsg_GetDamageStatsResponse::set_player_slot(uint32_t value) {
  _internal_set_player_slot(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_GetDamageStatsResponse.player_slot)
}

// optional string ability_name = 2;
inline bool CCitadelUserMsg_GetDamageStatsResponse::_internal_has_ability_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_GetDamageStatsResponse::has_ability_name() const {
  return _internal_has_ability_name();
}
inline void CCitadelUserMsg_GetDamageStatsResponse::clear_ability_name() {
  _impl_.ability_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCitadelUserMsg_GetDamageStatsResponse::ability_name() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GetDamageStatsResponse.ability_name)
  return _internal_ability_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CCitadelUserMsg_GetDamageStatsResponse::set_ability_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.ability_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_GetDamageStatsResponse.ability_name)
}
inline std::string* CCitadelUserMsg_GetDamageStatsResponse::mutable_ability_name() {
  std::string* _s = _internal_mutable_ability_name();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_GetDamageStatsResponse.ability_name)
  return _s;
}
inline const std::string& CCitadelUserMsg_GetDamageStatsResponse::_internal_ability_name() const {
  return _impl_.ability_name_.Get();
}
inline void CCitadelUserMsg_GetDamageStatsResponse::_internal_set_ability_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ability_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_GetDamageStatsResponse::_internal_mutable_ability_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.ability_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CCitadelUserMsg_GetDamageStatsResponse::release_ability_name() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_GetDamageStatsResponse.ability_name)
  if (!_internal_has_ability_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.ability_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.ability_name_.IsDefault()) {
    _impl_.ability_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CCitadelUserMsg_GetDamageStatsResponse::set_allocated_ability_name(std::string* ability_name) {
  if (ability_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ability_name_.SetAllocated(ability_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.ability_name_.IsDefault()) {
    _impl_.ability_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_GetDamageStatsResponse.ability_name)
}

// optional .CCitadelUserMsg_GetDamageStatsResponse.StatType damage = 3;
inline bool CCitadelUserMsg_GetDamageStatsResponse::_internal_has_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.damage_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_GetDamageStatsResponse::has_damage() const {
  return _internal_has_damage();
}
inline void CCitadelUserMsg_GetDamageStatsResponse::clear_damage() {
  if (_impl_.damage_ != nullptr) _impl_.damage_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CCitadelUserMsg_GetDamageStatsResponse_StatType& CCitadelUserMsg_GetDamageStatsResponse::_internal_damage() const {
  const ::CCitadelUserMsg_GetDamageStatsResponse_StatType* p = _impl_.damage_;
  return p != nullptr ? *p : reinterpret_cast<const ::CCitadelUserMsg_GetDamageStatsResponse_StatType&>(
      ::_CCitadelUserMsg_GetDamageStatsResponse_StatType_default_instance_);
}
inline const ::CCitadelUserMsg_GetDamageStatsResponse_StatType& CCitadelUserMsg_GetDamageStatsResponse::damage() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GetDamageStatsResponse.damage)
  return _internal_damage();
}
inline void CCitadelUserMsg_GetDamageStatsResponse::unsafe_arena_set_allocated_damage(
    ::CCitadelUserMsg_GetDamageStatsResponse_StatType* damage) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.damage_);
  }
  _impl_.damage_ = damage;
  if (damage) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_GetDamageStatsResponse.damage)
}
inline ::CCitadelUserMsg_GetDamageStatsResponse_StatType* CCitadelUserMsg_GetDamageStatsResponse::release_damage() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* temp = _impl_.damage_;
  _impl_.damage_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CCitadelUserMsg_GetDamageStatsResponse_StatType* CCitadelUserMsg_GetDamageStatsResponse::unsafe_arena_release_damage() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_GetDamageStatsResponse.damage)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* temp = _impl_.damage_;
  _impl_.damage_ = nullptr;
  return temp;
}
inline ::CCitadelUserMsg_GetDamageStatsResponse_StatType* CCitadelUserMsg_GetDamageStatsResponse::_internal_mutable_damage() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.damage_ == nullptr) {
    auto* p = CreateMaybeMessage<::CCitadelUserMsg_GetDamageStatsResponse_StatType>(GetArenaForAllocation());
    _impl_.damage_ = p;
  }
  return _impl_.damage_;
}
inline ::CCitadelUserMsg_GetDamageStatsResponse_StatType* CCitadelUserMsg_GetDamageStatsResponse::mutable_damage() {
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* _msg = _internal_mutable_damage();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_GetDamageStatsResponse.damage)
  return _msg;
}
inline void CCitadelUserMsg_GetDamageStatsResponse::set_allocated_damage(::CCitadelUserMsg_GetDamageStatsResponse_StatType* damage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.damage_;
  }
  if (damage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(damage);
    if (message_arena != submessage_arena) {
      damage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, damage, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.damage_ = damage;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_GetDamageStatsResponse.damage)
}

// optional .CCitadelUserMsg_GetDamageStatsResponse.StatType healing = 4;
inline bool CCitadelUserMsg_GetDamageStatsResponse::_internal_has_healing() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.healing_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_GetDamageStatsResponse::has_healing() const {
  return _internal_has_healing();
}
inline void CCitadelUserMsg_GetDamageStatsResponse::clear_healing() {
  if (_impl_.healing_ != nullptr) _impl_.healing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CCitadelUserMsg_GetDamageStatsResponse_StatType& CCitadelUserMsg_GetDamageStatsResponse::_internal_healing() const {
  const ::CCitadelUserMsg_GetDamageStatsResponse_StatType* p = _impl_.healing_;
  return p != nullptr ? *p : reinterpret_cast<const ::CCitadelUserMsg_GetDamageStatsResponse_StatType&>(
      ::_CCitadelUserMsg_GetDamageStatsResponse_StatType_default_instance_);
}
inline const ::CCitadelUserMsg_GetDamageStatsResponse_StatType& CCitadelUserMsg_GetDamageStatsResponse::healing() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_GetDamageStatsResponse.healing)
  return _internal_healing();
}
inline void CCitadelUserMsg_GetDamageStatsResponse::unsafe_arena_set_allocated_healing(
    ::CCitadelUserMsg_GetDamageStatsResponse_StatType* healing) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.healing_);
  }
  _impl_.healing_ = healing;
  if (healing) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_GetDamageStatsResponse.healing)
}
inline ::CCitadelUserMsg_GetDamageStatsResponse_StatType* CCitadelUserMsg_GetDamageStatsResponse::release_healing() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* temp = _impl_.healing_;
  _impl_.healing_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CCitadelUserMsg_GetDamageStatsResponse_StatType* CCitadelUserMsg_GetDamageStatsResponse::unsafe_arena_release_healing() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_GetDamageStatsResponse.healing)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* temp = _impl_.healing_;
  _impl_.healing_ = nullptr;
  return temp;
}
inline ::CCitadelUserMsg_GetDamageStatsResponse_StatType* CCitadelUserMsg_GetDamageStatsResponse::_internal_mutable_healing() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.healing_ == nullptr) {
    auto* p = CreateMaybeMessage<::CCitadelUserMsg_GetDamageStatsResponse_StatType>(GetArenaForAllocation());
    _impl_.healing_ = p;
  }
  return _impl_.healing_;
}
inline ::CCitadelUserMsg_GetDamageStatsResponse_StatType* CCitadelUserMsg_GetDamageStatsResponse::mutable_healing() {
  ::CCitadelUserMsg_GetDamageStatsResponse_StatType* _msg = _internal_mutable_healing();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_GetDamageStatsResponse.healing)
  return _msg;
}
inline void CCitadelUserMsg_GetDamageStatsResponse::set_allocated_healing(::CCitadelUserMsg_GetDamageStatsResponse_StatType* healing) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.healing_;
  }
  if (healing) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(healing);
    if (message_arena != submessage_arena) {
      healing = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, healing, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.healing_ = healing;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_GetDamageStatsResponse.healing)
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ParticipantStartSoundEvent

// required .CMsgSosStartSoundEvent event = 1;
inline bool CCitadelUserMsg_ParticipantStartSoundEvent::_internal_has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_ParticipantStartSoundEvent::has_event() const {
  return _internal_has_event();
}
inline const ::CMsgSosStartSoundEvent& CCitadelUserMsg_ParticipantStartSoundEvent::_internal_event() const {
  const ::CMsgSosStartSoundEvent* p = _impl_.event_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSosStartSoundEvent&>(
      ::_CMsgSosStartSoundEvent_default_instance_);
}
inline const ::CMsgSosStartSoundEvent& CCitadelUserMsg_ParticipantStartSoundEvent::event() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ParticipantStartSoundEvent.event)
  return _internal_event();
}
inline void CCitadelUserMsg_ParticipantStartSoundEvent::unsafe_arena_set_allocated_event(
    ::CMsgSosStartSoundEvent* event) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  _impl_.event_ = event;
  if (event) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_ParticipantStartSoundEvent.event)
}
inline ::CMsgSosStartSoundEvent* CCitadelUserMsg_ParticipantStartSoundEvent::release_event() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSosStartSoundEvent* temp = _impl_.event_;
  _impl_.event_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgSosStartSoundEvent* CCitadelUserMsg_ParticipantStartSoundEvent::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_ParticipantStartSoundEvent.event)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSosStartSoundEvent* temp = _impl_.event_;
  _impl_.event_ = nullptr;
  return temp;
}
inline ::CMsgSosStartSoundEvent* CCitadelUserMsg_ParticipantStartSoundEvent::_internal_mutable_event() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.event_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSosStartSoundEvent>(GetArenaForAllocation());
    _impl_.event_ = p;
  }
  return _impl_.event_;
}
inline ::CMsgSosStartSoundEvent* CCitadelUserMsg_ParticipantStartSoundEvent::mutable_event() {
  ::CMsgSosStartSoundEvent* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_ParticipantStartSoundEvent.event)
  return _msg;
}
inline void CCitadelUserMsg_ParticipantStartSoundEvent::set_allocated_event(::CMsgSosStartSoundEvent* event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  if (event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event));
    if (message_arena != submessage_arena) {
      event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.event_ = event;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_ParticipantStartSoundEvent.event)
}

// repeated int32 player_slots = 2;
inline int CCitadelUserMsg_ParticipantStartSoundEvent::_internal_player_slots_size() const {
  return _impl_.player_slots_.size();
}
inline int CCitadelUserMsg_ParticipantStartSoundEvent::player_slots_size() const {
  return _internal_player_slots_size();
}
inline void CCitadelUserMsg_ParticipantStartSoundEvent::clear_player_slots() {
  _impl_.player_slots_.Clear();
}
inline int32_t CCitadelUserMsg_ParticipantStartSoundEvent::_internal_player_slots(int index) const {
  return _impl_.player_slots_.Get(index);
}
inline int32_t CCitadelUserMsg_ParticipantStartSoundEvent::player_slots(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ParticipantStartSoundEvent.player_slots)
  return _internal_player_slots(index);
}
inline void CCitadelUserMsg_ParticipantStartSoundEvent::set_player_slots(int index, int32_t value) {
  _impl_.player_slots_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ParticipantStartSoundEvent.player_slots)
}
inline void CCitadelUserMsg_ParticipantStartSoundEvent::_internal_add_player_slots(int32_t value) {
  _impl_.player_slots_.Add(value);
}
inline void CCitadelUserMsg_ParticipantStartSoundEvent::add_player_slots(int32_t value) {
  _internal_add_player_slots(value);
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_ParticipantStartSoundEvent.player_slots)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ParticipantStartSoundEvent::_internal_player_slots() const {
  return _impl_.player_slots_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ParticipantStartSoundEvent::player_slots() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_ParticipantStartSoundEvent.player_slots)
  return _internal_player_slots();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ParticipantStartSoundEvent::_internal_mutable_player_slots() {
  return &_impl_.player_slots_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ParticipantStartSoundEvent::mutable_player_slots() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_ParticipantStartSoundEvent.player_slots)
  return _internal_mutable_player_slots();
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ParticipantStopSoundEvent

// required .CMsgSosStopSoundEvent event = 1;
inline bool CCitadelUserMsg_ParticipantStopSoundEvent::_internal_has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_ParticipantStopSoundEvent::has_event() const {
  return _internal_has_event();
}
inline const ::CMsgSosStopSoundEvent& CCitadelUserMsg_ParticipantStopSoundEvent::_internal_event() const {
  const ::CMsgSosStopSoundEvent* p = _impl_.event_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSosStopSoundEvent&>(
      ::_CMsgSosStopSoundEvent_default_instance_);
}
inline const ::CMsgSosStopSoundEvent& CCitadelUserMsg_ParticipantStopSoundEvent::event() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ParticipantStopSoundEvent.event)
  return _internal_event();
}
inline void CCitadelUserMsg_ParticipantStopSoundEvent::unsafe_arena_set_allocated_event(
    ::CMsgSosStopSoundEvent* event) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  _impl_.event_ = event;
  if (event) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_ParticipantStopSoundEvent.event)
}
inline ::CMsgSosStopSoundEvent* CCitadelUserMsg_ParticipantStopSoundEvent::release_event() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSosStopSoundEvent* temp = _impl_.event_;
  _impl_.event_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgSosStopSoundEvent* CCitadelUserMsg_ParticipantStopSoundEvent::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_ParticipantStopSoundEvent.event)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSosStopSoundEvent* temp = _impl_.event_;
  _impl_.event_ = nullptr;
  return temp;
}
inline ::CMsgSosStopSoundEvent* CCitadelUserMsg_ParticipantStopSoundEvent::_internal_mutable_event() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.event_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSosStopSoundEvent>(GetArenaForAllocation());
    _impl_.event_ = p;
  }
  return _impl_.event_;
}
inline ::CMsgSosStopSoundEvent* CCitadelUserMsg_ParticipantStopSoundEvent::mutable_event() {
  ::CMsgSosStopSoundEvent* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_ParticipantStopSoundEvent.event)
  return _msg;
}
inline void CCitadelUserMsg_ParticipantStopSoundEvent::set_allocated_event(::CMsgSosStopSoundEvent* event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  if (event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event));
    if (message_arena != submessage_arena) {
      event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.event_ = event;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_ParticipantStopSoundEvent.event)
}

// repeated int32 player_slots = 2;
inline int CCitadelUserMsg_ParticipantStopSoundEvent::_internal_player_slots_size() const {
  return _impl_.player_slots_.size();
}
inline int CCitadelUserMsg_ParticipantStopSoundEvent::player_slots_size() const {
  return _internal_player_slots_size();
}
inline void CCitadelUserMsg_ParticipantStopSoundEvent::clear_player_slots() {
  _impl_.player_slots_.Clear();
}
inline int32_t CCitadelUserMsg_ParticipantStopSoundEvent::_internal_player_slots(int index) const {
  return _impl_.player_slots_.Get(index);
}
inline int32_t CCitadelUserMsg_ParticipantStopSoundEvent::player_slots(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ParticipantStopSoundEvent.player_slots)
  return _internal_player_slots(index);
}
inline void CCitadelUserMsg_ParticipantStopSoundEvent::set_player_slots(int index, int32_t value) {
  _impl_.player_slots_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ParticipantStopSoundEvent.player_slots)
}
inline void CCitadelUserMsg_ParticipantStopSoundEvent::_internal_add_player_slots(int32_t value) {
  _impl_.player_slots_.Add(value);
}
inline void CCitadelUserMsg_ParticipantStopSoundEvent::add_player_slots(int32_t value) {
  _internal_add_player_slots(value);
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_ParticipantStopSoundEvent.player_slots)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ParticipantStopSoundEvent::_internal_player_slots() const {
  return _impl_.player_slots_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ParticipantStopSoundEvent::player_slots() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_ParticipantStopSoundEvent.player_slots)
  return _internal_player_slots();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ParticipantStopSoundEvent::_internal_mutable_player_slots() {
  return &_impl_.player_slots_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ParticipantStopSoundEvent::mutable_player_slots() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_ParticipantStopSoundEvent.player_slots)
  return _internal_mutable_player_slots();
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ParticipantStopSoundEventHash

// required .CMsgSosStopSoundEventHash event = 1;
inline bool CCitadelUserMsg_ParticipantStopSoundEventHash::_internal_has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_ParticipantStopSoundEventHash::has_event() const {
  return _internal_has_event();
}
inline const ::CMsgSosStopSoundEventHash& CCitadelUserMsg_ParticipantStopSoundEventHash::_internal_event() const {
  const ::CMsgSosStopSoundEventHash* p = _impl_.event_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSosStopSoundEventHash&>(
      ::_CMsgSosStopSoundEventHash_default_instance_);
}
inline const ::CMsgSosStopSoundEventHash& CCitadelUserMsg_ParticipantStopSoundEventHash::event() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ParticipantStopSoundEventHash.event)
  return _internal_event();
}
inline void CCitadelUserMsg_ParticipantStopSoundEventHash::unsafe_arena_set_allocated_event(
    ::CMsgSosStopSoundEventHash* event) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  _impl_.event_ = event;
  if (event) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_ParticipantStopSoundEventHash.event)
}
inline ::CMsgSosStopSoundEventHash* CCitadelUserMsg_ParticipantStopSoundEventHash::release_event() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSosStopSoundEventHash* temp = _impl_.event_;
  _impl_.event_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgSosStopSoundEventHash* CCitadelUserMsg_ParticipantStopSoundEventHash::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_ParticipantStopSoundEventHash.event)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSosStopSoundEventHash* temp = _impl_.event_;
  _impl_.event_ = nullptr;
  return temp;
}
inline ::CMsgSosStopSoundEventHash* CCitadelUserMsg_ParticipantStopSoundEventHash::_internal_mutable_event() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.event_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSosStopSoundEventHash>(GetArenaForAllocation());
    _impl_.event_ = p;
  }
  return _impl_.event_;
}
inline ::CMsgSosStopSoundEventHash* CCitadelUserMsg_ParticipantStopSoundEventHash::mutable_event() {
  ::CMsgSosStopSoundEventHash* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_ParticipantStopSoundEventHash.event)
  return _msg;
}
inline void CCitadelUserMsg_ParticipantStopSoundEventHash::set_allocated_event(::CMsgSosStopSoundEventHash* event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  if (event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event));
    if (message_arena != submessage_arena) {
      event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.event_ = event;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_ParticipantStopSoundEventHash.event)
}

// repeated int32 player_slots = 2;
inline int CCitadelUserMsg_ParticipantStopSoundEventHash::_internal_player_slots_size() const {
  return _impl_.player_slots_.size();
}
inline int CCitadelUserMsg_ParticipantStopSoundEventHash::player_slots_size() const {
  return _internal_player_slots_size();
}
inline void CCitadelUserMsg_ParticipantStopSoundEventHash::clear_player_slots() {
  _impl_.player_slots_.Clear();
}
inline int32_t CCitadelUserMsg_ParticipantStopSoundEventHash::_internal_player_slots(int index) const {
  return _impl_.player_slots_.Get(index);
}
inline int32_t CCitadelUserMsg_ParticipantStopSoundEventHash::player_slots(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ParticipantStopSoundEventHash.player_slots)
  return _internal_player_slots(index);
}
inline void CCitadelUserMsg_ParticipantStopSoundEventHash::set_player_slots(int index, int32_t value) {
  _impl_.player_slots_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ParticipantStopSoundEventHash.player_slots)
}
inline void CCitadelUserMsg_ParticipantStopSoundEventHash::_internal_add_player_slots(int32_t value) {
  _impl_.player_slots_.Add(value);
}
inline void CCitadelUserMsg_ParticipantStopSoundEventHash::add_player_slots(int32_t value) {
  _internal_add_player_slots(value);
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_ParticipantStopSoundEventHash.player_slots)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ParticipantStopSoundEventHash::_internal_player_slots() const {
  return _impl_.player_slots_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ParticipantStopSoundEventHash::player_slots() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_ParticipantStopSoundEventHash.player_slots)
  return _internal_player_slots();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ParticipantStopSoundEventHash::_internal_mutable_player_slots() {
  return &_impl_.player_slots_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ParticipantStopSoundEventHash::mutable_player_slots() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_ParticipantStopSoundEventHash.player_slots)
  return _internal_mutable_player_slots();
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ParticipantSetSoundEventParams

// required .CMsgSosSetSoundEventParams event = 1;
inline bool CCitadelUserMsg_ParticipantSetSoundEventParams::_internal_has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_ParticipantSetSoundEventParams::has_event() const {
  return _internal_has_event();
}
inline const ::CMsgSosSetSoundEventParams& CCitadelUserMsg_ParticipantSetSoundEventParams::_internal_event() const {
  const ::CMsgSosSetSoundEventParams* p = _impl_.event_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSosSetSoundEventParams&>(
      ::_CMsgSosSetSoundEventParams_default_instance_);
}
inline const ::CMsgSosSetSoundEventParams& CCitadelUserMsg_ParticipantSetSoundEventParams::event() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ParticipantSetSoundEventParams.event)
  return _internal_event();
}
inline void CCitadelUserMsg_ParticipantSetSoundEventParams::unsafe_arena_set_allocated_event(
    ::CMsgSosSetSoundEventParams* event) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  _impl_.event_ = event;
  if (event) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_ParticipantSetSoundEventParams.event)
}
inline ::CMsgSosSetSoundEventParams* CCitadelUserMsg_ParticipantSetSoundEventParams::release_event() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSosSetSoundEventParams* temp = _impl_.event_;
  _impl_.event_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgSosSetSoundEventParams* CCitadelUserMsg_ParticipantSetSoundEventParams::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_ParticipantSetSoundEventParams.event)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSosSetSoundEventParams* temp = _impl_.event_;
  _impl_.event_ = nullptr;
  return temp;
}
inline ::CMsgSosSetSoundEventParams* CCitadelUserMsg_ParticipantSetSoundEventParams::_internal_mutable_event() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.event_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSosSetSoundEventParams>(GetArenaForAllocation());
    _impl_.event_ = p;
  }
  return _impl_.event_;
}
inline ::CMsgSosSetSoundEventParams* CCitadelUserMsg_ParticipantSetSoundEventParams::mutable_event() {
  ::CMsgSosSetSoundEventParams* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_ParticipantSetSoundEventParams.event)
  return _msg;
}
inline void CCitadelUserMsg_ParticipantSetSoundEventParams::set_allocated_event(::CMsgSosSetSoundEventParams* event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  if (event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event));
    if (message_arena != submessage_arena) {
      event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.event_ = event;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_ParticipantSetSoundEventParams.event)
}

// repeated int32 player_slots = 2;
inline int CCitadelUserMsg_ParticipantSetSoundEventParams::_internal_player_slots_size() const {
  return _impl_.player_slots_.size();
}
inline int CCitadelUserMsg_ParticipantSetSoundEventParams::player_slots_size() const {
  return _internal_player_slots_size();
}
inline void CCitadelUserMsg_ParticipantSetSoundEventParams::clear_player_slots() {
  _impl_.player_slots_.Clear();
}
inline int32_t CCitadelUserMsg_ParticipantSetSoundEventParams::_internal_player_slots(int index) const {
  return _impl_.player_slots_.Get(index);
}
inline int32_t CCitadelUserMsg_ParticipantSetSoundEventParams::player_slots(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ParticipantSetSoundEventParams.player_slots)
  return _internal_player_slots(index);
}
inline void CCitadelUserMsg_ParticipantSetSoundEventParams::set_player_slots(int index, int32_t value) {
  _impl_.player_slots_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ParticipantSetSoundEventParams.player_slots)
}
inline void CCitadelUserMsg_ParticipantSetSoundEventParams::_internal_add_player_slots(int32_t value) {
  _impl_.player_slots_.Add(value);
}
inline void CCitadelUserMsg_ParticipantSetSoundEventParams::add_player_slots(int32_t value) {
  _internal_add_player_slots(value);
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_ParticipantSetSoundEventParams.player_slots)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ParticipantSetSoundEventParams::_internal_player_slots() const {
  return _impl_.player_slots_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ParticipantSetSoundEventParams::player_slots() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_ParticipantSetSoundEventParams.player_slots)
  return _internal_player_slots();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ParticipantSetSoundEventParams::_internal_mutable_player_slots() {
  return &_impl_.player_slots_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ParticipantSetSoundEventParams::mutable_player_slots() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_ParticipantSetSoundEventParams.player_slots)
  return _internal_mutable_player_slots();
}

// -------------------------------------------------------------------

// CCitadelUserMsg_ParticipantSetLibraryStackFields

// required .CMsgSosSetLibraryStackFields event = 1;
inline bool CCitadelUserMsg_ParticipantSetLibraryStackFields::_internal_has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_ != nullptr);
  return value;
}
inline bool CCitadelUserMsg_ParticipantSetLibraryStackFields::has_event() const {
  return _internal_has_event();
}
inline const ::CMsgSosSetLibraryStackFields& CCitadelUserMsg_ParticipantSetLibraryStackFields::_internal_event() const {
  const ::CMsgSosSetLibraryStackFields* p = _impl_.event_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSosSetLibraryStackFields&>(
      ::_CMsgSosSetLibraryStackFields_default_instance_);
}
inline const ::CMsgSosSetLibraryStackFields& CCitadelUserMsg_ParticipantSetLibraryStackFields::event() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ParticipantSetLibraryStackFields.event)
  return _internal_event();
}
inline void CCitadelUserMsg_ParticipantSetLibraryStackFields::unsafe_arena_set_allocated_event(
    ::CMsgSosSetLibraryStackFields* event) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  _impl_.event_ = event;
  if (event) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserMsg_ParticipantSetLibraryStackFields.event)
}
inline ::CMsgSosSetLibraryStackFields* CCitadelUserMsg_ParticipantSetLibraryStackFields::release_event() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSosSetLibraryStackFields* temp = _impl_.event_;
  _impl_.event_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgSosSetLibraryStackFields* CCitadelUserMsg_ParticipantSetLibraryStackFields::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_release:CCitadelUserMsg_ParticipantSetLibraryStackFields.event)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgSosSetLibraryStackFields* temp = _impl_.event_;
  _impl_.event_ = nullptr;
  return temp;
}
inline ::CMsgSosSetLibraryStackFields* CCitadelUserMsg_ParticipantSetLibraryStackFields::_internal_mutable_event() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.event_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSosSetLibraryStackFields>(GetArenaForAllocation());
    _impl_.event_ = p;
  }
  return _impl_.event_;
}
inline ::CMsgSosSetLibraryStackFields* CCitadelUserMsg_ParticipantSetLibraryStackFields::mutable_event() {
  ::CMsgSosSetLibraryStackFields* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:CCitadelUserMsg_ParticipantSetLibraryStackFields.event)
  return _msg;
}
inline void CCitadelUserMsg_ParticipantSetLibraryStackFields::set_allocated_event(::CMsgSosSetLibraryStackFields* event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  if (event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event));
    if (message_arena != submessage_arena) {
      event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.event_ = event;
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserMsg_ParticipantSetLibraryStackFields.event)
}

// repeated int32 player_slots = 2;
inline int CCitadelUserMsg_ParticipantSetLibraryStackFields::_internal_player_slots_size() const {
  return _impl_.player_slots_.size();
}
inline int CCitadelUserMsg_ParticipantSetLibraryStackFields::player_slots_size() const {
  return _internal_player_slots_size();
}
inline void CCitadelUserMsg_ParticipantSetLibraryStackFields::clear_player_slots() {
  _impl_.player_slots_.Clear();
}
inline int32_t CCitadelUserMsg_ParticipantSetLibraryStackFields::_internal_player_slots(int index) const {
  return _impl_.player_slots_.Get(index);
}
inline int32_t CCitadelUserMsg_ParticipantSetLibraryStackFields::player_slots(int index) const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_ParticipantSetLibraryStackFields.player_slots)
  return _internal_player_slots(index);
}
inline void CCitadelUserMsg_ParticipantSetLibraryStackFields::set_player_slots(int index, int32_t value) {
  _impl_.player_slots_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_ParticipantSetLibraryStackFields.player_slots)
}
inline void CCitadelUserMsg_ParticipantSetLibraryStackFields::_internal_add_player_slots(int32_t value) {
  _impl_.player_slots_.Add(value);
}
inline void CCitadelUserMsg_ParticipantSetLibraryStackFields::add_player_slots(int32_t value) {
  _internal_add_player_slots(value);
  // @@protoc_insertion_point(field_add:CCitadelUserMsg_ParticipantSetLibraryStackFields.player_slots)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ParticipantSetLibraryStackFields::_internal_player_slots() const {
  return _impl_.player_slots_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
CCitadelUserMsg_ParticipantSetLibraryStackFields::player_slots() const {
  // @@protoc_insertion_point(field_list:CCitadelUserMsg_ParticipantSetLibraryStackFields.player_slots)
  return _internal_player_slots();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ParticipantSetLibraryStackFields::_internal_mutable_player_slots() {
  return &_impl_.player_slots_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
CCitadelUserMsg_ParticipantSetLibraryStackFields::mutable_player_slots() {
  // @@protoc_insertion_point(field_mutable_list:CCitadelUserMsg_ParticipantSetLibraryStackFields.player_slots)
  return _internal_mutable_player_slots();
}

// -------------------------------------------------------------------

// CCitadelUserMsg_BossKilled

// optional int32 objective_team = 1;
inline bool CCitadelUserMsg_BossKilled::_internal_has_objective_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCitadelUserMsg_BossKilled::has_objective_team() const {
  return _internal_has_objective_team();
}
inline void CCitadelUserMsg_BossKilled::clear_objective_team() {
  _impl_.objective_team_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CCitadelUserMsg_BossKilled::_internal_objective_team() const {
  return _impl_.objective_team_;
}
inline int32_t CCitadelUserMsg_BossKilled::objective_team() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_BossKilled.objective_team)
  return _internal_objective_team();
}
inline void CCitadelUserMsg_BossKilled::_internal_set_objective_team(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.objective_team_ = value;
}
inline void CCitadelUserMsg_BossKilled::set_objective_team(int32_t value) {
  _internal_set_objective_team(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_BossKilled.objective_team)
}

// optional int32 objective_mask_change = 2;
inline bool CCitadelUserMsg_BossKilled::_internal_has_objective_mask_change() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCitadelUserMsg_BossKilled::has_objective_mask_change() const {
  return _internal_has_objective_mask_change();
}
inline void CCitadelUserMsg_BossKilled::clear_objective_mask_change() {
  _impl_.objective_mask_change_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CCitadelUserMsg_BossKilled::_internal_objective_mask_change() const {
  return _impl_.objective_mask_change_;
}
inline int32_t CCitadelUserMsg_BossKilled::objective_mask_change() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_BossKilled.objective_mask_change)
  return _internal_objective_mask_change();
}
inline void CCitadelUserMsg_BossKilled::_internal_set_objective_mask_change(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.objective_mask_change_ = value;
}
inline void CCitadelUserMsg_BossKilled::set_objective_mask_change(int32_t value) {
  _internal_set_objective_mask_change(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_BossKilled.objective_mask_change)
}

// required uint32 entity_killed = 3 [default = 16777215];
inline bool CCitadelUserMsg_BossKilled::_internal_has_entity_killed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCitadelUserMsg_BossKilled::has_entity_killed() const {
  return _internal_has_entity_killed();
}
inline void CCitadelUserMsg_BossKilled::clear_entity_killed() {
  _impl_.entity_killed_ = 16777215u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CCitadelUserMsg_BossKilled::_internal_entity_killed() const {
  return _impl_.entity_killed_;
}
inline uint32_t CCitadelUserMsg_BossKilled::entity_killed() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_BossKilled.entity_killed)
  return _internal_entity_killed();
}
inline void CCitadelUserMsg_BossKilled::_internal_set_entity_killed(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.entity_killed_ = value;
}
inline void CCitadelUserMsg_BossKilled::set_entity_killed(uint32_t value) {
  _internal_set_entity_killed(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_BossKilled.entity_killed)
}

// required int32 entity_killed_class = 4;
inline bool CCitadelUserMsg_BossKilled::_internal_has_entity_killed_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCitadelUserMsg_BossKilled::has_entity_killed_class() const {
  return _internal_has_entity_killed_class();
}
inline void CCitadelUserMsg_BossKilled::clear_entity_killed_class() {
  _impl_.entity_killed_class_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CCitadelUserMsg_BossKilled::_internal_entity_killed_class() const {
  return _impl_.entity_killed_class_;
}
inline int32_t CCitadelUserMsg_BossKilled::entity_killed_class() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_BossKilled.entity_killed_class)
  return _internal_entity_killed_class();
}
inline void CCitadelUserMsg_BossKilled::_internal_set_entity_killed_class(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.entity_killed_class_ = value;
}
inline void CCitadelUserMsg_BossKilled::set_entity_killed_class(int32_t value) {
  _internal_set_entity_killed_class(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_BossKilled.entity_killed_class)
}

// required uint32 entity_killer = 5 [default = 16777215];
inline bool CCitadelUserMsg_BossKilled::_internal_has_entity_killer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCitadelUserMsg_BossKilled::has_entity_killer() const {
  return _internal_has_entity_killer();
}
inline void CCitadelUserMsg_BossKilled::clear_entity_killer() {
  _impl_.entity_killer_ = 16777215u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CCitadelUserMsg_BossKilled::_internal_entity_killer() const {
  return _impl_.entity_killer_;
}
inline uint32_t CCitadelUserMsg_BossKilled::entity_killer() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_BossKilled.entity_killer)
  return _internal_entity_killer();
}
inline void CCitadelUserMsg_BossKilled::_internal_set_entity_killer(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.entity_killer_ = value;
}
inline void CCitadelUserMsg_BossKilled::set_entity_killer(uint32_t value) {
  _internal_set_entity_killer(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_BossKilled.entity_killer)
}

// required float gametime = 6;
inline bool CCitadelUserMsg_BossKilled::_internal_has_gametime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCitadelUserMsg_BossKilled::has_gametime() const {
  return _internal_has_gametime();
}
inline void CCitadelUserMsg_BossKilled::clear_gametime() {
  _impl_.gametime_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CCitadelUserMsg_BossKilled::_internal_gametime() const {
  return _impl_.gametime_;
}
inline float CCitadelUserMsg_BossKilled::gametime() const {
  // @@protoc_insertion_point(field_get:CCitadelUserMsg_BossKilled.gametime)
  return _internal_gametime();
}
inline void CCitadelUserMsg_BossKilled::_internal_set_gametime(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.gametime_ = value;
}
inline void CCitadelUserMsg_BossKilled::set_gametime(float value) {
  _internal_set_gametime(value);
  // @@protoc_insertion_point(field_set:CCitadelUserMsg_BossKilled.gametime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CCitadelUserMsg_AbilitiesChanged_Change> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CCitadelUserMsg_AbilitiesChanged_Change>() {
  return ::CCitadelUserMsg_AbilitiesChanged_Change_descriptor();
}
template <> struct is_proto_enum< ::CitadelUserMessageIds> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CitadelUserMessageIds>() {
  return ::CitadelUserMessageIds_descriptor();
}
template <> struct is_proto_enum< ::CitadelEntityMessageIds> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CitadelEntityMessageIds>() {
  return ::CitadelEntityMessageIds_descriptor();
}
template <> struct is_proto_enum< ::ChatMsgPingMarkerInfo> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ChatMsgPingMarkerInfo>() {
  return ::ChatMsgPingMarkerInfo_descriptor();
}
template <> struct is_proto_enum< ::CameraOperation> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CameraOperation>() {
  return ::CameraOperation_descriptor();
}
template <> struct is_proto_enum< ::CameraParam> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CameraParam>() {
  return ::CameraParam_descriptor();
}
template <> struct is_proto_enum< ::CameraAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CameraAction>() {
  return ::CameraAction_descriptor();
}
template <> struct is_proto_enum< ::ECitadelChatMessage> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelChatMessage>() {
  return ::ECitadelChatMessage_descriptor();
}
template <> struct is_proto_enum< ::PostProcessingGameStates> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PostProcessingGameStates>() {
  return ::PostProcessingGameStates_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_citadel_5fusermessages_2eproto
