// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: citadel_gcmessages_common.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_citadel_5fgcmessages_5fcommon_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_citadel_5fgcmessages_5fcommon_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "gcsdk_gcmessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_citadel_5fgcmessages_5fcommon_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_citadel_5fgcmessages_5fcommon_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_citadel_5fgcmessages_5fcommon_2eproto;
class CLobbyData_PostMatchSurvey;
struct CLobbyData_PostMatchSurveyDefaultTypeInternal;
extern CLobbyData_PostMatchSurveyDefaultTypeInternal _CLobbyData_PostMatchSurvey_default_instance_;
class CLobbyData_PostMatchSurvey_PlayerSurvey;
struct CLobbyData_PostMatchSurvey_PlayerSurveyDefaultTypeInternal;
extern CLobbyData_PostMatchSurvey_PlayerSurveyDefaultTypeInternal _CLobbyData_PostMatchSurvey_PlayerSurvey_default_instance_;
class CMsgAccountBookStats;
struct CMsgAccountBookStatsDefaultTypeInternal;
extern CMsgAccountBookStatsDefaultTypeInternal _CMsgAccountBookStats_default_instance_;
class CMsgAccountHeroStats;
struct CMsgAccountHeroStatsDefaultTypeInternal;
extern CMsgAccountHeroStatsDefaultTypeInternal _CMsgAccountHeroStats_default_instance_;
class CMsgAccountStats;
struct CMsgAccountStatsDefaultTypeInternal;
extern CMsgAccountStatsDefaultTypeInternal _CMsgAccountStats_default_instance_;
class CMsgAnyToGCReportAsserts;
struct CMsgAnyToGCReportAssertsDefaultTypeInternal;
extern CMsgAnyToGCReportAssertsDefaultTypeInternal _CMsgAnyToGCReportAsserts_default_instance_;
class CMsgAnyToGCReportAssertsResponse;
struct CMsgAnyToGCReportAssertsResponseDefaultTypeInternal;
extern CMsgAnyToGCReportAssertsResponseDefaultTypeInternal _CMsgAnyToGCReportAssertsResponse_default_instance_;
class CMsgAnyToGCReportAsserts_TrackedAssert;
struct CMsgAnyToGCReportAsserts_TrackedAssertDefaultTypeInternal;
extern CMsgAnyToGCReportAsserts_TrackedAssertDefaultTypeInternal _CMsgAnyToGCReportAsserts_TrackedAssert_default_instance_;
class CMsgHeroSelectionMatchInfo;
struct CMsgHeroSelectionMatchInfoDefaultTypeInternal;
extern CMsgHeroSelectionMatchInfoDefaultTypeInternal _CMsgHeroSelectionMatchInfo_default_instance_;
class CMsgHeroSelectionMatchInfo_Hero;
struct CMsgHeroSelectionMatchInfo_HeroDefaultTypeInternal;
extern CMsgHeroSelectionMatchInfo_HeroDefaultTypeInternal _CMsgHeroSelectionMatchInfo_Hero_default_instance_;
class CMsgMapLine;
struct CMsgMapLineDefaultTypeInternal;
extern CMsgMapLineDefaultTypeInternal _CMsgMapLine_default_instance_;
class CMsgMatchMetaData;
struct CMsgMatchMetaDataDefaultTypeInternal;
extern CMsgMatchMetaDataDefaultTypeInternal _CMsgMatchMetaData_default_instance_;
class CMsgMatchMetaDataContents;
struct CMsgMatchMetaDataContentsDefaultTypeInternal;
extern CMsgMatchMetaDataContentsDefaultTypeInternal _CMsgMatchMetaDataContents_default_instance_;
class CMsgMatchMetaDataContents_AbilityStat;
struct CMsgMatchMetaDataContents_AbilityStatDefaultTypeInternal;
extern CMsgMatchMetaDataContents_AbilityStatDefaultTypeInternal _CMsgMatchMetaDataContents_AbilityStat_default_instance_;
class CMsgMatchMetaDataContents_BookReward;
struct CMsgMatchMetaDataContents_BookRewardDefaultTypeInternal;
extern CMsgMatchMetaDataContents_BookRewardDefaultTypeInternal _CMsgMatchMetaDataContents_BookReward_default_instance_;
class CMsgMatchMetaDataContents_CustomUserStat;
struct CMsgMatchMetaDataContents_CustomUserStatDefaultTypeInternal;
extern CMsgMatchMetaDataContents_CustomUserStatDefaultTypeInternal _CMsgMatchMetaDataContents_CustomUserStat_default_instance_;
class CMsgMatchMetaDataContents_CustomUserStatInfo;
struct CMsgMatchMetaDataContents_CustomUserStatInfoDefaultTypeInternal;
extern CMsgMatchMetaDataContents_CustomUserStatInfoDefaultTypeInternal _CMsgMatchMetaDataContents_CustomUserStatInfo_default_instance_;
class CMsgMatchMetaDataContents_Deaths;
struct CMsgMatchMetaDataContents_DeathsDefaultTypeInternal;
extern CMsgMatchMetaDataContents_DeathsDefaultTypeInternal _CMsgMatchMetaDataContents_Deaths_default_instance_;
class CMsgMatchMetaDataContents_GoldSource;
struct CMsgMatchMetaDataContents_GoldSourceDefaultTypeInternal;
extern CMsgMatchMetaDataContents_GoldSourceDefaultTypeInternal _CMsgMatchMetaDataContents_GoldSource_default_instance_;
class CMsgMatchMetaDataContents_Items;
struct CMsgMatchMetaDataContents_ItemsDefaultTypeInternal;
extern CMsgMatchMetaDataContents_ItemsDefaultTypeInternal _CMsgMatchMetaDataContents_Items_default_instance_;
class CMsgMatchMetaDataContents_MatchInfo;
struct CMsgMatchMetaDataContents_MatchInfoDefaultTypeInternal;
extern CMsgMatchMetaDataContents_MatchInfoDefaultTypeInternal _CMsgMatchMetaDataContents_MatchInfo_default_instance_;
class CMsgMatchMetaDataContents_MidBoss;
struct CMsgMatchMetaDataContents_MidBossDefaultTypeInternal;
extern CMsgMatchMetaDataContents_MidBossDefaultTypeInternal _CMsgMatchMetaDataContents_MidBoss_default_instance_;
class CMsgMatchMetaDataContents_Objective;
struct CMsgMatchMetaDataContents_ObjectiveDefaultTypeInternal;
extern CMsgMatchMetaDataContents_ObjectiveDefaultTypeInternal _CMsgMatchMetaDataContents_Objective_default_instance_;
class CMsgMatchMetaDataContents_Pause;
struct CMsgMatchMetaDataContents_PauseDefaultTypeInternal;
extern CMsgMatchMetaDataContents_PauseDefaultTypeInternal _CMsgMatchMetaDataContents_Pause_default_instance_;
class CMsgMatchMetaDataContents_Ping;
struct CMsgMatchMetaDataContents_PingDefaultTypeInternal;
extern CMsgMatchMetaDataContents_PingDefaultTypeInternal _CMsgMatchMetaDataContents_Ping_default_instance_;
class CMsgMatchMetaDataContents_PlayerStats;
struct CMsgMatchMetaDataContents_PlayerStatsDefaultTypeInternal;
extern CMsgMatchMetaDataContents_PlayerStatsDefaultTypeInternal _CMsgMatchMetaDataContents_PlayerStats_default_instance_;
class CMsgMatchMetaDataContents_Players;
struct CMsgMatchMetaDataContents_PlayersDefaultTypeInternal;
extern CMsgMatchMetaDataContents_PlayersDefaultTypeInternal _CMsgMatchMetaDataContents_Players_default_instance_;
class CMsgMatchMetaDataContents_Position;
struct CMsgMatchMetaDataContents_PositionDefaultTypeInternal;
extern CMsgMatchMetaDataContents_PositionDefaultTypeInternal _CMsgMatchMetaDataContents_Position_default_instance_;
class CMsgMatchMetaDataContents_WatchedDeathReplay;
struct CMsgMatchMetaDataContents_WatchedDeathReplayDefaultTypeInternal;
extern CMsgMatchMetaDataContents_WatchedDeathReplayDefaultTypeInternal _CMsgMatchMetaDataContents_WatchedDeathReplay_default_instance_;
class CMsgMatchPlayerDamageMatrix;
struct CMsgMatchPlayerDamageMatrixDefaultTypeInternal;
extern CMsgMatchPlayerDamageMatrixDefaultTypeInternal _CMsgMatchPlayerDamageMatrix_default_instance_;
class CMsgMatchPlayerDamageMatrix_DamageDealer;
struct CMsgMatchPlayerDamageMatrix_DamageDealerDefaultTypeInternal;
extern CMsgMatchPlayerDamageMatrix_DamageDealerDefaultTypeInternal _CMsgMatchPlayerDamageMatrix_DamageDealer_default_instance_;
class CMsgMatchPlayerDamageMatrix_DamageSource;
struct CMsgMatchPlayerDamageMatrix_DamageSourceDefaultTypeInternal;
extern CMsgMatchPlayerDamageMatrix_DamageSourceDefaultTypeInternal _CMsgMatchPlayerDamageMatrix_DamageSource_default_instance_;
class CMsgMatchPlayerDamageMatrix_DamageToPlayer;
struct CMsgMatchPlayerDamageMatrix_DamageToPlayerDefaultTypeInternal;
extern CMsgMatchPlayerDamageMatrix_DamageToPlayerDefaultTypeInternal _CMsgMatchPlayerDamageMatrix_DamageToPlayer_default_instance_;
class CMsgMatchPlayerDamageMatrix_SourceDetails;
struct CMsgMatchPlayerDamageMatrix_SourceDetailsDefaultTypeInternal;
extern CMsgMatchPlayerDamageMatrix_SourceDetailsDefaultTypeInternal _CMsgMatchPlayerDamageMatrix_SourceDetails_default_instance_;
class CMsgMatchPlayerPathsData;
struct CMsgMatchPlayerPathsDataDefaultTypeInternal;
extern CMsgMatchPlayerPathsDataDefaultTypeInternal _CMsgMatchPlayerPathsData_default_instance_;
class CMsgMatchPlayerPathsData_Path;
struct CMsgMatchPlayerPathsData_PathDefaultTypeInternal;
extern CMsgMatchPlayerPathsData_PathDefaultTypeInternal _CMsgMatchPlayerPathsData_Path_default_instance_;
class CMsgRegionPingTimesClient;
struct CMsgRegionPingTimesClientDefaultTypeInternal;
extern CMsgRegionPingTimesClientDefaultTypeInternal _CMsgRegionPingTimesClient_default_instance_;
class CMsgStartFindingMatchInfo;
struct CMsgStartFindingMatchInfoDefaultTypeInternal;
extern CMsgStartFindingMatchInfoDefaultTypeInternal _CMsgStartFindingMatchInfo_default_instance_;
class CSOCitadelLobby;
struct CSOCitadelLobbyDefaultTypeInternal;
extern CSOCitadelLobbyDefaultTypeInternal _CSOCitadelLobby_default_instance_;
class CSOCitadelParty;
struct CSOCitadelPartyDefaultTypeInternal;
extern CSOCitadelPartyDefaultTypeInternal _CSOCitadelParty_default_instance_;
class CSOCitadelParty_Invite;
struct CSOCitadelParty_InviteDefaultTypeInternal;
extern CSOCitadelParty_InviteDefaultTypeInternal _CSOCitadelParty_Invite_default_instance_;
class CSOCitadelParty_LeftMember;
struct CSOCitadelParty_LeftMemberDefaultTypeInternal;
extern CSOCitadelParty_LeftMemberDefaultTypeInternal _CSOCitadelParty_LeftMember_default_instance_;
class CSOCitadelParty_Member;
struct CSOCitadelParty_MemberDefaultTypeInternal;
extern CSOCitadelParty_MemberDefaultTypeInternal _CSOCitadelParty_Member_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CLobbyData_PostMatchSurvey* Arena::CreateMaybeMessage<::CLobbyData_PostMatchSurvey>(Arena*);
template<> ::CLobbyData_PostMatchSurvey_PlayerSurvey* Arena::CreateMaybeMessage<::CLobbyData_PostMatchSurvey_PlayerSurvey>(Arena*);
template<> ::CMsgAccountBookStats* Arena::CreateMaybeMessage<::CMsgAccountBookStats>(Arena*);
template<> ::CMsgAccountHeroStats* Arena::CreateMaybeMessage<::CMsgAccountHeroStats>(Arena*);
template<> ::CMsgAccountStats* Arena::CreateMaybeMessage<::CMsgAccountStats>(Arena*);
template<> ::CMsgAnyToGCReportAsserts* Arena::CreateMaybeMessage<::CMsgAnyToGCReportAsserts>(Arena*);
template<> ::CMsgAnyToGCReportAssertsResponse* Arena::CreateMaybeMessage<::CMsgAnyToGCReportAssertsResponse>(Arena*);
template<> ::CMsgAnyToGCReportAsserts_TrackedAssert* Arena::CreateMaybeMessage<::CMsgAnyToGCReportAsserts_TrackedAssert>(Arena*);
template<> ::CMsgHeroSelectionMatchInfo* Arena::CreateMaybeMessage<::CMsgHeroSelectionMatchInfo>(Arena*);
template<> ::CMsgHeroSelectionMatchInfo_Hero* Arena::CreateMaybeMessage<::CMsgHeroSelectionMatchInfo_Hero>(Arena*);
template<> ::CMsgMapLine* Arena::CreateMaybeMessage<::CMsgMapLine>(Arena*);
template<> ::CMsgMatchMetaData* Arena::CreateMaybeMessage<::CMsgMatchMetaData>(Arena*);
template<> ::CMsgMatchMetaDataContents* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents>(Arena*);
template<> ::CMsgMatchMetaDataContents_AbilityStat* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_AbilityStat>(Arena*);
template<> ::CMsgMatchMetaDataContents_BookReward* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_BookReward>(Arena*);
template<> ::CMsgMatchMetaDataContents_CustomUserStat* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_CustomUserStat>(Arena*);
template<> ::CMsgMatchMetaDataContents_CustomUserStatInfo* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_CustomUserStatInfo>(Arena*);
template<> ::CMsgMatchMetaDataContents_Deaths* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_Deaths>(Arena*);
template<> ::CMsgMatchMetaDataContents_GoldSource* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_GoldSource>(Arena*);
template<> ::CMsgMatchMetaDataContents_Items* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_Items>(Arena*);
template<> ::CMsgMatchMetaDataContents_MatchInfo* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_MatchInfo>(Arena*);
template<> ::CMsgMatchMetaDataContents_MidBoss* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_MidBoss>(Arena*);
template<> ::CMsgMatchMetaDataContents_Objective* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_Objective>(Arena*);
template<> ::CMsgMatchMetaDataContents_Pause* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_Pause>(Arena*);
template<> ::CMsgMatchMetaDataContents_Ping* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_Ping>(Arena*);
template<> ::CMsgMatchMetaDataContents_PlayerStats* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_PlayerStats>(Arena*);
template<> ::CMsgMatchMetaDataContents_Players* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_Players>(Arena*);
template<> ::CMsgMatchMetaDataContents_Position* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_Position>(Arena*);
template<> ::CMsgMatchMetaDataContents_WatchedDeathReplay* Arena::CreateMaybeMessage<::CMsgMatchMetaDataContents_WatchedDeathReplay>(Arena*);
template<> ::CMsgMatchPlayerDamageMatrix* Arena::CreateMaybeMessage<::CMsgMatchPlayerDamageMatrix>(Arena*);
template<> ::CMsgMatchPlayerDamageMatrix_DamageDealer* Arena::CreateMaybeMessage<::CMsgMatchPlayerDamageMatrix_DamageDealer>(Arena*);
template<> ::CMsgMatchPlayerDamageMatrix_DamageSource* Arena::CreateMaybeMessage<::CMsgMatchPlayerDamageMatrix_DamageSource>(Arena*);
template<> ::CMsgMatchPlayerDamageMatrix_DamageToPlayer* Arena::CreateMaybeMessage<::CMsgMatchPlayerDamageMatrix_DamageToPlayer>(Arena*);
template<> ::CMsgMatchPlayerDamageMatrix_SourceDetails* Arena::CreateMaybeMessage<::CMsgMatchPlayerDamageMatrix_SourceDetails>(Arena*);
template<> ::CMsgMatchPlayerPathsData* Arena::CreateMaybeMessage<::CMsgMatchPlayerPathsData>(Arena*);
template<> ::CMsgMatchPlayerPathsData_Path* Arena::CreateMaybeMessage<::CMsgMatchPlayerPathsData_Path>(Arena*);
template<> ::CMsgRegionPingTimesClient* Arena::CreateMaybeMessage<::CMsgRegionPingTimesClient>(Arena*);
template<> ::CMsgStartFindingMatchInfo* Arena::CreateMaybeMessage<::CMsgStartFindingMatchInfo>(Arena*);
template<> ::CSOCitadelLobby* Arena::CreateMaybeMessage<::CSOCitadelLobby>(Arena*);
template<> ::CSOCitadelParty* Arena::CreateMaybeMessage<::CSOCitadelParty>(Arena*);
template<> ::CSOCitadelParty_Invite* Arena::CreateMaybeMessage<::CSOCitadelParty_Invite>(Arena*);
template<> ::CSOCitadelParty_LeftMember* Arena::CreateMaybeMessage<::CSOCitadelParty_LeftMember>(Arena*);
template<> ::CSOCitadelParty_Member* Arena::CreateMaybeMessage<::CSOCitadelParty_Member>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum CSOCitadelParty_EMemberRights : int {
  CSOCitadelParty_EMemberRights_k_eMemberRights_Admin = 1,
  CSOCitadelParty_EMemberRights_k_eMemberRights_Creator = 2
};
bool CSOCitadelParty_EMemberRights_IsValid(int value);
constexpr CSOCitadelParty_EMemberRights CSOCitadelParty_EMemberRights_EMemberRights_MIN = CSOCitadelParty_EMemberRights_k_eMemberRights_Admin;
constexpr CSOCitadelParty_EMemberRights CSOCitadelParty_EMemberRights_EMemberRights_MAX = CSOCitadelParty_EMemberRights_k_eMemberRights_Creator;
constexpr int CSOCitadelParty_EMemberRights_EMemberRights_ARRAYSIZE = CSOCitadelParty_EMemberRights_EMemberRights_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CSOCitadelParty_EMemberRights_descriptor();
template<typename T>
inline const std::string& CSOCitadelParty_EMemberRights_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CSOCitadelParty_EMemberRights>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CSOCitadelParty_EMemberRights_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CSOCitadelParty_EMemberRights_descriptor(), enum_t_value);
}
inline bool CSOCitadelParty_EMemberRights_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CSOCitadelParty_EMemberRights* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CSOCitadelParty_EMemberRights>(
    CSOCitadelParty_EMemberRights_descriptor(), name, value);
}
enum CSOCitadelParty_EPlayerType : int {
  CSOCitadelParty_EPlayerType_k_ePlayerType_Player = 0,
  CSOCitadelParty_EPlayerType_k_ePlayerType_Spectator = 1
};
bool CSOCitadelParty_EPlayerType_IsValid(int value);
constexpr CSOCitadelParty_EPlayerType CSOCitadelParty_EPlayerType_EPlayerType_MIN = CSOCitadelParty_EPlayerType_k_ePlayerType_Player;
constexpr CSOCitadelParty_EPlayerType CSOCitadelParty_EPlayerType_EPlayerType_MAX = CSOCitadelParty_EPlayerType_k_ePlayerType_Spectator;
constexpr int CSOCitadelParty_EPlayerType_EPlayerType_ARRAYSIZE = CSOCitadelParty_EPlayerType_EPlayerType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CSOCitadelParty_EPlayerType_descriptor();
template<typename T>
inline const std::string& CSOCitadelParty_EPlayerType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CSOCitadelParty_EPlayerType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CSOCitadelParty_EPlayerType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CSOCitadelParty_EPlayerType_descriptor(), enum_t_value);
}
inline bool CSOCitadelParty_EPlayerType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CSOCitadelParty_EPlayerType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CSOCitadelParty_EPlayerType>(
    CSOCitadelParty_EPlayerType_descriptor(), name, value);
}
enum CSOCitadelParty_EChatMode : int {
  CSOCitadelParty_EChatMode_k_eNone = 0,
  CSOCitadelParty_EChatMode_k_ePartyChat = 1,
  CSOCitadelParty_EChatMode_k_eTeamChat = 2
};
bool CSOCitadelParty_EChatMode_IsValid(int value);
constexpr CSOCitadelParty_EChatMode CSOCitadelParty_EChatMode_EChatMode_MIN = CSOCitadelParty_EChatMode_k_eNone;
constexpr CSOCitadelParty_EChatMode CSOCitadelParty_EChatMode_EChatMode_MAX = CSOCitadelParty_EChatMode_k_eTeamChat;
constexpr int CSOCitadelParty_EChatMode_EChatMode_ARRAYSIZE = CSOCitadelParty_EChatMode_EChatMode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CSOCitadelParty_EChatMode_descriptor();
template<typename T>
inline const std::string& CSOCitadelParty_EChatMode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CSOCitadelParty_EChatMode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CSOCitadelParty_EChatMode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CSOCitadelParty_EChatMode_descriptor(), enum_t_value);
}
inline bool CSOCitadelParty_EChatMode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CSOCitadelParty_EChatMode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CSOCitadelParty_EChatMode>(
    CSOCitadelParty_EChatMode_descriptor(), name, value);
}
enum CMsgMatchPlayerDamageMatrix_EStatType : int {
  CMsgMatchPlayerDamageMatrix_EStatType_k_eType_Damage = 0,
  CMsgMatchPlayerDamageMatrix_EStatType_k_eType_Healing = 1,
  CMsgMatchPlayerDamageMatrix_EStatType_k_eType_HealPrevented = 2,
  CMsgMatchPlayerDamageMatrix_EStatType_k_eType_Mitigated = 3,
  CMsgMatchPlayerDamageMatrix_EStatType_k_eType_LethalDamage = 4
};
bool CMsgMatchPlayerDamageMatrix_EStatType_IsValid(int value);
constexpr CMsgMatchPlayerDamageMatrix_EStatType CMsgMatchPlayerDamageMatrix_EStatType_EStatType_MIN = CMsgMatchPlayerDamageMatrix_EStatType_k_eType_Damage;
constexpr CMsgMatchPlayerDamageMatrix_EStatType CMsgMatchPlayerDamageMatrix_EStatType_EStatType_MAX = CMsgMatchPlayerDamageMatrix_EStatType_k_eType_LethalDamage;
constexpr int CMsgMatchPlayerDamageMatrix_EStatType_EStatType_ARRAYSIZE = CMsgMatchPlayerDamageMatrix_EStatType_EStatType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgMatchPlayerDamageMatrix_EStatType_descriptor();
template<typename T>
inline const std::string& CMsgMatchPlayerDamageMatrix_EStatType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgMatchPlayerDamageMatrix_EStatType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgMatchPlayerDamageMatrix_EStatType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgMatchPlayerDamageMatrix_EStatType_descriptor(), enum_t_value);
}
inline bool CMsgMatchPlayerDamageMatrix_EStatType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgMatchPlayerDamageMatrix_EStatType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgMatchPlayerDamageMatrix_EStatType>(
    CMsgMatchPlayerDamageMatrix_EStatType_descriptor(), name, value);
}
enum CMsgMatchMetaDataContents_EMatchOutcome : int {
  CMsgMatchMetaDataContents_EMatchOutcome_k_eOutcome_TeamWin = 0,
  CMsgMatchMetaDataContents_EMatchOutcome_k_eOutcome_Error = 1
};
bool CMsgMatchMetaDataContents_EMatchOutcome_IsValid(int value);
constexpr CMsgMatchMetaDataContents_EMatchOutcome CMsgMatchMetaDataContents_EMatchOutcome_EMatchOutcome_MIN = CMsgMatchMetaDataContents_EMatchOutcome_k_eOutcome_TeamWin;
constexpr CMsgMatchMetaDataContents_EMatchOutcome CMsgMatchMetaDataContents_EMatchOutcome_EMatchOutcome_MAX = CMsgMatchMetaDataContents_EMatchOutcome_k_eOutcome_Error;
constexpr int CMsgMatchMetaDataContents_EMatchOutcome_EMatchOutcome_ARRAYSIZE = CMsgMatchMetaDataContents_EMatchOutcome_EMatchOutcome_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgMatchMetaDataContents_EMatchOutcome_descriptor();
template<typename T>
inline const std::string& CMsgMatchMetaDataContents_EMatchOutcome_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgMatchMetaDataContents_EMatchOutcome>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgMatchMetaDataContents_EMatchOutcome_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgMatchMetaDataContents_EMatchOutcome_descriptor(), enum_t_value);
}
inline bool CMsgMatchMetaDataContents_EMatchOutcome_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgMatchMetaDataContents_EMatchOutcome* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgMatchMetaDataContents_EMatchOutcome>(
    CMsgMatchMetaDataContents_EMatchOutcome_descriptor(), name, value);
}
enum CMsgMatchMetaDataContents_EGoldSource : int {
  CMsgMatchMetaDataContents_EGoldSource_k_ePlayers = 1,
  CMsgMatchMetaDataContents_EGoldSource_k_eLaneCreeps = 2,
  CMsgMatchMetaDataContents_EGoldSource_k_eNeutrals = 3,
  CMsgMatchMetaDataContents_EGoldSource_k_eBosses = 4,
  CMsgMatchMetaDataContents_EGoldSource_k_eTreasure = 5,
  CMsgMatchMetaDataContents_EGoldSource_k_eAssists = 6,
  CMsgMatchMetaDataContents_EGoldSource_k_eDenies = 7
};
bool CMsgMatchMetaDataContents_EGoldSource_IsValid(int value);
constexpr CMsgMatchMetaDataContents_EGoldSource CMsgMatchMetaDataContents_EGoldSource_EGoldSource_MIN = CMsgMatchMetaDataContents_EGoldSource_k_ePlayers;
constexpr CMsgMatchMetaDataContents_EGoldSource CMsgMatchMetaDataContents_EGoldSource_EGoldSource_MAX = CMsgMatchMetaDataContents_EGoldSource_k_eDenies;
constexpr int CMsgMatchMetaDataContents_EGoldSource_EGoldSource_ARRAYSIZE = CMsgMatchMetaDataContents_EGoldSource_EGoldSource_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgMatchMetaDataContents_EGoldSource_descriptor();
template<typename T>
inline const std::string& CMsgMatchMetaDataContents_EGoldSource_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgMatchMetaDataContents_EGoldSource>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgMatchMetaDataContents_EGoldSource_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgMatchMetaDataContents_EGoldSource_descriptor(), enum_t_value);
}
inline bool CMsgMatchMetaDataContents_EGoldSource_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgMatchMetaDataContents_EGoldSource* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgMatchMetaDataContents_EGoldSource>(
    CMsgMatchMetaDataContents_EGoldSource_descriptor(), name, value);
}
enum CMsgLaneColor : int {
  k_ELaneColor_Invalid = 0,
  k_ELaneColor_Yellow = 1,
  k_ELaneColor_Orange = 3,
  k_ELaneColor_Blue = 4,
  k_ELaneColor_Purple = 6
};
bool CMsgLaneColor_IsValid(int value);
constexpr CMsgLaneColor CMsgLaneColor_MIN = k_ELaneColor_Invalid;
constexpr CMsgLaneColor CMsgLaneColor_MAX = k_ELaneColor_Purple;
constexpr int CMsgLaneColor_ARRAYSIZE = CMsgLaneColor_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgLaneColor_descriptor();
template<typename T>
inline const std::string& CMsgLaneColor_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgLaneColor>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgLaneColor_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgLaneColor_descriptor(), enum_t_value);
}
inline bool CMsgLaneColor_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgLaneColor* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgLaneColor>(
    CMsgLaneColor_descriptor(), name, value);
}
enum EGCCitadelCommonMessages : int {
  k_EMsgAnyToGCReportAsserts = 7000,
  k_EMsgAnyToGCReportAssertsResponse = 7001
};
bool EGCCitadelCommonMessages_IsValid(int value);
constexpr EGCCitadelCommonMessages EGCCitadelCommonMessages_MIN = k_EMsgAnyToGCReportAsserts;
constexpr EGCCitadelCommonMessages EGCCitadelCommonMessages_MAX = k_EMsgAnyToGCReportAssertsResponse;
constexpr int EGCCitadelCommonMessages_ARRAYSIZE = EGCCitadelCommonMessages_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCCitadelCommonMessages_descriptor();
template<typename T>
inline const std::string& EGCCitadelCommonMessages_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGCCitadelCommonMessages>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGCCitadelCommonMessages_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGCCitadelCommonMessages_descriptor(), enum_t_value);
}
inline bool EGCCitadelCommonMessages_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGCCitadelCommonMessages* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGCCitadelCommonMessages>(
    EGCCitadelCommonMessages_descriptor(), name, value);
}
enum ECitadelMatchMode : int {
  k_ECitadelMatchMode_Invalid = 0,
  k_ECitadelMatchMode_Unranked = 1,
  k_ECitadelMatchMode_PrivateLobby = 2,
  k_ECitadelMatchMode_CoopBot = 3,
  k_ECitadelMatchMode_Ranked = 4,
  k_ECitadelMatchMode_ServerTest = 5,
  k_ECitadelMatchMode_Tutorial = 6
};
bool ECitadelMatchMode_IsValid(int value);
constexpr ECitadelMatchMode ECitadelMatchMode_MIN = k_ECitadelMatchMode_Invalid;
constexpr ECitadelMatchMode ECitadelMatchMode_MAX = k_ECitadelMatchMode_Tutorial;
constexpr int ECitadelMatchMode_ARRAYSIZE = ECitadelMatchMode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelMatchMode_descriptor();
template<typename T>
inline const std::string& ECitadelMatchMode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelMatchMode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelMatchMode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelMatchMode_descriptor(), enum_t_value);
}
inline bool ECitadelMatchMode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelMatchMode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelMatchMode>(
    ECitadelMatchMode_descriptor(), name, value);
}
enum ECitadelLobbyTeam : int {
  k_ECitadelLobbyTeam_Team0 = 0,
  k_ECitadelLobbyTeam_Team1 = 1,
  k_ECitadelLobbyTeam_Spectator = 16
};
bool ECitadelLobbyTeam_IsValid(int value);
constexpr ECitadelLobbyTeam ECitadelLobbyTeam_MIN = k_ECitadelLobbyTeam_Team0;
constexpr ECitadelLobbyTeam ECitadelLobbyTeam_MAX = k_ECitadelLobbyTeam_Spectator;
constexpr int ECitadelLobbyTeam_ARRAYSIZE = ECitadelLobbyTeam_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelLobbyTeam_descriptor();
template<typename T>
inline const std::string& ECitadelLobbyTeam_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelLobbyTeam>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelLobbyTeam_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelLobbyTeam_descriptor(), enum_t_value);
}
inline bool ECitadelLobbyTeam_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelLobbyTeam* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelLobbyTeam>(
    ECitadelLobbyTeam_descriptor(), name, value);
}
enum ECitadelAccountStatMedal : int {
  k_eNone = 0,
  k_eBronze = 1,
  k_eSilver = 2,
  k_eGold = 3
};
bool ECitadelAccountStatMedal_IsValid(int value);
constexpr ECitadelAccountStatMedal ECitadelAccountStatMedal_MIN = k_eNone;
constexpr ECitadelAccountStatMedal ECitadelAccountStatMedal_MAX = k_eGold;
constexpr int ECitadelAccountStatMedal_ARRAYSIZE = ECitadelAccountStatMedal_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelAccountStatMedal_descriptor();
template<typename T>
inline const std::string& ECitadelAccountStatMedal_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelAccountStatMedal>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelAccountStatMedal_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelAccountStatMedal_descriptor(), enum_t_value);
}
inline bool ECitadelAccountStatMedal_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelAccountStatMedal* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelAccountStatMedal>(
    ECitadelAccountStatMedal_descriptor(), name, value);
}
enum ECitadelObjective : int {
  k_eCitadelObjective_Team0_Core = 0,
  k_eCitadelObjective_Team0_Tier1_Lane1 = 1,
  k_eCitadelObjective_Team0_Tier1_Lane2 = 2,
  k_eCitadelObjective_Team0_Tier1_Lane3 = 3,
  k_eCitadelObjective_Team0_Tier1_Lane4 = 4,
  k_eCitadelObjective_Team0_Tier2_Lane1 = 5,
  k_eCitadelObjective_Team0_Tier2_Lane2 = 6,
  k_eCitadelObjective_Team0_Tier2_Lane3 = 7,
  k_eCitadelObjective_Team0_Tier2_Lane4 = 8,
  k_eCitadelObjective_Team0_Titan = 9,
  k_eCitadelObjective_Team0_TitanShieldGenerator_1 = 10,
  k_eCitadelObjective_Team0_TitanShieldGenerator_2 = 11,
  k_eCitadelObjective_Team0_BarrackBoss_Lane1 = 12,
  k_eCitadelObjective_Team0_BarrackBoss_Lane2 = 13,
  k_eCitadelObjective_Team0_BarrackBoss_Lane3 = 14,
  k_eCitadelObjective_Team0_BarrackBoss_Lane4 = 15,
  k_eCitadelObjective_Team1_Core = 16,
  k_eCitadelObjective_Team1_Tier1_Lane1 = 17,
  k_eCitadelObjective_Team1_Tier1_Lane2 = 18,
  k_eCitadelObjective_Team1_Tier1_Lane3 = 19,
  k_eCitadelObjective_Team1_Tier1_Lane4 = 20,
  k_eCitadelObjective_Team1_Tier2_Lane1 = 21,
  k_eCitadelObjective_Team1_Tier2_Lane2 = 22,
  k_eCitadelObjective_Team1_Tier2_Lane3 = 23,
  k_eCitadelObjective_Team1_Tier2_Lane4 = 24,
  k_eCitadelObjective_Team1_Titan = 25,
  k_eCitadelObjective_Team1_TitanShieldGenerator_1 = 26,
  k_eCitadelObjective_Team1_TitanShieldGenerator_2 = 27,
  k_eCitadelObjective_Team1_BarrackBoss_Lane1 = 28,
  k_eCitadelObjective_Team1_BarrackBoss_Lane2 = 29,
  k_eCitadelObjective_Team1_BarrackBoss_Lane3 = 30,
  k_eCitadelObjective_Team1_BarrackBoss_Lane4 = 31,
  k_eCitadelObjective_Neutral_Mid = 32
};
bool ECitadelObjective_IsValid(int value);
constexpr ECitadelObjective ECitadelObjective_MIN = k_eCitadelObjective_Team0_Core;
constexpr ECitadelObjective ECitadelObjective_MAX = k_eCitadelObjective_Neutral_Mid;
constexpr int ECitadelObjective_ARRAYSIZE = ECitadelObjective_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelObjective_descriptor();
template<typename T>
inline const std::string& ECitadelObjective_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelObjective>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelObjective_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelObjective_descriptor(), enum_t_value);
}
inline bool ECitadelObjective_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelObjective* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelObjective>(
    ECitadelObjective_descriptor(), name, value);
}
enum ECitadelTeamObjective : int {
  k_eCitadelTeamObjective_Core = 0,
  k_eCitadelTeamObjective_Tier1_Lane1 = 1,
  k_eCitadelTeamObjective_Tier1_Lane2 = 2,
  k_eCitadelTeamObjective_Tier1_Lane3 = 3,
  k_eCitadelTeamObjective_Tier1_Lane4 = 4,
  k_eCitadelTeamObjective_Tier2_Lane1 = 5,
  k_eCitadelTeamObjective_Tier2_Lane2 = 6,
  k_eCitadelTeamObjective_Tier2_Lane3 = 7,
  k_eCitadelTeamObjective_Tier2_Lane4 = 8,
  k_eCitadelTeamObjective_Titan = 9,
  k_eCitadelTeamObjective_TitanShieldGenerator_1 = 10,
  k_eCitadelTeamObjective_TitanShieldGenerator_2 = 11,
  k_eCitadelTeamObjective_BarrackBoss_Lane1 = 12,
  k_eCitadelTeamObjective_BarrackBoss_Lane2 = 13,
  k_eCitadelTeamObjective_BarrackBoss_Lane3 = 14,
  k_eCitadelTeamObjective_BarrackBoss_Lane4 = 15
};
bool ECitadelTeamObjective_IsValid(int value);
constexpr ECitadelTeamObjective ECitadelTeamObjective_MIN = k_eCitadelTeamObjective_Core;
constexpr ECitadelTeamObjective ECitadelTeamObjective_MAX = k_eCitadelTeamObjective_BarrackBoss_Lane4;
constexpr int ECitadelTeamObjective_ARRAYSIZE = ECitadelTeamObjective_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelTeamObjective_descriptor();
template<typename T>
inline const std::string& ECitadelTeamObjective_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelTeamObjective>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelTeamObjective_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelTeamObjective_descriptor(), enum_t_value);
}
inline bool ECitadelTeamObjective_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelTeamObjective* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelTeamObjective>(
    ECitadelTeamObjective_descriptor(), name, value);
}
enum ECitadelBotDifficulty : int {
  k_ECitadelBotDifficulty_None = 0,
  k_ECitadelBotDifficulty_Easy = 1,
  k_ECitadelBotDifficulty_Medium = 2,
  k_ECitadelBotDifficulty_Hard = 3,
  k_ECitadelBotDifficulty_Nightmare = 4,
  k_ECitadelBotDifficulty_Guided = 5
};
bool ECitadelBotDifficulty_IsValid(int value);
constexpr ECitadelBotDifficulty ECitadelBotDifficulty_MIN = k_ECitadelBotDifficulty_None;
constexpr ECitadelBotDifficulty ECitadelBotDifficulty_MAX = k_ECitadelBotDifficulty_Guided;
constexpr int ECitadelBotDifficulty_ARRAYSIZE = ECitadelBotDifficulty_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelBotDifficulty_descriptor();
template<typename T>
inline const std::string& ECitadelBotDifficulty_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelBotDifficulty>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelBotDifficulty_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelBotDifficulty_descriptor(), enum_t_value);
}
inline bool ECitadelBotDifficulty_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelBotDifficulty* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelBotDifficulty>(
    ECitadelBotDifficulty_descriptor(), name, value);
}
enum ECitadelRegionMode : int {
  k_ECitadelRegionMode_ROW = 0,
  k_ECitadelRegionMode_Europe = 1,
  k_ECitadelRegionMode_SEAsia = 2,
  k_ECitadelRegionMode_SAmerica = 3,
  k_ECitadelRegionMode_Russia = 4,
  k_ECitadelRegionMode_Oceania = 5
};
bool ECitadelRegionMode_IsValid(int value);
constexpr ECitadelRegionMode ECitadelRegionMode_MIN = k_ECitadelRegionMode_ROW;
constexpr ECitadelRegionMode ECitadelRegionMode_MAX = k_ECitadelRegionMode_Oceania;
constexpr int ECitadelRegionMode_ARRAYSIZE = ECitadelRegionMode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelRegionMode_descriptor();
template<typename T>
inline const std::string& ECitadelRegionMode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelRegionMode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelRegionMode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelRegionMode_descriptor(), enum_t_value);
}
inline bool ECitadelRegionMode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelRegionMode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelRegionMode>(
    ECitadelRegionMode_descriptor(), name, value);
}
enum ECitadelGameMode : int {
  k_ECitadelGameMode_Invalid = 0,
  k_ECitadelGameMode_Normal = 1,
  k_ECitadelGameMode_1v1Test = 2,
  k_ECitadelGameMode_Sandbox = 3
};
bool ECitadelGameMode_IsValid(int value);
constexpr ECitadelGameMode ECitadelGameMode_MIN = k_ECitadelGameMode_Invalid;
constexpr ECitadelGameMode ECitadelGameMode_MAX = k_ECitadelGameMode_Sandbox;
constexpr int ECitadelGameMode_ARRAYSIZE = ECitadelGameMode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECitadelGameMode_descriptor();
template<typename T>
inline const std::string& ECitadelGameMode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECitadelGameMode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECitadelGameMode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECitadelGameMode_descriptor(), enum_t_value);
}
inline bool ECitadelGameMode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECitadelGameMode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECitadelGameMode>(
    ECitadelGameMode_descriptor(), name, value);
}
enum ELobbyServerState : int {
  k_eLobbyServerState_Assign = 0,
  k_eLobbyServerState_InGame = 1,
  k_eLobbyServerState_PostMatch = 2,
  k_eLobbyServerState_SignedOut = 3,
  k_eLobbyServerState_Abandoned = 4
};
bool ELobbyServerState_IsValid(int value);
constexpr ELobbyServerState ELobbyServerState_MIN = k_eLobbyServerState_Assign;
constexpr ELobbyServerState ELobbyServerState_MAX = k_eLobbyServerState_Abandoned;
constexpr int ELobbyServerState_ARRAYSIZE = ELobbyServerState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ELobbyServerState_descriptor();
template<typename T>
inline const std::string& ELobbyServerState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ELobbyServerState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ELobbyServerState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ELobbyServerState_descriptor(), enum_t_value);
}
inline bool ELobbyServerState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ELobbyServerState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ELobbyServerState>(
    ELobbyServerState_descriptor(), name, value);
}
// ===================================================================

class CSOCitadelLobby /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOCitadelLobby) */ {
 public:
  inline CSOCitadelLobby() : CSOCitadelLobby(nullptr) {}
  ~CSOCitadelLobby() override;
  explicit PROTOBUF_CONSTEXPR CSOCitadelLobby(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOCitadelLobby(const CSOCitadelLobby& from);
  CSOCitadelLobby(CSOCitadelLobby&& from) noexcept
    : CSOCitadelLobby() {
    *this = ::std::move(from);
  }

  inline CSOCitadelLobby& operator=(const CSOCitadelLobby& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOCitadelLobby& operator=(CSOCitadelLobby&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOCitadelLobby& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOCitadelLobby* internal_default_instance() {
    return reinterpret_cast<const CSOCitadelLobby*>(
               &_CSOCitadelLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CSOCitadelLobby& a, CSOCitadelLobby& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOCitadelLobby* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOCitadelLobby* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOCitadelLobby* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CSOCitadelLobby>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOCitadelLobby& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOCitadelLobby& from) {
    CSOCitadelLobby::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CSOCitadelLobby* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOCitadelLobby";
  }
  protected:
  explicit CSOCitadelLobby(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExtraMessagesFieldNumber = 6,
    kSdrAddressFieldNumber = 12,
    kLobbyIdFieldNumber = 1,
    kMatchIdFieldNumber = 2,
    kMatchModeFieldNumber = 3,
    kGameModeFieldNumber = 4,
    kCompatibilityVersionFieldNumber = 5,
    kServerStateFieldNumber = 8,
    kServerSteamIdFieldNumber = 7,
    kUdpConnectIpFieldNumber = 9,
    kUdpConnectPortFieldNumber = 10,
    kServerVersionFieldNumber = 13,
    kSafeToAbandonFieldNumber = 14,
  };
  // repeated .CExtraMsgBlock extra_messages = 6;
  int extra_messages_size() const;
  private:
  int _internal_extra_messages_size() const;
  public:
  void clear_extra_messages();
  ::CExtraMsgBlock* mutable_extra_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >*
      mutable_extra_messages();
  private:
  const ::CExtraMsgBlock& _internal_extra_messages(int index) const;
  ::CExtraMsgBlock* _internal_add_extra_messages();
  public:
  const ::CExtraMsgBlock& extra_messages(int index) const;
  ::CExtraMsgBlock* add_extra_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >&
      extra_messages() const;

  // optional bytes sdr_address = 12;
  bool has_sdr_address() const;
  private:
  bool _internal_has_sdr_address() const;
  public:
  void clear_sdr_address();
  const std::string& sdr_address() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sdr_address(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sdr_address();
  PROTOBUF_NODISCARD std::string* release_sdr_address();
  void set_allocated_sdr_address(std::string* sdr_address);
  private:
  const std::string& _internal_sdr_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sdr_address(const std::string& value);
  std::string* _internal_mutable_sdr_address();
  public:

  // optional uint64 lobby_id = 1;
  bool has_lobby_id() const;
  private:
  bool _internal_has_lobby_id() const;
  public:
  void clear_lobby_id();
  uint64_t lobby_id() const;
  void set_lobby_id(uint64_t value);
  private:
  uint64_t _internal_lobby_id() const;
  void _internal_set_lobby_id(uint64_t value);
  public:

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional .ECitadelMatchMode match_mode = 3 [default = k_ECitadelMatchMode_Invalid];
  bool has_match_mode() const;
  private:
  bool _internal_has_match_mode() const;
  public:
  void clear_match_mode();
  ::ECitadelMatchMode match_mode() const;
  void set_match_mode(::ECitadelMatchMode value);
  private:
  ::ECitadelMatchMode _internal_match_mode() const;
  void _internal_set_match_mode(::ECitadelMatchMode value);
  public:

  // optional .ECitadelGameMode game_mode = 4 [default = k_ECitadelGameMode_Invalid];
  bool has_game_mode() const;
  private:
  bool _internal_has_game_mode() const;
  public:
  void clear_game_mode();
  ::ECitadelGameMode game_mode() const;
  void set_game_mode(::ECitadelGameMode value);
  private:
  ::ECitadelGameMode _internal_game_mode() const;
  void _internal_set_game_mode(::ECitadelGameMode value);
  public:

  // optional uint32 compatibility_version = 5;
  bool has_compatibility_version() const;
  private:
  bool _internal_has_compatibility_version() const;
  public:
  void clear_compatibility_version();
  uint32_t compatibility_version() const;
  void set_compatibility_version(uint32_t value);
  private:
  uint32_t _internal_compatibility_version() const;
  void _internal_set_compatibility_version(uint32_t value);
  public:

  // optional .ELobbyServerState server_state = 8 [default = k_eLobbyServerState_Assign];
  bool has_server_state() const;
  private:
  bool _internal_has_server_state() const;
  public:
  void clear_server_state();
  ::ELobbyServerState server_state() const;
  void set_server_state(::ELobbyServerState value);
  private:
  ::ELobbyServerState _internal_server_state() const;
  void _internal_set_server_state(::ELobbyServerState value);
  public:

  // optional fixed64 server_steam_id = 7;
  bool has_server_steam_id() const;
  private:
  bool _internal_has_server_steam_id() const;
  public:
  void clear_server_steam_id();
  uint64_t server_steam_id() const;
  void set_server_steam_id(uint64_t value);
  private:
  uint64_t _internal_server_steam_id() const;
  void _internal_set_server_steam_id(uint64_t value);
  public:

  // optional uint32 udp_connect_ip = 9;
  bool has_udp_connect_ip() const;
  private:
  bool _internal_has_udp_connect_ip() const;
  public:
  void clear_udp_connect_ip();
  uint32_t udp_connect_ip() const;
  void set_udp_connect_ip(uint32_t value);
  private:
  uint32_t _internal_udp_connect_ip() const;
  void _internal_set_udp_connect_ip(uint32_t value);
  public:

  // optional uint32 udp_connect_port = 10;
  bool has_udp_connect_port() const;
  private:
  bool _internal_has_udp_connect_port() const;
  public:
  void clear_udp_connect_port();
  uint32_t udp_connect_port() const;
  void set_udp_connect_port(uint32_t value);
  private:
  uint32_t _internal_udp_connect_port() const;
  void _internal_set_udp_connect_port(uint32_t value);
  public:

  // optional uint32 server_version = 13;
  bool has_server_version() const;
  private:
  bool _internal_has_server_version() const;
  public:
  void clear_server_version();
  uint32_t server_version() const;
  void set_server_version(uint32_t value);
  private:
  uint32_t _internal_server_version() const;
  void _internal_set_server_version(uint32_t value);
  public:

  // optional bool safe_to_abandon = 14;
  bool has_safe_to_abandon() const;
  private:
  bool _internal_has_safe_to_abandon() const;
  public:
  void clear_safe_to_abandon();
  bool safe_to_abandon() const;
  void set_safe_to_abandon(bool value);
  private:
  bool _internal_safe_to_abandon() const;
  void _internal_set_safe_to_abandon(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CSOCitadelLobby)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock > extra_messages_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sdr_address_;
    uint64_t lobby_id_;
    uint64_t match_id_;
    int match_mode_;
    int game_mode_;
    uint32_t compatibility_version_;
    int server_state_;
    uint64_t server_steam_id_;
    uint32_t udp_connect_ip_;
    uint32_t udp_connect_port_;
    uint32_t server_version_;
    bool safe_to_abandon_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CLobbyData_PostMatchSurvey_PlayerSurvey /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CLobbyData_PostMatchSurvey.PlayerSurvey) */ {
 public:
  inline CLobbyData_PostMatchSurvey_PlayerSurvey() : CLobbyData_PostMatchSurvey_PlayerSurvey(nullptr) {}
  ~CLobbyData_PostMatchSurvey_PlayerSurvey() override;
  explicit PROTOBUF_CONSTEXPR CLobbyData_PostMatchSurvey_PlayerSurvey(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CLobbyData_PostMatchSurvey_PlayerSurvey(const CLobbyData_PostMatchSurvey_PlayerSurvey& from);
  CLobbyData_PostMatchSurvey_PlayerSurvey(CLobbyData_PostMatchSurvey_PlayerSurvey&& from) noexcept
    : CLobbyData_PostMatchSurvey_PlayerSurvey() {
    *this = ::std::move(from);
  }

  inline CLobbyData_PostMatchSurvey_PlayerSurvey& operator=(const CLobbyData_PostMatchSurvey_PlayerSurvey& from) {
    CopyFrom(from);
    return *this;
  }
  inline CLobbyData_PostMatchSurvey_PlayerSurvey& operator=(CLobbyData_PostMatchSurvey_PlayerSurvey&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CLobbyData_PostMatchSurvey_PlayerSurvey& default_instance() {
    return *internal_default_instance();
  }
  static inline const CLobbyData_PostMatchSurvey_PlayerSurvey* internal_default_instance() {
    return reinterpret_cast<const CLobbyData_PostMatchSurvey_PlayerSurvey*>(
               &_CLobbyData_PostMatchSurvey_PlayerSurvey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CLobbyData_PostMatchSurvey_PlayerSurvey& a, CLobbyData_PostMatchSurvey_PlayerSurvey& b) {
    a.Swap(&b);
  }
  inline void Swap(CLobbyData_PostMatchSurvey_PlayerSurvey* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CLobbyData_PostMatchSurvey_PlayerSurvey* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CLobbyData_PostMatchSurvey_PlayerSurvey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CLobbyData_PostMatchSurvey_PlayerSurvey>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CLobbyData_PostMatchSurvey_PlayerSurvey& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CLobbyData_PostMatchSurvey_PlayerSurvey& from) {
    CLobbyData_PostMatchSurvey_PlayerSurvey::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CLobbyData_PostMatchSurvey_PlayerSurvey* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CLobbyData_PostMatchSurvey.PlayerSurvey";
  }
  protected:
  explicit CLobbyData_PostMatchSurvey_PlayerSurvey(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kQuestionIdFieldNumber = 2,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 question_id = 2;
  bool has_question_id() const;
  private:
  bool _internal_has_question_id() const;
  public:
  void clear_question_id();
  uint32_t question_id() const;
  void set_question_id(uint32_t value);
  private:
  uint32_t _internal_question_id() const;
  void _internal_set_question_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CLobbyData_PostMatchSurvey.PlayerSurvey)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    uint32_t question_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CLobbyData_PostMatchSurvey /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CLobbyData_PostMatchSurvey) */ {
 public:
  inline CLobbyData_PostMatchSurvey() : CLobbyData_PostMatchSurvey(nullptr) {}
  ~CLobbyData_PostMatchSurvey() override;
  explicit PROTOBUF_CONSTEXPR CLobbyData_PostMatchSurvey(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CLobbyData_PostMatchSurvey(const CLobbyData_PostMatchSurvey& from);
  CLobbyData_PostMatchSurvey(CLobbyData_PostMatchSurvey&& from) noexcept
    : CLobbyData_PostMatchSurvey() {
    *this = ::std::move(from);
  }

  inline CLobbyData_PostMatchSurvey& operator=(const CLobbyData_PostMatchSurvey& from) {
    CopyFrom(from);
    return *this;
  }
  inline CLobbyData_PostMatchSurvey& operator=(CLobbyData_PostMatchSurvey&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CLobbyData_PostMatchSurvey& default_instance() {
    return *internal_default_instance();
  }
  static inline const CLobbyData_PostMatchSurvey* internal_default_instance() {
    return reinterpret_cast<const CLobbyData_PostMatchSurvey*>(
               &_CLobbyData_PostMatchSurvey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CLobbyData_PostMatchSurvey& a, CLobbyData_PostMatchSurvey& b) {
    a.Swap(&b);
  }
  inline void Swap(CLobbyData_PostMatchSurvey* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CLobbyData_PostMatchSurvey* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CLobbyData_PostMatchSurvey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CLobbyData_PostMatchSurvey>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CLobbyData_PostMatchSurvey& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CLobbyData_PostMatchSurvey& from) {
    CLobbyData_PostMatchSurvey::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CLobbyData_PostMatchSurvey* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CLobbyData_PostMatchSurvey";
  }
  protected:
  explicit CLobbyData_PostMatchSurvey(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CLobbyData_PostMatchSurvey_PlayerSurvey PlayerSurvey;

  // accessors -------------------------------------------------------

  enum : int {
    kSurveysFieldNumber = 1,
  };
  // repeated .CLobbyData_PostMatchSurvey.PlayerSurvey surveys = 1;
  int surveys_size() const;
  private:
  int _internal_surveys_size() const;
  public:
  void clear_surveys();
  ::CLobbyData_PostMatchSurvey_PlayerSurvey* mutable_surveys(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CLobbyData_PostMatchSurvey_PlayerSurvey >*
      mutable_surveys();
  private:
  const ::CLobbyData_PostMatchSurvey_PlayerSurvey& _internal_surveys(int index) const;
  ::CLobbyData_PostMatchSurvey_PlayerSurvey* _internal_add_surveys();
  public:
  const ::CLobbyData_PostMatchSurvey_PlayerSurvey& surveys(int index) const;
  ::CLobbyData_PostMatchSurvey_PlayerSurvey* add_surveys();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CLobbyData_PostMatchSurvey_PlayerSurvey >&
      surveys() const;

  // @@protoc_insertion_point(class_scope:CLobbyData_PostMatchSurvey)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CLobbyData_PostMatchSurvey_PlayerSurvey > surveys_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroSelectionMatchInfo_Hero /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgHeroSelectionMatchInfo.Hero) */ {
 public:
  inline CMsgHeroSelectionMatchInfo_Hero() : CMsgHeroSelectionMatchInfo_Hero(nullptr) {}
  ~CMsgHeroSelectionMatchInfo_Hero() override;
  explicit PROTOBUF_CONSTEXPR CMsgHeroSelectionMatchInfo_Hero(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgHeroSelectionMatchInfo_Hero(const CMsgHeroSelectionMatchInfo_Hero& from);
  CMsgHeroSelectionMatchInfo_Hero(CMsgHeroSelectionMatchInfo_Hero&& from) noexcept
    : CMsgHeroSelectionMatchInfo_Hero() {
    *this = ::std::move(from);
  }

  inline CMsgHeroSelectionMatchInfo_Hero& operator=(const CMsgHeroSelectionMatchInfo_Hero& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgHeroSelectionMatchInfo_Hero& operator=(CMsgHeroSelectionMatchInfo_Hero&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgHeroSelectionMatchInfo_Hero& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgHeroSelectionMatchInfo_Hero* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroSelectionMatchInfo_Hero*>(
               &_CMsgHeroSelectionMatchInfo_Hero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgHeroSelectionMatchInfo_Hero& a, CMsgHeroSelectionMatchInfo_Hero& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgHeroSelectionMatchInfo_Hero* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgHeroSelectionMatchInfo_Hero* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgHeroSelectionMatchInfo_Hero* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgHeroSelectionMatchInfo_Hero>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgHeroSelectionMatchInfo_Hero& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgHeroSelectionMatchInfo_Hero& from) {
    CMsgHeroSelectionMatchInfo_Hero::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgHeroSelectionMatchInfo_Hero* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgHeroSelectionMatchInfo.Hero";
  }
  protected:
  explicit CMsgHeroSelectionMatchInfo_Hero(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroIdFieldNumber = 1,
    kPriorityFieldNumber = 2,
  };
  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional uint32 priority = 2;
  bool has_priority() const;
  private:
  bool _internal_has_priority() const;
  public:
  void clear_priority();
  uint32_t priority() const;
  void set_priority(uint32_t value);
  private:
  uint32_t _internal_priority() const;
  void _internal_set_priority(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgHeroSelectionMatchInfo.Hero)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t hero_id_;
    uint32_t priority_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroSelectionMatchInfo /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgHeroSelectionMatchInfo) */ {
 public:
  inline CMsgHeroSelectionMatchInfo() : CMsgHeroSelectionMatchInfo(nullptr) {}
  ~CMsgHeroSelectionMatchInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgHeroSelectionMatchInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgHeroSelectionMatchInfo(const CMsgHeroSelectionMatchInfo& from);
  CMsgHeroSelectionMatchInfo(CMsgHeroSelectionMatchInfo&& from) noexcept
    : CMsgHeroSelectionMatchInfo() {
    *this = ::std::move(from);
  }

  inline CMsgHeroSelectionMatchInfo& operator=(const CMsgHeroSelectionMatchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgHeroSelectionMatchInfo& operator=(CMsgHeroSelectionMatchInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgHeroSelectionMatchInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgHeroSelectionMatchInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroSelectionMatchInfo*>(
               &_CMsgHeroSelectionMatchInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgHeroSelectionMatchInfo& a, CMsgHeroSelectionMatchInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgHeroSelectionMatchInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgHeroSelectionMatchInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgHeroSelectionMatchInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgHeroSelectionMatchInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgHeroSelectionMatchInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgHeroSelectionMatchInfo& from) {
    CMsgHeroSelectionMatchInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgHeroSelectionMatchInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgHeroSelectionMatchInfo";
  }
  protected:
  explicit CMsgHeroSelectionMatchInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CMsgHeroSelectionMatchInfo_Hero Hero;

  // accessors -------------------------------------------------------

  enum : int {
    kHeroSelectionsFieldNumber = 1,
  };
  // repeated .CMsgHeroSelectionMatchInfo.Hero hero_selections = 1;
  int hero_selections_size() const;
  private:
  int _internal_hero_selections_size() const;
  public:
  void clear_hero_selections();
  ::CMsgHeroSelectionMatchInfo_Hero* mutable_hero_selections(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroSelectionMatchInfo_Hero >*
      mutable_hero_selections();
  private:
  const ::CMsgHeroSelectionMatchInfo_Hero& _internal_hero_selections(int index) const;
  ::CMsgHeroSelectionMatchInfo_Hero* _internal_add_hero_selections();
  public:
  const ::CMsgHeroSelectionMatchInfo_Hero& hero_selections(int index) const;
  ::CMsgHeroSelectionMatchInfo_Hero* add_hero_selections();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroSelectionMatchInfo_Hero >&
      hero_selections() const;

  // @@protoc_insertion_point(class_scope:CMsgHeroSelectionMatchInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroSelectionMatchInfo_Hero > hero_selections_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgStartFindingMatchInfo /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgStartFindingMatchInfo) */ {
 public:
  inline CMsgStartFindingMatchInfo() : CMsgStartFindingMatchInfo(nullptr) {}
  ~CMsgStartFindingMatchInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgStartFindingMatchInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgStartFindingMatchInfo(const CMsgStartFindingMatchInfo& from);
  CMsgStartFindingMatchInfo(CMsgStartFindingMatchInfo&& from) noexcept
    : CMsgStartFindingMatchInfo() {
    *this = ::std::move(from);
  }

  inline CMsgStartFindingMatchInfo& operator=(const CMsgStartFindingMatchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgStartFindingMatchInfo& operator=(CMsgStartFindingMatchInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgStartFindingMatchInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgStartFindingMatchInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgStartFindingMatchInfo*>(
               &_CMsgStartFindingMatchInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgStartFindingMatchInfo& a, CMsgStartFindingMatchInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgStartFindingMatchInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgStartFindingMatchInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgStartFindingMatchInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgStartFindingMatchInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgStartFindingMatchInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgStartFindingMatchInfo& from) {
    CMsgStartFindingMatchInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgStartFindingMatchInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgStartFindingMatchInfo";
  }
  protected:
  explicit CMsgStartFindingMatchInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerSearchKeyFieldNumber = 1,
    kServerCommandStringFieldNumber = 2,
    kMatchModeFieldNumber = 3,
    kGameModeFieldNumber = 5,
    kSoloMatchFieldNumber = 6,
    kBotDifficultyFieldNumber = 7,
    kRegionModeFieldNumber = 8,
  };
  // optional string server_search_key = 1;
  bool has_server_search_key() const;
  private:
  bool _internal_has_server_search_key() const;
  public:
  void clear_server_search_key();
  const std::string& server_search_key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_server_search_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_server_search_key();
  PROTOBUF_NODISCARD std::string* release_server_search_key();
  void set_allocated_server_search_key(std::string* server_search_key);
  private:
  const std::string& _internal_server_search_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server_search_key(const std::string& value);
  std::string* _internal_mutable_server_search_key();
  public:

  // optional string server_command_string = 2;
  bool has_server_command_string() const;
  private:
  bool _internal_has_server_command_string() const;
  public:
  void clear_server_command_string();
  const std::string& server_command_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_server_command_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_server_command_string();
  PROTOBUF_NODISCARD std::string* release_server_command_string();
  void set_allocated_server_command_string(std::string* server_command_string);
  private:
  const std::string& _internal_server_command_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server_command_string(const std::string& value);
  std::string* _internal_mutable_server_command_string();
  public:

  // optional .ECitadelMatchMode match_mode = 3 [default = k_ECitadelMatchMode_Invalid];
  bool has_match_mode() const;
  private:
  bool _internal_has_match_mode() const;
  public:
  void clear_match_mode();
  ::ECitadelMatchMode match_mode() const;
  void set_match_mode(::ECitadelMatchMode value);
  private:
  ::ECitadelMatchMode _internal_match_mode() const;
  void _internal_set_match_mode(::ECitadelMatchMode value);
  public:

  // optional .ECitadelGameMode game_mode = 5 [default = k_ECitadelGameMode_Invalid];
  bool has_game_mode() const;
  private:
  bool _internal_has_game_mode() const;
  public:
  void clear_game_mode();
  ::ECitadelGameMode game_mode() const;
  void set_game_mode(::ECitadelGameMode value);
  private:
  ::ECitadelGameMode _internal_game_mode() const;
  void _internal_set_game_mode(::ECitadelGameMode value);
  public:

  // optional bool solo_match = 6;
  bool has_solo_match() const;
  private:
  bool _internal_has_solo_match() const;
  public:
  void clear_solo_match();
  bool solo_match() const;
  void set_solo_match(bool value);
  private:
  bool _internal_solo_match() const;
  void _internal_set_solo_match(bool value);
  public:

  // optional .ECitadelBotDifficulty bot_difficulty = 7 [default = k_ECitadelBotDifficulty_None];
  bool has_bot_difficulty() const;
  private:
  bool _internal_has_bot_difficulty() const;
  public:
  void clear_bot_difficulty();
  ::ECitadelBotDifficulty bot_difficulty() const;
  void set_bot_difficulty(::ECitadelBotDifficulty value);
  private:
  ::ECitadelBotDifficulty _internal_bot_difficulty() const;
  void _internal_set_bot_difficulty(::ECitadelBotDifficulty value);
  public:

  // optional .ECitadelRegionMode region_mode = 8 [default = k_ECitadelRegionMode_ROW];
  bool has_region_mode() const;
  private:
  bool _internal_has_region_mode() const;
  public:
  void clear_region_mode();
  ::ECitadelRegionMode region_mode() const;
  void set_region_mode(::ECitadelRegionMode value);
  private:
  ::ECitadelRegionMode _internal_region_mode() const;
  void _internal_set_region_mode(::ECitadelRegionMode value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgStartFindingMatchInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr server_search_key_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr server_command_string_;
    int match_mode_;
    int game_mode_;
    bool solo_match_;
    int bot_difficulty_;
    int region_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgAnyToGCReportAsserts_TrackedAssert /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAnyToGCReportAsserts.TrackedAssert) */ {
 public:
  inline CMsgAnyToGCReportAsserts_TrackedAssert() : CMsgAnyToGCReportAsserts_TrackedAssert(nullptr) {}
  ~CMsgAnyToGCReportAsserts_TrackedAssert() override;
  explicit PROTOBUF_CONSTEXPR CMsgAnyToGCReportAsserts_TrackedAssert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAnyToGCReportAsserts_TrackedAssert(const CMsgAnyToGCReportAsserts_TrackedAssert& from);
  CMsgAnyToGCReportAsserts_TrackedAssert(CMsgAnyToGCReportAsserts_TrackedAssert&& from) noexcept
    : CMsgAnyToGCReportAsserts_TrackedAssert() {
    *this = ::std::move(from);
  }

  inline CMsgAnyToGCReportAsserts_TrackedAssert& operator=(const CMsgAnyToGCReportAsserts_TrackedAssert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAnyToGCReportAsserts_TrackedAssert& operator=(CMsgAnyToGCReportAsserts_TrackedAssert&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAnyToGCReportAsserts_TrackedAssert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAnyToGCReportAsserts_TrackedAssert* internal_default_instance() {
    return reinterpret_cast<const CMsgAnyToGCReportAsserts_TrackedAssert*>(
               &_CMsgAnyToGCReportAsserts_TrackedAssert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgAnyToGCReportAsserts_TrackedAssert& a, CMsgAnyToGCReportAsserts_TrackedAssert& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAnyToGCReportAsserts_TrackedAssert* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAnyToGCReportAsserts_TrackedAssert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAnyToGCReportAsserts_TrackedAssert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgAnyToGCReportAsserts_TrackedAssert>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAnyToGCReportAsserts_TrackedAssert& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAnyToGCReportAsserts_TrackedAssert& from) {
    CMsgAnyToGCReportAsserts_TrackedAssert::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgAnyToGCReportAsserts_TrackedAssert* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAnyToGCReportAsserts.TrackedAssert";
  }
  protected:
  explicit CMsgAnyToGCReportAsserts_TrackedAssert(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 1,
    kSampleMsgFieldNumber = 3,
    kSampleStackFieldNumber = 4,
    kFunctionNameFieldNumber = 6,
    kConditionFieldNumber = 7,
    kLineNumberFieldNumber = 2,
    kTimesFiredFieldNumber = 5,
    kTotalTimesFiredFieldNumber = 8,
  };
  // optional string filename = 1;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_filename(ArgT0&& arg0, ArgT... args);
  std::string* mutable_filename();
  PROTOBUF_NODISCARD std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional string sample_msg = 3;
  bool has_sample_msg() const;
  private:
  bool _internal_has_sample_msg() const;
  public:
  void clear_sample_msg();
  const std::string& sample_msg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sample_msg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sample_msg();
  PROTOBUF_NODISCARD std::string* release_sample_msg();
  void set_allocated_sample_msg(std::string* sample_msg);
  private:
  const std::string& _internal_sample_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sample_msg(const std::string& value);
  std::string* _internal_mutable_sample_msg();
  public:

  // optional string sample_stack = 4;
  bool has_sample_stack() const;
  private:
  bool _internal_has_sample_stack() const;
  public:
  void clear_sample_stack();
  const std::string& sample_stack() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sample_stack(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sample_stack();
  PROTOBUF_NODISCARD std::string* release_sample_stack();
  void set_allocated_sample_stack(std::string* sample_stack);
  private:
  const std::string& _internal_sample_stack() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sample_stack(const std::string& value);
  std::string* _internal_mutable_sample_stack();
  public:

  // optional string function_name = 6;
  bool has_function_name() const;
  private:
  bool _internal_has_function_name() const;
  public:
  void clear_function_name();
  const std::string& function_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_function_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_function_name();
  PROTOBUF_NODISCARD std::string* release_function_name();
  void set_allocated_function_name(std::string* function_name);
  private:
  const std::string& _internal_function_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_function_name(const std::string& value);
  std::string* _internal_mutable_function_name();
  public:

  // optional string condition = 7;
  bool has_condition() const;
  private:
  bool _internal_has_condition() const;
  public:
  void clear_condition();
  const std::string& condition() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_condition(ArgT0&& arg0, ArgT... args);
  std::string* mutable_condition();
  PROTOBUF_NODISCARD std::string* release_condition();
  void set_allocated_condition(std::string* condition);
  private:
  const std::string& _internal_condition() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_condition(const std::string& value);
  std::string* _internal_mutable_condition();
  public:

  // optional uint32 line_number = 2;
  bool has_line_number() const;
  private:
  bool _internal_has_line_number() const;
  public:
  void clear_line_number();
  uint32_t line_number() const;
  void set_line_number(uint32_t value);
  private:
  uint32_t _internal_line_number() const;
  void _internal_set_line_number(uint32_t value);
  public:

  // optional uint32 times_fired = 5;
  bool has_times_fired() const;
  private:
  bool _internal_has_times_fired() const;
  public:
  void clear_times_fired();
  uint32_t times_fired() const;
  void set_times_fired(uint32_t value);
  private:
  uint32_t _internal_times_fired() const;
  void _internal_set_times_fired(uint32_t value);
  public:

  // optional uint32 total_times_fired = 8;
  bool has_total_times_fired() const;
  private:
  bool _internal_has_total_times_fired() const;
  public:
  void clear_total_times_fired();
  uint32_t total_times_fired() const;
  void set_total_times_fired(uint32_t value);
  private:
  uint32_t _internal_total_times_fired() const;
  void _internal_set_total_times_fired(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAnyToGCReportAsserts.TrackedAssert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sample_msg_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sample_stack_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr function_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr condition_;
    uint32_t line_number_;
    uint32_t times_fired_;
    uint32_t total_times_fired_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgAnyToGCReportAsserts /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAnyToGCReportAsserts) */ {
 public:
  inline CMsgAnyToGCReportAsserts() : CMsgAnyToGCReportAsserts(nullptr) {}
  ~CMsgAnyToGCReportAsserts() override;
  explicit PROTOBUF_CONSTEXPR CMsgAnyToGCReportAsserts(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAnyToGCReportAsserts(const CMsgAnyToGCReportAsserts& from);
  CMsgAnyToGCReportAsserts(CMsgAnyToGCReportAsserts&& from) noexcept
    : CMsgAnyToGCReportAsserts() {
    *this = ::std::move(from);
  }

  inline CMsgAnyToGCReportAsserts& operator=(const CMsgAnyToGCReportAsserts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAnyToGCReportAsserts& operator=(CMsgAnyToGCReportAsserts&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAnyToGCReportAsserts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAnyToGCReportAsserts* internal_default_instance() {
    return reinterpret_cast<const CMsgAnyToGCReportAsserts*>(
               &_CMsgAnyToGCReportAsserts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgAnyToGCReportAsserts& a, CMsgAnyToGCReportAsserts& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAnyToGCReportAsserts* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAnyToGCReportAsserts* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAnyToGCReportAsserts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgAnyToGCReportAsserts>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAnyToGCReportAsserts& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAnyToGCReportAsserts& from) {
    CMsgAnyToGCReportAsserts::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgAnyToGCReportAsserts* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAnyToGCReportAsserts";
  }
  protected:
  explicit CMsgAnyToGCReportAsserts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CMsgAnyToGCReportAsserts_TrackedAssert TrackedAssert;

  // accessors -------------------------------------------------------

  enum : int {
    kAssertsFieldNumber = 2,
    kVersionFieldNumber = 1,
  };
  // repeated .CMsgAnyToGCReportAsserts.TrackedAssert asserts = 2;
  int asserts_size() const;
  private:
  int _internal_asserts_size() const;
  public:
  void clear_asserts();
  ::CMsgAnyToGCReportAsserts_TrackedAssert* mutable_asserts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAnyToGCReportAsserts_TrackedAssert >*
      mutable_asserts();
  private:
  const ::CMsgAnyToGCReportAsserts_TrackedAssert& _internal_asserts(int index) const;
  ::CMsgAnyToGCReportAsserts_TrackedAssert* _internal_add_asserts();
  public:
  const ::CMsgAnyToGCReportAsserts_TrackedAssert& asserts(int index) const;
  ::CMsgAnyToGCReportAsserts_TrackedAssert* add_asserts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAnyToGCReportAsserts_TrackedAssert >&
      asserts() const;

  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAnyToGCReportAsserts)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAnyToGCReportAsserts_TrackedAssert > asserts_;
    uint32_t version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgAnyToGCReportAssertsResponse /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAnyToGCReportAssertsResponse) */ {
 public:
  inline CMsgAnyToGCReportAssertsResponse() : CMsgAnyToGCReportAssertsResponse(nullptr) {}
  ~CMsgAnyToGCReportAssertsResponse() override;
  explicit PROTOBUF_CONSTEXPR CMsgAnyToGCReportAssertsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAnyToGCReportAssertsResponse(const CMsgAnyToGCReportAssertsResponse& from);
  CMsgAnyToGCReportAssertsResponse(CMsgAnyToGCReportAssertsResponse&& from) noexcept
    : CMsgAnyToGCReportAssertsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgAnyToGCReportAssertsResponse& operator=(const CMsgAnyToGCReportAssertsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAnyToGCReportAssertsResponse& operator=(CMsgAnyToGCReportAssertsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAnyToGCReportAssertsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAnyToGCReportAssertsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgAnyToGCReportAssertsResponse*>(
               &_CMsgAnyToGCReportAssertsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgAnyToGCReportAssertsResponse& a, CMsgAnyToGCReportAssertsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAnyToGCReportAssertsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAnyToGCReportAssertsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAnyToGCReportAssertsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgAnyToGCReportAssertsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAnyToGCReportAssertsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAnyToGCReportAssertsResponse& from) {
    CMsgAnyToGCReportAssertsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgAnyToGCReportAssertsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAnyToGCReportAssertsResponse";
  }
  protected:
  explicit CMsgAnyToGCReportAssertsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // optional bool success = 1;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAnyToGCReportAssertsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool success_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgRegionPingTimesClient /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgRegionPingTimesClient) */ {
 public:
  inline CMsgRegionPingTimesClient() : CMsgRegionPingTimesClient(nullptr) {}
  ~CMsgRegionPingTimesClient() override;
  explicit PROTOBUF_CONSTEXPR CMsgRegionPingTimesClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgRegionPingTimesClient(const CMsgRegionPingTimesClient& from);
  CMsgRegionPingTimesClient(CMsgRegionPingTimesClient&& from) noexcept
    : CMsgRegionPingTimesClient() {
    *this = ::std::move(from);
  }

  inline CMsgRegionPingTimesClient& operator=(const CMsgRegionPingTimesClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgRegionPingTimesClient& operator=(CMsgRegionPingTimesClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgRegionPingTimesClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgRegionPingTimesClient* internal_default_instance() {
    return reinterpret_cast<const CMsgRegionPingTimesClient*>(
               &_CMsgRegionPingTimesClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgRegionPingTimesClient& a, CMsgRegionPingTimesClient& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgRegionPingTimesClient* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgRegionPingTimesClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgRegionPingTimesClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgRegionPingTimesClient>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgRegionPingTimesClient& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgRegionPingTimesClient& from) {
    CMsgRegionPingTimesClient::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgRegionPingTimesClient* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgRegionPingTimesClient";
  }
  protected:
  explicit CMsgRegionPingTimesClient(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataCenterCodesFieldNumber = 1,
    kPingTimesFieldNumber = 2,
  };
  // repeated fixed32 data_center_codes = 1 [packed = true];
  int data_center_codes_size() const;
  private:
  int _internal_data_center_codes_size() const;
  public:
  void clear_data_center_codes();
  private:
  uint32_t _internal_data_center_codes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_data_center_codes() const;
  void _internal_add_data_center_codes(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_data_center_codes();
  public:
  uint32_t data_center_codes(int index) const;
  void set_data_center_codes(int index, uint32_t value);
  void add_data_center_codes(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      data_center_codes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_data_center_codes();

  // repeated uint32 ping_times = 2 [packed = true];
  int ping_times_size() const;
  private:
  int _internal_ping_times_size() const;
  public:
  void clear_ping_times();
  private:
  uint32_t _internal_ping_times(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_ping_times() const;
  void _internal_add_ping_times(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_ping_times();
  public:
  uint32_t ping_times(int index) const;
  void set_ping_times(int index, uint32_t value);
  void add_ping_times(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      ping_times() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_ping_times();

  // @@protoc_insertion_point(class_scope:CMsgRegionPingTimesClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > data_center_codes_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > ping_times_;
    mutable std::atomic<int> _ping_times_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CSOCitadelParty_Member /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOCitadelParty.Member) */ {
 public:
  inline CSOCitadelParty_Member() : CSOCitadelParty_Member(nullptr) {}
  ~CSOCitadelParty_Member() override;
  explicit PROTOBUF_CONSTEXPR CSOCitadelParty_Member(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOCitadelParty_Member(const CSOCitadelParty_Member& from);
  CSOCitadelParty_Member(CSOCitadelParty_Member&& from) noexcept
    : CSOCitadelParty_Member() {
    *this = ::std::move(from);
  }

  inline CSOCitadelParty_Member& operator=(const CSOCitadelParty_Member& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOCitadelParty_Member& operator=(CSOCitadelParty_Member&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOCitadelParty_Member& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOCitadelParty_Member* internal_default_instance() {
    return reinterpret_cast<const CSOCitadelParty_Member*>(
               &_CSOCitadelParty_Member_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CSOCitadelParty_Member& a, CSOCitadelParty_Member& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOCitadelParty_Member* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOCitadelParty_Member* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOCitadelParty_Member* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CSOCitadelParty_Member>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOCitadelParty_Member& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOCitadelParty_Member& from) {
    CSOCitadelParty_Member::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CSOCitadelParty_Member* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOCitadelParty.Member";
  }
  protected:
  explicit CSOCitadelParty_Member(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOwnedHeroesFieldNumber = 12,
    kPersonaNameFieldNumber = 2,
    kHeroRosterFieldNumber = 9,
    kAccountIdFieldNumber = 1,
    kRightsFlagsFieldNumber = 3,
    kIsReadyFieldNumber = 4,
    kPlayerTypeFieldNumber = 5,
    kCompatibilityVersionFieldNumber = 6,
    kPlatformFieldNumber = 7,
    kPermissionsFieldNumber = 10,
    kNewPlayerProgressFieldNumber = 11,
    kTeamFieldNumber = 8,
  };
  // repeated uint32 owned_heroes = 12 [packed = true];
  int owned_heroes_size() const;
  private:
  int _internal_owned_heroes_size() const;
  public:
  void clear_owned_heroes();
  private:
  uint32_t _internal_owned_heroes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_owned_heroes() const;
  void _internal_add_owned_heroes(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_owned_heroes();
  public:
  uint32_t owned_heroes(int index) const;
  void set_owned_heroes(int index, uint32_t value);
  void add_owned_heroes(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      owned_heroes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_owned_heroes();

  // optional string persona_name = 2;
  bool has_persona_name() const;
  private:
  bool _internal_has_persona_name() const;
  public:
  void clear_persona_name();
  const std::string& persona_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_persona_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_persona_name();
  PROTOBUF_NODISCARD std::string* release_persona_name();
  void set_allocated_persona_name(std::string* persona_name);
  private:
  const std::string& _internal_persona_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_persona_name(const std::string& value);
  std::string* _internal_mutable_persona_name();
  public:

  // optional .CMsgHeroSelectionMatchInfo hero_roster = 9;
  bool has_hero_roster() const;
  private:
  bool _internal_has_hero_roster() const;
  public:
  void clear_hero_roster();
  const ::CMsgHeroSelectionMatchInfo& hero_roster() const;
  PROTOBUF_NODISCARD ::CMsgHeroSelectionMatchInfo* release_hero_roster();
  ::CMsgHeroSelectionMatchInfo* mutable_hero_roster();
  void set_allocated_hero_roster(::CMsgHeroSelectionMatchInfo* hero_roster);
  private:
  const ::CMsgHeroSelectionMatchInfo& _internal_hero_roster() const;
  ::CMsgHeroSelectionMatchInfo* _internal_mutable_hero_roster();
  public:
  void unsafe_arena_set_allocated_hero_roster(
      ::CMsgHeroSelectionMatchInfo* hero_roster);
  ::CMsgHeroSelectionMatchInfo* unsafe_arena_release_hero_roster();

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 rights_flags = 3;
  bool has_rights_flags() const;
  private:
  bool _internal_has_rights_flags() const;
  public:
  void clear_rights_flags();
  uint32_t rights_flags() const;
  void set_rights_flags(uint32_t value);
  private:
  uint32_t _internal_rights_flags() const;
  void _internal_set_rights_flags(uint32_t value);
  public:

  // optional bool is_ready = 4;
  bool has_is_ready() const;
  private:
  bool _internal_has_is_ready() const;
  public:
  void clear_is_ready();
  bool is_ready() const;
  void set_is_ready(bool value);
  private:
  bool _internal_is_ready() const;
  void _internal_set_is_ready(bool value);
  public:

  // optional .CSOCitadelParty.EPlayerType player_type = 5 [default = k_ePlayerType_Player];
  bool has_player_type() const;
  private:
  bool _internal_has_player_type() const;
  public:
  void clear_player_type();
  ::CSOCitadelParty_EPlayerType player_type() const;
  void set_player_type(::CSOCitadelParty_EPlayerType value);
  private:
  ::CSOCitadelParty_EPlayerType _internal_player_type() const;
  void _internal_set_player_type(::CSOCitadelParty_EPlayerType value);
  public:

  // optional uint32 compatibility_version = 6;
  bool has_compatibility_version() const;
  private:
  bool _internal_has_compatibility_version() const;
  public:
  void clear_compatibility_version();
  uint32_t compatibility_version() const;
  void set_compatibility_version(uint32_t value);
  private:
  uint32_t _internal_compatibility_version() const;
  void _internal_set_compatibility_version(uint32_t value);
  public:

  // optional .EGCPlatform platform = 7 [default = k_eGCPlatform_None];
  bool has_platform() const;
  private:
  bool _internal_has_platform() const;
  public:
  void clear_platform();
  ::EGCPlatform platform() const;
  void set_platform(::EGCPlatform value);
  private:
  ::EGCPlatform _internal_platform() const;
  void _internal_set_platform(::EGCPlatform value);
  public:

  // optional uint64 permissions = 10;
  bool has_permissions() const;
  private:
  bool _internal_has_permissions() const;
  public:
  void clear_permissions();
  uint64_t permissions() const;
  void set_permissions(uint64_t value);
  private:
  uint64_t _internal_permissions() const;
  void _internal_set_permissions(uint64_t value);
  public:

  // optional uint64 new_player_progress = 11;
  bool has_new_player_progress() const;
  private:
  bool _internal_has_new_player_progress() const;
  public:
  void clear_new_player_progress();
  uint64_t new_player_progress() const;
  void set_new_player_progress(uint64_t value);
  private:
  uint64_t _internal_new_player_progress() const;
  void _internal_set_new_player_progress(uint64_t value);
  public:

  // optional uint32 team = 8;
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  uint32_t team() const;
  void set_team(uint32_t value);
  private:
  uint32_t _internal_team() const;
  void _internal_set_team(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CSOCitadelParty.Member)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > owned_heroes_;
    mutable std::atomic<int> _owned_heroes_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr persona_name_;
    ::CMsgHeroSelectionMatchInfo* hero_roster_;
    uint32_t account_id_;
    uint32_t rights_flags_;
    bool is_ready_;
    int player_type_;
    uint32_t compatibility_version_;
    int platform_;
    uint64_t permissions_;
    uint64_t new_player_progress_;
    uint32_t team_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CSOCitadelParty_LeftMember /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOCitadelParty.LeftMember) */ {
 public:
  inline CSOCitadelParty_LeftMember() : CSOCitadelParty_LeftMember(nullptr) {}
  ~CSOCitadelParty_LeftMember() override;
  explicit PROTOBUF_CONSTEXPR CSOCitadelParty_LeftMember(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOCitadelParty_LeftMember(const CSOCitadelParty_LeftMember& from);
  CSOCitadelParty_LeftMember(CSOCitadelParty_LeftMember&& from) noexcept
    : CSOCitadelParty_LeftMember() {
    *this = ::std::move(from);
  }

  inline CSOCitadelParty_LeftMember& operator=(const CSOCitadelParty_LeftMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOCitadelParty_LeftMember& operator=(CSOCitadelParty_LeftMember&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOCitadelParty_LeftMember& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOCitadelParty_LeftMember* internal_default_instance() {
    return reinterpret_cast<const CSOCitadelParty_LeftMember*>(
               &_CSOCitadelParty_LeftMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CSOCitadelParty_LeftMember& a, CSOCitadelParty_LeftMember& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOCitadelParty_LeftMember* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOCitadelParty_LeftMember* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOCitadelParty_LeftMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CSOCitadelParty_LeftMember>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOCitadelParty_LeftMember& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOCitadelParty_LeftMember& from) {
    CSOCitadelParty_LeftMember::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CSOCitadelParty_LeftMember* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOCitadelParty.LeftMember";
  }
  protected:
  explicit CSOCitadelParty_LeftMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kRightsFlagsFieldNumber = 2,
    kPlayerTypeFieldNumber = 3,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 rights_flags = 2;
  bool has_rights_flags() const;
  private:
  bool _internal_has_rights_flags() const;
  public:
  void clear_rights_flags();
  uint32_t rights_flags() const;
  void set_rights_flags(uint32_t value);
  private:
  uint32_t _internal_rights_flags() const;
  void _internal_set_rights_flags(uint32_t value);
  public:

  // optional .CSOCitadelParty.EPlayerType player_type = 3 [default = k_ePlayerType_Player];
  bool has_player_type() const;
  private:
  bool _internal_has_player_type() const;
  public:
  void clear_player_type();
  ::CSOCitadelParty_EPlayerType player_type() const;
  void set_player_type(::CSOCitadelParty_EPlayerType value);
  private:
  ::CSOCitadelParty_EPlayerType _internal_player_type() const;
  void _internal_set_player_type(::CSOCitadelParty_EPlayerType value);
  public:

  // @@protoc_insertion_point(class_scope:CSOCitadelParty.LeftMember)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t account_id_;
    uint32_t rights_flags_;
    int player_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CSOCitadelParty_Invite /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOCitadelParty.Invite) */ {
 public:
  inline CSOCitadelParty_Invite() : CSOCitadelParty_Invite(nullptr) {}
  ~CSOCitadelParty_Invite() override;
  explicit PROTOBUF_CONSTEXPR CSOCitadelParty_Invite(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOCitadelParty_Invite(const CSOCitadelParty_Invite& from);
  CSOCitadelParty_Invite(CSOCitadelParty_Invite&& from) noexcept
    : CSOCitadelParty_Invite() {
    *this = ::std::move(from);
  }

  inline CSOCitadelParty_Invite& operator=(const CSOCitadelParty_Invite& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOCitadelParty_Invite& operator=(CSOCitadelParty_Invite&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOCitadelParty_Invite& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOCitadelParty_Invite* internal_default_instance() {
    return reinterpret_cast<const CSOCitadelParty_Invite*>(
               &_CSOCitadelParty_Invite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CSOCitadelParty_Invite& a, CSOCitadelParty_Invite& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOCitadelParty_Invite* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOCitadelParty_Invite* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOCitadelParty_Invite* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CSOCitadelParty_Invite>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOCitadelParty_Invite& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOCitadelParty_Invite& from) {
    CSOCitadelParty_Invite::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CSOCitadelParty_Invite* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOCitadelParty.Invite";
  }
  protected:
  explicit CSOCitadelParty_Invite(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPersonaNameFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kInvitedByFieldNumber = 3,
  };
  // optional string persona_name = 2;
  bool has_persona_name() const;
  private:
  bool _internal_has_persona_name() const;
  public:
  void clear_persona_name();
  const std::string& persona_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_persona_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_persona_name();
  PROTOBUF_NODISCARD std::string* release_persona_name();
  void set_allocated_persona_name(std::string* persona_name);
  private:
  const std::string& _internal_persona_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_persona_name(const std::string& value);
  std::string* _internal_mutable_persona_name();
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 invited_by = 3;
  bool has_invited_by() const;
  private:
  bool _internal_has_invited_by() const;
  public:
  void clear_invited_by();
  uint32_t invited_by() const;
  void set_invited_by(uint32_t value);
  private:
  uint32_t _internal_invited_by() const;
  void _internal_set_invited_by(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CSOCitadelParty.Invite)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr persona_name_;
    uint32_t account_id_;
    uint32_t invited_by_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CSOCitadelParty /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CSOCitadelParty) */ {
 public:
  inline CSOCitadelParty() : CSOCitadelParty(nullptr) {}
  ~CSOCitadelParty() override;
  explicit PROTOBUF_CONSTEXPR CSOCitadelParty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CSOCitadelParty(const CSOCitadelParty& from);
  CSOCitadelParty(CSOCitadelParty&& from) noexcept
    : CSOCitadelParty() {
    *this = ::std::move(from);
  }

  inline CSOCitadelParty& operator=(const CSOCitadelParty& from) {
    CopyFrom(from);
    return *this;
  }
  inline CSOCitadelParty& operator=(CSOCitadelParty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CSOCitadelParty& default_instance() {
    return *internal_default_instance();
  }
  static inline const CSOCitadelParty* internal_default_instance() {
    return reinterpret_cast<const CSOCitadelParty*>(
               &_CSOCitadelParty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CSOCitadelParty& a, CSOCitadelParty& b) {
    a.Swap(&b);
  }
  inline void Swap(CSOCitadelParty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CSOCitadelParty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CSOCitadelParty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CSOCitadelParty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CSOCitadelParty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CSOCitadelParty& from) {
    CSOCitadelParty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CSOCitadelParty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CSOCitadelParty";
  }
  protected:
  explicit CSOCitadelParty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CSOCitadelParty_Member Member;
  typedef CSOCitadelParty_LeftMember LeftMember;
  typedef CSOCitadelParty_Invite Invite;

  typedef CSOCitadelParty_EMemberRights EMemberRights;
  static constexpr EMemberRights k_eMemberRights_Admin =
    CSOCitadelParty_EMemberRights_k_eMemberRights_Admin;
  static constexpr EMemberRights k_eMemberRights_Creator =
    CSOCitadelParty_EMemberRights_k_eMemberRights_Creator;
  static inline bool EMemberRights_IsValid(int value) {
    return CSOCitadelParty_EMemberRights_IsValid(value);
  }
  static constexpr EMemberRights EMemberRights_MIN =
    CSOCitadelParty_EMemberRights_EMemberRights_MIN;
  static constexpr EMemberRights EMemberRights_MAX =
    CSOCitadelParty_EMemberRights_EMemberRights_MAX;
  static constexpr int EMemberRights_ARRAYSIZE =
    CSOCitadelParty_EMemberRights_EMemberRights_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EMemberRights_descriptor() {
    return CSOCitadelParty_EMemberRights_descriptor();
  }
  template<typename T>
  static inline const std::string& EMemberRights_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EMemberRights>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EMemberRights_Name.");
    return CSOCitadelParty_EMemberRights_Name(enum_t_value);
  }
  static inline bool EMemberRights_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EMemberRights* value) {
    return CSOCitadelParty_EMemberRights_Parse(name, value);
  }

  typedef CSOCitadelParty_EPlayerType EPlayerType;
  static constexpr EPlayerType k_ePlayerType_Player =
    CSOCitadelParty_EPlayerType_k_ePlayerType_Player;
  static constexpr EPlayerType k_ePlayerType_Spectator =
    CSOCitadelParty_EPlayerType_k_ePlayerType_Spectator;
  static inline bool EPlayerType_IsValid(int value) {
    return CSOCitadelParty_EPlayerType_IsValid(value);
  }
  static constexpr EPlayerType EPlayerType_MIN =
    CSOCitadelParty_EPlayerType_EPlayerType_MIN;
  static constexpr EPlayerType EPlayerType_MAX =
    CSOCitadelParty_EPlayerType_EPlayerType_MAX;
  static constexpr int EPlayerType_ARRAYSIZE =
    CSOCitadelParty_EPlayerType_EPlayerType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EPlayerType_descriptor() {
    return CSOCitadelParty_EPlayerType_descriptor();
  }
  template<typename T>
  static inline const std::string& EPlayerType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EPlayerType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EPlayerType_Name.");
    return CSOCitadelParty_EPlayerType_Name(enum_t_value);
  }
  static inline bool EPlayerType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EPlayerType* value) {
    return CSOCitadelParty_EPlayerType_Parse(name, value);
  }

  typedef CSOCitadelParty_EChatMode EChatMode;
  static constexpr EChatMode k_eNone =
    CSOCitadelParty_EChatMode_k_eNone;
  static constexpr EChatMode k_ePartyChat =
    CSOCitadelParty_EChatMode_k_ePartyChat;
  static constexpr EChatMode k_eTeamChat =
    CSOCitadelParty_EChatMode_k_eTeamChat;
  static inline bool EChatMode_IsValid(int value) {
    return CSOCitadelParty_EChatMode_IsValid(value);
  }
  static constexpr EChatMode EChatMode_MIN =
    CSOCitadelParty_EChatMode_EChatMode_MIN;
  static constexpr EChatMode EChatMode_MAX =
    CSOCitadelParty_EChatMode_EChatMode_MAX;
  static constexpr int EChatMode_ARRAYSIZE =
    CSOCitadelParty_EChatMode_EChatMode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EChatMode_descriptor() {
    return CSOCitadelParty_EChatMode_descriptor();
  }
  template<typename T>
  static inline const std::string& EChatMode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EChatMode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EChatMode_Name.");
    return CSOCitadelParty_EChatMode_Name(enum_t_value);
  }
  static inline bool EChatMode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EChatMode* value) {
    return CSOCitadelParty_EChatMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMembersFieldNumber = 2,
    kInvitesFieldNumber = 3,
    kLeftMembersFieldNumber = 5,
    kDevServerCommandFieldNumber = 4,
    kServerSearchKeyFieldNumber = 12,
    kPartyIdFieldNumber = 1,
    kJoinCodeFieldNumber = 6,
    kBotDifficultyFieldNumber = 7,
    kMatchModeFieldNumber = 9,
    kGameModeFieldNumber = 10,
    kMatchMakingStartTimeFieldNumber = 11,
    kIsHighSkillRangePartyFieldNumber = 13,
    kChatModeFieldNumber = 14,
    kRegionModeFieldNumber = 15,
  };
  // repeated .CSOCitadelParty.Member members = 2;
  int members_size() const;
  private:
  int _internal_members_size() const;
  public:
  void clear_members();
  ::CSOCitadelParty_Member* mutable_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_Member >*
      mutable_members();
  private:
  const ::CSOCitadelParty_Member& _internal_members(int index) const;
  ::CSOCitadelParty_Member* _internal_add_members();
  public:
  const ::CSOCitadelParty_Member& members(int index) const;
  ::CSOCitadelParty_Member* add_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_Member >&
      members() const;

  // repeated .CSOCitadelParty.Invite invites = 3;
  int invites_size() const;
  private:
  int _internal_invites_size() const;
  public:
  void clear_invites();
  ::CSOCitadelParty_Invite* mutable_invites(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_Invite >*
      mutable_invites();
  private:
  const ::CSOCitadelParty_Invite& _internal_invites(int index) const;
  ::CSOCitadelParty_Invite* _internal_add_invites();
  public:
  const ::CSOCitadelParty_Invite& invites(int index) const;
  ::CSOCitadelParty_Invite* add_invites();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_Invite >&
      invites() const;

  // repeated .CSOCitadelParty.LeftMember left_members = 5;
  int left_members_size() const;
  private:
  int _internal_left_members_size() const;
  public:
  void clear_left_members();
  ::CSOCitadelParty_LeftMember* mutable_left_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_LeftMember >*
      mutable_left_members();
  private:
  const ::CSOCitadelParty_LeftMember& _internal_left_members(int index) const;
  ::CSOCitadelParty_LeftMember* _internal_add_left_members();
  public:
  const ::CSOCitadelParty_LeftMember& left_members(int index) const;
  ::CSOCitadelParty_LeftMember* add_left_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_LeftMember >&
      left_members() const;

  // optional string dev_server_command = 4;
  bool has_dev_server_command() const;
  private:
  bool _internal_has_dev_server_command() const;
  public:
  void clear_dev_server_command();
  const std::string& dev_server_command() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_dev_server_command(ArgT0&& arg0, ArgT... args);
  std::string* mutable_dev_server_command();
  PROTOBUF_NODISCARD std::string* release_dev_server_command();
  void set_allocated_dev_server_command(std::string* dev_server_command);
  private:
  const std::string& _internal_dev_server_command() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dev_server_command(const std::string& value);
  std::string* _internal_mutable_dev_server_command();
  public:

  // optional string server_search_key = 12;
  bool has_server_search_key() const;
  private:
  bool _internal_has_server_search_key() const;
  public:
  void clear_server_search_key();
  const std::string& server_search_key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_server_search_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_server_search_key();
  PROTOBUF_NODISCARD std::string* release_server_search_key();
  void set_allocated_server_search_key(std::string* server_search_key);
  private:
  const std::string& _internal_server_search_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server_search_key(const std::string& value);
  std::string* _internal_mutable_server_search_key();
  public:

  // optional uint64 party_id = 1;
  bool has_party_id() const;
  private:
  bool _internal_has_party_id() const;
  public:
  void clear_party_id();
  uint64_t party_id() const;
  void set_party_id(uint64_t value);
  private:
  uint64_t _internal_party_id() const;
  void _internal_set_party_id(uint64_t value);
  public:

  // optional uint64 join_code = 6;
  bool has_join_code() const;
  private:
  bool _internal_has_join_code() const;
  public:
  void clear_join_code();
  uint64_t join_code() const;
  void set_join_code(uint64_t value);
  private:
  uint64_t _internal_join_code() const;
  void _internal_set_join_code(uint64_t value);
  public:

  // optional .ECitadelBotDifficulty bot_difficulty = 7 [default = k_ECitadelBotDifficulty_None];
  bool has_bot_difficulty() const;
  private:
  bool _internal_has_bot_difficulty() const;
  public:
  void clear_bot_difficulty();
  ::ECitadelBotDifficulty bot_difficulty() const;
  void set_bot_difficulty(::ECitadelBotDifficulty value);
  private:
  ::ECitadelBotDifficulty _internal_bot_difficulty() const;
  void _internal_set_bot_difficulty(::ECitadelBotDifficulty value);
  public:

  // optional .ECitadelMatchMode match_mode = 9 [default = k_ECitadelMatchMode_Invalid];
  bool has_match_mode() const;
  private:
  bool _internal_has_match_mode() const;
  public:
  void clear_match_mode();
  ::ECitadelMatchMode match_mode() const;
  void set_match_mode(::ECitadelMatchMode value);
  private:
  ::ECitadelMatchMode _internal_match_mode() const;
  void _internal_set_match_mode(::ECitadelMatchMode value);
  public:

  // optional .ECitadelGameMode game_mode = 10 [default = k_ECitadelGameMode_Invalid];
  bool has_game_mode() const;
  private:
  bool _internal_has_game_mode() const;
  public:
  void clear_game_mode();
  ::ECitadelGameMode game_mode() const;
  void set_game_mode(::ECitadelGameMode value);
  private:
  ::ECitadelGameMode _internal_game_mode() const;
  void _internal_set_game_mode(::ECitadelGameMode value);
  public:

  // optional uint32 match_making_start_time = 11;
  bool has_match_making_start_time() const;
  private:
  bool _internal_has_match_making_start_time() const;
  public:
  void clear_match_making_start_time();
  uint32_t match_making_start_time() const;
  void set_match_making_start_time(uint32_t value);
  private:
  uint32_t _internal_match_making_start_time() const;
  void _internal_set_match_making_start_time(uint32_t value);
  public:

  // optional bool is_high_skill_range_party = 13;
  bool has_is_high_skill_range_party() const;
  private:
  bool _internal_has_is_high_skill_range_party() const;
  public:
  void clear_is_high_skill_range_party();
  bool is_high_skill_range_party() const;
  void set_is_high_skill_range_party(bool value);
  private:
  bool _internal_is_high_skill_range_party() const;
  void _internal_set_is_high_skill_range_party(bool value);
  public:

  // optional .CSOCitadelParty.EChatMode chat_mode = 14 [default = k_eNone];
  bool has_chat_mode() const;
  private:
  bool _internal_has_chat_mode() const;
  public:
  void clear_chat_mode();
  ::CSOCitadelParty_EChatMode chat_mode() const;
  void set_chat_mode(::CSOCitadelParty_EChatMode value);
  private:
  ::CSOCitadelParty_EChatMode _internal_chat_mode() const;
  void _internal_set_chat_mode(::CSOCitadelParty_EChatMode value);
  public:

  // optional .ECitadelRegionMode region_mode = 15 [default = k_ECitadelRegionMode_ROW];
  bool has_region_mode() const;
  private:
  bool _internal_has_region_mode() const;
  public:
  void clear_region_mode();
  ::ECitadelRegionMode region_mode() const;
  void set_region_mode(::ECitadelRegionMode value);
  private:
  ::ECitadelRegionMode _internal_region_mode() const;
  void _internal_set_region_mode(::ECitadelRegionMode value);
  public:

  // @@protoc_insertion_point(class_scope:CSOCitadelParty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_Member > members_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_Invite > invites_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_LeftMember > left_members_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dev_server_command_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr server_search_key_;
    uint64_t party_id_;
    uint64_t join_code_;
    int bot_difficulty_;
    int match_mode_;
    int game_mode_;
    uint32_t match_making_start_time_;
    bool is_high_skill_range_party_;
    int chat_mode_;
    int region_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchPlayerPathsData_Path /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchPlayerPathsData.Path) */ {
 public:
  inline CMsgMatchPlayerPathsData_Path() : CMsgMatchPlayerPathsData_Path(nullptr) {}
  ~CMsgMatchPlayerPathsData_Path() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchPlayerPathsData_Path(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchPlayerPathsData_Path(const CMsgMatchPlayerPathsData_Path& from);
  CMsgMatchPlayerPathsData_Path(CMsgMatchPlayerPathsData_Path&& from) noexcept
    : CMsgMatchPlayerPathsData_Path() {
    *this = ::std::move(from);
  }

  inline CMsgMatchPlayerPathsData_Path& operator=(const CMsgMatchPlayerPathsData_Path& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchPlayerPathsData_Path& operator=(CMsgMatchPlayerPathsData_Path&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchPlayerPathsData_Path& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchPlayerPathsData_Path* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchPlayerPathsData_Path*>(
               &_CMsgMatchPlayerPathsData_Path_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgMatchPlayerPathsData_Path& a, CMsgMatchPlayerPathsData_Path& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchPlayerPathsData_Path* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchPlayerPathsData_Path* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchPlayerPathsData_Path* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchPlayerPathsData_Path>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchPlayerPathsData_Path& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchPlayerPathsData_Path& from) {
    CMsgMatchPlayerPathsData_Path::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchPlayerPathsData_Path* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchPlayerPathsData.Path";
  }
  protected:
  explicit CMsgMatchPlayerPathsData_Path(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXPosFieldNumber = 6,
    kYPosFieldNumber = 7,
    kAliveFieldNumber = 8,
    kHealthFieldNumber = 9,
    kPlayerSlotFieldNumber = 1,
    kXMinFieldNumber = 2,
    kYMinFieldNumber = 3,
    kXMaxFieldNumber = 4,
    kYMaxFieldNumber = 5,
  };
  // repeated uint32 x_pos = 6 [packed = true];
  int x_pos_size() const;
  private:
  int _internal_x_pos_size() const;
  public:
  void clear_x_pos();
  private:
  uint32_t _internal_x_pos(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_x_pos() const;
  void _internal_add_x_pos(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_x_pos();
  public:
  uint32_t x_pos(int index) const;
  void set_x_pos(int index, uint32_t value);
  void add_x_pos(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      x_pos() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_x_pos();

  // repeated uint32 y_pos = 7 [packed = true];
  int y_pos_size() const;
  private:
  int _internal_y_pos_size() const;
  public:
  void clear_y_pos();
  private:
  uint32_t _internal_y_pos(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_y_pos() const;
  void _internal_add_y_pos(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_y_pos();
  public:
  uint32_t y_pos(int index) const;
  void set_y_pos(int index, uint32_t value);
  void add_y_pos(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      y_pos() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_y_pos();

  // repeated bool alive = 8 [packed = true];
  int alive_size() const;
  private:
  int _internal_alive_size() const;
  public:
  void clear_alive();
  private:
  bool _internal_alive(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_alive() const;
  void _internal_add_alive(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_alive();
  public:
  bool alive(int index) const;
  void set_alive(int index, bool value);
  void add_alive(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      alive() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_alive();

  // repeated uint32 health = 9 [packed = true];
  int health_size() const;
  private:
  int _internal_health_size() const;
  public:
  void clear_health();
  private:
  uint32_t _internal_health(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_health() const;
  void _internal_add_health(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_health();
  public:
  uint32_t health(int index) const;
  void set_health(int index, uint32_t value);
  void add_health(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      health() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_health();

  // optional uint32 player_slot = 1;
  bool has_player_slot() const;
  private:
  bool _internal_has_player_slot() const;
  public:
  void clear_player_slot();
  uint32_t player_slot() const;
  void set_player_slot(uint32_t value);
  private:
  uint32_t _internal_player_slot() const;
  void _internal_set_player_slot(uint32_t value);
  public:

  // optional float x_min = 2;
  bool has_x_min() const;
  private:
  bool _internal_has_x_min() const;
  public:
  void clear_x_min();
  float x_min() const;
  void set_x_min(float value);
  private:
  float _internal_x_min() const;
  void _internal_set_x_min(float value);
  public:

  // optional float y_min = 3;
  bool has_y_min() const;
  private:
  bool _internal_has_y_min() const;
  public:
  void clear_y_min();
  float y_min() const;
  void set_y_min(float value);
  private:
  float _internal_y_min() const;
  void _internal_set_y_min(float value);
  public:

  // optional float x_max = 4;
  bool has_x_max() const;
  private:
  bool _internal_has_x_max() const;
  public:
  void clear_x_max();
  float x_max() const;
  void set_x_max(float value);
  private:
  float _internal_x_max() const;
  void _internal_set_x_max(float value);
  public:

  // optional float y_max = 5;
  bool has_y_max() const;
  private:
  bool _internal_has_y_max() const;
  public:
  void clear_y_max();
  float y_max() const;
  void set_y_max(float value);
  private:
  float _internal_y_max() const;
  void _internal_set_y_max(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchPlayerPathsData.Path)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > x_pos_;
    mutable std::atomic<int> _x_pos_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > y_pos_;
    mutable std::atomic<int> _y_pos_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > alive_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > health_;
    mutable std::atomic<int> _health_cached_byte_size_;
    uint32_t player_slot_;
    float x_min_;
    float y_min_;
    float x_max_;
    float y_max_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchPlayerPathsData /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchPlayerPathsData) */ {
 public:
  inline CMsgMatchPlayerPathsData() : CMsgMatchPlayerPathsData(nullptr) {}
  ~CMsgMatchPlayerPathsData() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchPlayerPathsData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchPlayerPathsData(const CMsgMatchPlayerPathsData& from);
  CMsgMatchPlayerPathsData(CMsgMatchPlayerPathsData&& from) noexcept
    : CMsgMatchPlayerPathsData() {
    *this = ::std::move(from);
  }

  inline CMsgMatchPlayerPathsData& operator=(const CMsgMatchPlayerPathsData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchPlayerPathsData& operator=(CMsgMatchPlayerPathsData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchPlayerPathsData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchPlayerPathsData* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchPlayerPathsData*>(
               &_CMsgMatchPlayerPathsData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgMatchPlayerPathsData& a, CMsgMatchPlayerPathsData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchPlayerPathsData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchPlayerPathsData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchPlayerPathsData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchPlayerPathsData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchPlayerPathsData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchPlayerPathsData& from) {
    CMsgMatchPlayerPathsData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchPlayerPathsData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchPlayerPathsData";
  }
  protected:
  explicit CMsgMatchPlayerPathsData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CMsgMatchPlayerPathsData_Path Path;

  // accessors -------------------------------------------------------

  enum : int {
    kPathsFieldNumber = 5,
    kVersionFieldNumber = 1,
    kIntervalSFieldNumber = 2,
    kXResolutionFieldNumber = 3,
    kYResolutionFieldNumber = 4,
  };
  // repeated .CMsgMatchPlayerPathsData.Path paths = 5;
  int paths_size() const;
  private:
  int _internal_paths_size() const;
  public:
  void clear_paths();
  ::CMsgMatchPlayerPathsData_Path* mutable_paths(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerPathsData_Path >*
      mutable_paths();
  private:
  const ::CMsgMatchPlayerPathsData_Path& _internal_paths(int index) const;
  ::CMsgMatchPlayerPathsData_Path* _internal_add_paths();
  public:
  const ::CMsgMatchPlayerPathsData_Path& paths(int index) const;
  ::CMsgMatchPlayerPathsData_Path* add_paths();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerPathsData_Path >&
      paths() const;

  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // optional float interval_s = 2;
  bool has_interval_s() const;
  private:
  bool _internal_has_interval_s() const;
  public:
  void clear_interval_s();
  float interval_s() const;
  void set_interval_s(float value);
  private:
  float _internal_interval_s() const;
  void _internal_set_interval_s(float value);
  public:

  // optional uint32 x_resolution = 3;
  bool has_x_resolution() const;
  private:
  bool _internal_has_x_resolution() const;
  public:
  void clear_x_resolution();
  uint32_t x_resolution() const;
  void set_x_resolution(uint32_t value);
  private:
  uint32_t _internal_x_resolution() const;
  void _internal_set_x_resolution(uint32_t value);
  public:

  // optional uint32 y_resolution = 4;
  bool has_y_resolution() const;
  private:
  bool _internal_has_y_resolution() const;
  public:
  void clear_y_resolution();
  uint32_t y_resolution() const;
  void set_y_resolution(uint32_t value);
  private:
  uint32_t _internal_y_resolution() const;
  void _internal_set_y_resolution(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchPlayerPathsData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerPathsData_Path > paths_;
    uint32_t version_;
    float interval_s_;
    uint32_t x_resolution_;
    uint32_t y_resolution_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchPlayerDamageMatrix_DamageToPlayer /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchPlayerDamageMatrix.DamageToPlayer) */ {
 public:
  inline CMsgMatchPlayerDamageMatrix_DamageToPlayer() : CMsgMatchPlayerDamageMatrix_DamageToPlayer(nullptr) {}
  ~CMsgMatchPlayerDamageMatrix_DamageToPlayer() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchPlayerDamageMatrix_DamageToPlayer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchPlayerDamageMatrix_DamageToPlayer(const CMsgMatchPlayerDamageMatrix_DamageToPlayer& from);
  CMsgMatchPlayerDamageMatrix_DamageToPlayer(CMsgMatchPlayerDamageMatrix_DamageToPlayer&& from) noexcept
    : CMsgMatchPlayerDamageMatrix_DamageToPlayer() {
    *this = ::std::move(from);
  }

  inline CMsgMatchPlayerDamageMatrix_DamageToPlayer& operator=(const CMsgMatchPlayerDamageMatrix_DamageToPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchPlayerDamageMatrix_DamageToPlayer& operator=(CMsgMatchPlayerDamageMatrix_DamageToPlayer&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchPlayerDamageMatrix_DamageToPlayer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchPlayerDamageMatrix_DamageToPlayer* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchPlayerDamageMatrix_DamageToPlayer*>(
               &_CMsgMatchPlayerDamageMatrix_DamageToPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgMatchPlayerDamageMatrix_DamageToPlayer& a, CMsgMatchPlayerDamageMatrix_DamageToPlayer& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchPlayerDamageMatrix_DamageToPlayer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchPlayerDamageMatrix_DamageToPlayer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchPlayerDamageMatrix_DamageToPlayer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchPlayerDamageMatrix_DamageToPlayer>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchPlayerDamageMatrix_DamageToPlayer& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchPlayerDamageMatrix_DamageToPlayer& from) {
    CMsgMatchPlayerDamageMatrix_DamageToPlayer::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchPlayerDamageMatrix_DamageToPlayer* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchPlayerDamageMatrix.DamageToPlayer";
  }
  protected:
  explicit CMsgMatchPlayerDamageMatrix_DamageToPlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDamageFieldNumber = 2,
    kTargetPlayerSlotFieldNumber = 1,
  };
  // repeated uint32 damage = 2 [packed = true];
  int damage_size() const;
  private:
  int _internal_damage_size() const;
  public:
  void clear_damage();
  private:
  uint32_t _internal_damage(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_damage() const;
  void _internal_add_damage(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_damage();
  public:
  uint32_t damage(int index) const;
  void set_damage(int index, uint32_t value);
  void add_damage(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      damage() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_damage();

  // optional uint32 target_player_slot = 1;
  bool has_target_player_slot() const;
  private:
  bool _internal_has_target_player_slot() const;
  public:
  void clear_target_player_slot();
  uint32_t target_player_slot() const;
  void set_target_player_slot(uint32_t value);
  private:
  uint32_t _internal_target_player_slot() const;
  void _internal_set_target_player_slot(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchPlayerDamageMatrix.DamageToPlayer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > damage_;
    mutable std::atomic<int> _damage_cached_byte_size_;
    uint32_t target_player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchPlayerDamageMatrix_DamageSource /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchPlayerDamageMatrix.DamageSource) */ {
 public:
  inline CMsgMatchPlayerDamageMatrix_DamageSource() : CMsgMatchPlayerDamageMatrix_DamageSource(nullptr) {}
  ~CMsgMatchPlayerDamageMatrix_DamageSource() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchPlayerDamageMatrix_DamageSource(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchPlayerDamageMatrix_DamageSource(const CMsgMatchPlayerDamageMatrix_DamageSource& from);
  CMsgMatchPlayerDamageMatrix_DamageSource(CMsgMatchPlayerDamageMatrix_DamageSource&& from) noexcept
    : CMsgMatchPlayerDamageMatrix_DamageSource() {
    *this = ::std::move(from);
  }

  inline CMsgMatchPlayerDamageMatrix_DamageSource& operator=(const CMsgMatchPlayerDamageMatrix_DamageSource& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchPlayerDamageMatrix_DamageSource& operator=(CMsgMatchPlayerDamageMatrix_DamageSource&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchPlayerDamageMatrix_DamageSource& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchPlayerDamageMatrix_DamageSource* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchPlayerDamageMatrix_DamageSource*>(
               &_CMsgMatchPlayerDamageMatrix_DamageSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgMatchPlayerDamageMatrix_DamageSource& a, CMsgMatchPlayerDamageMatrix_DamageSource& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchPlayerDamageMatrix_DamageSource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchPlayerDamageMatrix_DamageSource* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchPlayerDamageMatrix_DamageSource* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchPlayerDamageMatrix_DamageSource>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchPlayerDamageMatrix_DamageSource& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchPlayerDamageMatrix_DamageSource& from) {
    CMsgMatchPlayerDamageMatrix_DamageSource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchPlayerDamageMatrix_DamageSource* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchPlayerDamageMatrix.DamageSource";
  }
  protected:
  explicit CMsgMatchPlayerDamageMatrix_DamageSource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDamageToPlayersFieldNumber = 2,
    kSourceDetailsIndexFieldNumber = 4,
  };
  // repeated .CMsgMatchPlayerDamageMatrix.DamageToPlayer damage_to_players = 2;
  int damage_to_players_size() const;
  private:
  int _internal_damage_to_players_size() const;
  public:
  void clear_damage_to_players();
  ::CMsgMatchPlayerDamageMatrix_DamageToPlayer* mutable_damage_to_players(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageToPlayer >*
      mutable_damage_to_players();
  private:
  const ::CMsgMatchPlayerDamageMatrix_DamageToPlayer& _internal_damage_to_players(int index) const;
  ::CMsgMatchPlayerDamageMatrix_DamageToPlayer* _internal_add_damage_to_players();
  public:
  const ::CMsgMatchPlayerDamageMatrix_DamageToPlayer& damage_to_players(int index) const;
  ::CMsgMatchPlayerDamageMatrix_DamageToPlayer* add_damage_to_players();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageToPlayer >&
      damage_to_players() const;

  // optional uint32 source_details_index = 4;
  bool has_source_details_index() const;
  private:
  bool _internal_has_source_details_index() const;
  public:
  void clear_source_details_index();
  uint32_t source_details_index() const;
  void set_source_details_index(uint32_t value);
  private:
  uint32_t _internal_source_details_index() const;
  void _internal_set_source_details_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchPlayerDamageMatrix.DamageSource)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageToPlayer > damage_to_players_;
    uint32_t source_details_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchPlayerDamageMatrix_DamageDealer /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchPlayerDamageMatrix.DamageDealer) */ {
 public:
  inline CMsgMatchPlayerDamageMatrix_DamageDealer() : CMsgMatchPlayerDamageMatrix_DamageDealer(nullptr) {}
  ~CMsgMatchPlayerDamageMatrix_DamageDealer() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchPlayerDamageMatrix_DamageDealer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchPlayerDamageMatrix_DamageDealer(const CMsgMatchPlayerDamageMatrix_DamageDealer& from);
  CMsgMatchPlayerDamageMatrix_DamageDealer(CMsgMatchPlayerDamageMatrix_DamageDealer&& from) noexcept
    : CMsgMatchPlayerDamageMatrix_DamageDealer() {
    *this = ::std::move(from);
  }

  inline CMsgMatchPlayerDamageMatrix_DamageDealer& operator=(const CMsgMatchPlayerDamageMatrix_DamageDealer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchPlayerDamageMatrix_DamageDealer& operator=(CMsgMatchPlayerDamageMatrix_DamageDealer&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchPlayerDamageMatrix_DamageDealer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchPlayerDamageMatrix_DamageDealer* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchPlayerDamageMatrix_DamageDealer*>(
               &_CMsgMatchPlayerDamageMatrix_DamageDealer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgMatchPlayerDamageMatrix_DamageDealer& a, CMsgMatchPlayerDamageMatrix_DamageDealer& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchPlayerDamageMatrix_DamageDealer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchPlayerDamageMatrix_DamageDealer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchPlayerDamageMatrix_DamageDealer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchPlayerDamageMatrix_DamageDealer>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchPlayerDamageMatrix_DamageDealer& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchPlayerDamageMatrix_DamageDealer& from) {
    CMsgMatchPlayerDamageMatrix_DamageDealer::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchPlayerDamageMatrix_DamageDealer* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchPlayerDamageMatrix.DamageDealer";
  }
  protected:
  explicit CMsgMatchPlayerDamageMatrix_DamageDealer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDamageSourcesFieldNumber = 2,
    kDealerPlayerSlotFieldNumber = 1,
  };
  // repeated .CMsgMatchPlayerDamageMatrix.DamageSource damage_sources = 2;
  int damage_sources_size() const;
  private:
  int _internal_damage_sources_size() const;
  public:
  void clear_damage_sources();
  ::CMsgMatchPlayerDamageMatrix_DamageSource* mutable_damage_sources(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageSource >*
      mutable_damage_sources();
  private:
  const ::CMsgMatchPlayerDamageMatrix_DamageSource& _internal_damage_sources(int index) const;
  ::CMsgMatchPlayerDamageMatrix_DamageSource* _internal_add_damage_sources();
  public:
  const ::CMsgMatchPlayerDamageMatrix_DamageSource& damage_sources(int index) const;
  ::CMsgMatchPlayerDamageMatrix_DamageSource* add_damage_sources();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageSource >&
      damage_sources() const;

  // optional uint32 dealer_player_slot = 1;
  bool has_dealer_player_slot() const;
  private:
  bool _internal_has_dealer_player_slot() const;
  public:
  void clear_dealer_player_slot();
  uint32_t dealer_player_slot() const;
  void set_dealer_player_slot(uint32_t value);
  private:
  uint32_t _internal_dealer_player_slot() const;
  void _internal_set_dealer_player_slot(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchPlayerDamageMatrix.DamageDealer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageSource > damage_sources_;
    uint32_t dealer_player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchPlayerDamageMatrix_SourceDetails /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchPlayerDamageMatrix.SourceDetails) */ {
 public:
  inline CMsgMatchPlayerDamageMatrix_SourceDetails() : CMsgMatchPlayerDamageMatrix_SourceDetails(nullptr) {}
  ~CMsgMatchPlayerDamageMatrix_SourceDetails() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchPlayerDamageMatrix_SourceDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchPlayerDamageMatrix_SourceDetails(const CMsgMatchPlayerDamageMatrix_SourceDetails& from);
  CMsgMatchPlayerDamageMatrix_SourceDetails(CMsgMatchPlayerDamageMatrix_SourceDetails&& from) noexcept
    : CMsgMatchPlayerDamageMatrix_SourceDetails() {
    *this = ::std::move(from);
  }

  inline CMsgMatchPlayerDamageMatrix_SourceDetails& operator=(const CMsgMatchPlayerDamageMatrix_SourceDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchPlayerDamageMatrix_SourceDetails& operator=(CMsgMatchPlayerDamageMatrix_SourceDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchPlayerDamageMatrix_SourceDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchPlayerDamageMatrix_SourceDetails* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchPlayerDamageMatrix_SourceDetails*>(
               &_CMsgMatchPlayerDamageMatrix_SourceDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgMatchPlayerDamageMatrix_SourceDetails& a, CMsgMatchPlayerDamageMatrix_SourceDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchPlayerDamageMatrix_SourceDetails* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchPlayerDamageMatrix_SourceDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchPlayerDamageMatrix_SourceDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchPlayerDamageMatrix_SourceDetails>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchPlayerDamageMatrix_SourceDetails& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchPlayerDamageMatrix_SourceDetails& from) {
    CMsgMatchPlayerDamageMatrix_SourceDetails::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchPlayerDamageMatrix_SourceDetails* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchPlayerDamageMatrix.SourceDetails";
  }
  protected:
  explicit CMsgMatchPlayerDamageMatrix_SourceDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatTypeFieldNumber = 1,
    kSourceNameFieldNumber = 2,
  };
  // repeated .CMsgMatchPlayerDamageMatrix.EStatType stat_type = 1 [packed = true];
  int stat_type_size() const;
  private:
  int _internal_stat_type_size() const;
  public:
  void clear_stat_type();
  private:
  ::CMsgMatchPlayerDamageMatrix_EStatType _internal_stat_type(int index) const;
  void _internal_add_stat_type(::CMsgMatchPlayerDamageMatrix_EStatType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_stat_type();
  public:
  ::CMsgMatchPlayerDamageMatrix_EStatType stat_type(int index) const;
  void set_stat_type(int index, ::CMsgMatchPlayerDamageMatrix_EStatType value);
  void add_stat_type(::CMsgMatchPlayerDamageMatrix_EStatType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& stat_type() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_stat_type();

  // repeated string source_name = 2;
  int source_name_size() const;
  private:
  int _internal_source_name_size() const;
  public:
  void clear_source_name();
  const std::string& source_name(int index) const;
  std::string* mutable_source_name(int index);
  void set_source_name(int index, const std::string& value);
  void set_source_name(int index, std::string&& value);
  void set_source_name(int index, const char* value);
  void set_source_name(int index, const char* value, size_t size);
  std::string* add_source_name();
  void add_source_name(const std::string& value);
  void add_source_name(std::string&& value);
  void add_source_name(const char* value);
  void add_source_name(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& source_name() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_source_name();
  private:
  const std::string& _internal_source_name(int index) const;
  std::string* _internal_add_source_name();
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchPlayerDamageMatrix.SourceDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> stat_type_;
    mutable std::atomic<int> _stat_type_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> source_name_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchPlayerDamageMatrix /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchPlayerDamageMatrix) */ {
 public:
  inline CMsgMatchPlayerDamageMatrix() : CMsgMatchPlayerDamageMatrix(nullptr) {}
  ~CMsgMatchPlayerDamageMatrix() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchPlayerDamageMatrix(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchPlayerDamageMatrix(const CMsgMatchPlayerDamageMatrix& from);
  CMsgMatchPlayerDamageMatrix(CMsgMatchPlayerDamageMatrix&& from) noexcept
    : CMsgMatchPlayerDamageMatrix() {
    *this = ::std::move(from);
  }

  inline CMsgMatchPlayerDamageMatrix& operator=(const CMsgMatchPlayerDamageMatrix& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchPlayerDamageMatrix& operator=(CMsgMatchPlayerDamageMatrix&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchPlayerDamageMatrix& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchPlayerDamageMatrix* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchPlayerDamageMatrix*>(
               &_CMsgMatchPlayerDamageMatrix_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgMatchPlayerDamageMatrix& a, CMsgMatchPlayerDamageMatrix& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchPlayerDamageMatrix* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchPlayerDamageMatrix* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchPlayerDamageMatrix* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchPlayerDamageMatrix>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchPlayerDamageMatrix& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchPlayerDamageMatrix& from) {
    CMsgMatchPlayerDamageMatrix::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchPlayerDamageMatrix* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchPlayerDamageMatrix";
  }
  protected:
  explicit CMsgMatchPlayerDamageMatrix(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CMsgMatchPlayerDamageMatrix_DamageToPlayer DamageToPlayer;
  typedef CMsgMatchPlayerDamageMatrix_DamageSource DamageSource;
  typedef CMsgMatchPlayerDamageMatrix_DamageDealer DamageDealer;
  typedef CMsgMatchPlayerDamageMatrix_SourceDetails SourceDetails;

  typedef CMsgMatchPlayerDamageMatrix_EStatType EStatType;
  static constexpr EStatType k_eType_Damage =
    CMsgMatchPlayerDamageMatrix_EStatType_k_eType_Damage;
  static constexpr EStatType k_eType_Healing =
    CMsgMatchPlayerDamageMatrix_EStatType_k_eType_Healing;
  static constexpr EStatType k_eType_HealPrevented =
    CMsgMatchPlayerDamageMatrix_EStatType_k_eType_HealPrevented;
  static constexpr EStatType k_eType_Mitigated =
    CMsgMatchPlayerDamageMatrix_EStatType_k_eType_Mitigated;
  static constexpr EStatType k_eType_LethalDamage =
    CMsgMatchPlayerDamageMatrix_EStatType_k_eType_LethalDamage;
  static inline bool EStatType_IsValid(int value) {
    return CMsgMatchPlayerDamageMatrix_EStatType_IsValid(value);
  }
  static constexpr EStatType EStatType_MIN =
    CMsgMatchPlayerDamageMatrix_EStatType_EStatType_MIN;
  static constexpr EStatType EStatType_MAX =
    CMsgMatchPlayerDamageMatrix_EStatType_EStatType_MAX;
  static constexpr int EStatType_ARRAYSIZE =
    CMsgMatchPlayerDamageMatrix_EStatType_EStatType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EStatType_descriptor() {
    return CMsgMatchPlayerDamageMatrix_EStatType_descriptor();
  }
  template<typename T>
  static inline const std::string& EStatType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EStatType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EStatType_Name.");
    return CMsgMatchPlayerDamageMatrix_EStatType_Name(enum_t_value);
  }
  static inline bool EStatType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EStatType* value) {
    return CMsgMatchPlayerDamageMatrix_EStatType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kDamageDealersFieldNumber = 1,
    kSampleTimeSFieldNumber = 2,
    kSourceDetailsFieldNumber = 3,
  };
  // repeated .CMsgMatchPlayerDamageMatrix.DamageDealer damage_dealers = 1;
  int damage_dealers_size() const;
  private:
  int _internal_damage_dealers_size() const;
  public:
  void clear_damage_dealers();
  ::CMsgMatchPlayerDamageMatrix_DamageDealer* mutable_damage_dealers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageDealer >*
      mutable_damage_dealers();
  private:
  const ::CMsgMatchPlayerDamageMatrix_DamageDealer& _internal_damage_dealers(int index) const;
  ::CMsgMatchPlayerDamageMatrix_DamageDealer* _internal_add_damage_dealers();
  public:
  const ::CMsgMatchPlayerDamageMatrix_DamageDealer& damage_dealers(int index) const;
  ::CMsgMatchPlayerDamageMatrix_DamageDealer* add_damage_dealers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageDealer >&
      damage_dealers() const;

  // repeated uint32 sample_time_s = 2 [packed = true];
  int sample_time_s_size() const;
  private:
  int _internal_sample_time_s_size() const;
  public:
  void clear_sample_time_s();
  private:
  uint32_t _internal_sample_time_s(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_sample_time_s() const;
  void _internal_add_sample_time_s(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_sample_time_s();
  public:
  uint32_t sample_time_s(int index) const;
  void set_sample_time_s(int index, uint32_t value);
  void add_sample_time_s(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      sample_time_s() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_sample_time_s();

  // optional .CMsgMatchPlayerDamageMatrix.SourceDetails source_details = 3;
  bool has_source_details() const;
  private:
  bool _internal_has_source_details() const;
  public:
  void clear_source_details();
  const ::CMsgMatchPlayerDamageMatrix_SourceDetails& source_details() const;
  PROTOBUF_NODISCARD ::CMsgMatchPlayerDamageMatrix_SourceDetails* release_source_details();
  ::CMsgMatchPlayerDamageMatrix_SourceDetails* mutable_source_details();
  void set_allocated_source_details(::CMsgMatchPlayerDamageMatrix_SourceDetails* source_details);
  private:
  const ::CMsgMatchPlayerDamageMatrix_SourceDetails& _internal_source_details() const;
  ::CMsgMatchPlayerDamageMatrix_SourceDetails* _internal_mutable_source_details();
  public:
  void unsafe_arena_set_allocated_source_details(
      ::CMsgMatchPlayerDamageMatrix_SourceDetails* source_details);
  ::CMsgMatchPlayerDamageMatrix_SourceDetails* unsafe_arena_release_source_details();

  // @@protoc_insertion_point(class_scope:CMsgMatchPlayerDamageMatrix)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageDealer > damage_dealers_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > sample_time_s_;
    mutable std::atomic<int> _sample_time_s_cached_byte_size_;
    ::CMsgMatchPlayerDamageMatrix_SourceDetails* source_details_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_Position /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.Position) */ {
 public:
  inline CMsgMatchMetaDataContents_Position() : CMsgMatchMetaDataContents_Position(nullptr) {}
  ~CMsgMatchMetaDataContents_Position() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_Position(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_Position(const CMsgMatchMetaDataContents_Position& from);
  CMsgMatchMetaDataContents_Position(CMsgMatchMetaDataContents_Position&& from) noexcept
    : CMsgMatchMetaDataContents_Position() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_Position& operator=(const CMsgMatchMetaDataContents_Position& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_Position& operator=(CMsgMatchMetaDataContents_Position&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_Position& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_Position* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_Position*>(
               &_CMsgMatchMetaDataContents_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgMatchMetaDataContents_Position& a, CMsgMatchMetaDataContents_Position& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_Position* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_Position* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_Position* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_Position>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_Position& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_Position& from) {
    CMsgMatchMetaDataContents_Position::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_Position* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.Position";
  }
  protected:
  explicit CMsgMatchMetaDataContents_Position(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // optional float x = 1;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // optional float y = 2;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // optional float z = 3;
  bool has_z() const;
  private:
  bool _internal_has_z() const;
  public:
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.Position)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    float x_;
    float y_;
    float z_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_Deaths /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.Deaths) */ {
 public:
  inline CMsgMatchMetaDataContents_Deaths() : CMsgMatchMetaDataContents_Deaths(nullptr) {}
  ~CMsgMatchMetaDataContents_Deaths() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_Deaths(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_Deaths(const CMsgMatchMetaDataContents_Deaths& from);
  CMsgMatchMetaDataContents_Deaths(CMsgMatchMetaDataContents_Deaths&& from) noexcept
    : CMsgMatchMetaDataContents_Deaths() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_Deaths& operator=(const CMsgMatchMetaDataContents_Deaths& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_Deaths& operator=(CMsgMatchMetaDataContents_Deaths&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_Deaths& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_Deaths* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_Deaths*>(
               &_CMsgMatchMetaDataContents_Deaths_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgMatchMetaDataContents_Deaths& a, CMsgMatchMetaDataContents_Deaths& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_Deaths* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_Deaths* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_Deaths* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_Deaths>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_Deaths& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_Deaths& from) {
    CMsgMatchMetaDataContents_Deaths::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_Deaths* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.Deaths";
  }
  protected:
  explicit CMsgMatchMetaDataContents_Deaths(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeathPosFieldNumber = 10,
    kKillerPosFieldNumber = 11,
    kGameTimeSFieldNumber = 1,
    kKillerPlayerSlotFieldNumber = 9,
    kDeathDurationSFieldNumber = 12,
  };
  // optional .CMsgMatchMetaDataContents.Position death_pos = 10;
  bool has_death_pos() const;
  private:
  bool _internal_has_death_pos() const;
  public:
  void clear_death_pos();
  const ::CMsgMatchMetaDataContents_Position& death_pos() const;
  PROTOBUF_NODISCARD ::CMsgMatchMetaDataContents_Position* release_death_pos();
  ::CMsgMatchMetaDataContents_Position* mutable_death_pos();
  void set_allocated_death_pos(::CMsgMatchMetaDataContents_Position* death_pos);
  private:
  const ::CMsgMatchMetaDataContents_Position& _internal_death_pos() const;
  ::CMsgMatchMetaDataContents_Position* _internal_mutable_death_pos();
  public:
  void unsafe_arena_set_allocated_death_pos(
      ::CMsgMatchMetaDataContents_Position* death_pos);
  ::CMsgMatchMetaDataContents_Position* unsafe_arena_release_death_pos();

  // optional .CMsgMatchMetaDataContents.Position killer_pos = 11;
  bool has_killer_pos() const;
  private:
  bool _internal_has_killer_pos() const;
  public:
  void clear_killer_pos();
  const ::CMsgMatchMetaDataContents_Position& killer_pos() const;
  PROTOBUF_NODISCARD ::CMsgMatchMetaDataContents_Position* release_killer_pos();
  ::CMsgMatchMetaDataContents_Position* mutable_killer_pos();
  void set_allocated_killer_pos(::CMsgMatchMetaDataContents_Position* killer_pos);
  private:
  const ::CMsgMatchMetaDataContents_Position& _internal_killer_pos() const;
  ::CMsgMatchMetaDataContents_Position* _internal_mutable_killer_pos();
  public:
  void unsafe_arena_set_allocated_killer_pos(
      ::CMsgMatchMetaDataContents_Position* killer_pos);
  ::CMsgMatchMetaDataContents_Position* unsafe_arena_release_killer_pos();

  // optional uint32 game_time_s = 1;
  bool has_game_time_s() const;
  private:
  bool _internal_has_game_time_s() const;
  public:
  void clear_game_time_s();
  uint32_t game_time_s() const;
  void set_game_time_s(uint32_t value);
  private:
  uint32_t _internal_game_time_s() const;
  void _internal_set_game_time_s(uint32_t value);
  public:

  // optional uint32 killer_player_slot = 9;
  bool has_killer_player_slot() const;
  private:
  bool _internal_has_killer_player_slot() const;
  public:
  void clear_killer_player_slot();
  uint32_t killer_player_slot() const;
  void set_killer_player_slot(uint32_t value);
  private:
  uint32_t _internal_killer_player_slot() const;
  void _internal_set_killer_player_slot(uint32_t value);
  public:

  // optional uint32 death_duration_s = 12;
  bool has_death_duration_s() const;
  private:
  bool _internal_has_death_duration_s() const;
  public:
  void clear_death_duration_s();
  uint32_t death_duration_s() const;
  void set_death_duration_s(uint32_t value);
  private:
  uint32_t _internal_death_duration_s() const;
  void _internal_set_death_duration_s(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.Deaths)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgMatchMetaDataContents_Position* death_pos_;
    ::CMsgMatchMetaDataContents_Position* killer_pos_;
    uint32_t game_time_s_;
    uint32_t killer_player_slot_;
    uint32_t death_duration_s_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_Items /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.Items) */ {
 public:
  inline CMsgMatchMetaDataContents_Items() : CMsgMatchMetaDataContents_Items(nullptr) {}
  ~CMsgMatchMetaDataContents_Items() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_Items(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_Items(const CMsgMatchMetaDataContents_Items& from);
  CMsgMatchMetaDataContents_Items(CMsgMatchMetaDataContents_Items&& from) noexcept
    : CMsgMatchMetaDataContents_Items() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_Items& operator=(const CMsgMatchMetaDataContents_Items& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_Items& operator=(CMsgMatchMetaDataContents_Items&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_Items& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_Items* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_Items*>(
               &_CMsgMatchMetaDataContents_Items_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgMatchMetaDataContents_Items& a, CMsgMatchMetaDataContents_Items& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_Items* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_Items* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_Items* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_Items>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_Items& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_Items& from) {
    CMsgMatchMetaDataContents_Items::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_Items* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.Items";
  }
  protected:
  explicit CMsgMatchMetaDataContents_Items(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameTimeSFieldNumber = 1,
    kItemIdFieldNumber = 2,
    kUpgradeIdFieldNumber = 3,
    kSoldTimeSFieldNumber = 4,
    kFlagsFieldNumber = 5,
    kImbuedAbilityIdFieldNumber = 6,
  };
  // optional uint32 game_time_s = 1;
  bool has_game_time_s() const;
  private:
  bool _internal_has_game_time_s() const;
  public:
  void clear_game_time_s();
  uint32_t game_time_s() const;
  void set_game_time_s(uint32_t value);
  private:
  uint32_t _internal_game_time_s() const;
  void _internal_set_game_time_s(uint32_t value);
  public:

  // optional uint32 item_id = 2;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  uint32_t item_id() const;
  void set_item_id(uint32_t value);
  private:
  uint32_t _internal_item_id() const;
  void _internal_set_item_id(uint32_t value);
  public:

  // optional uint32 upgrade_id = 3;
  bool has_upgrade_id() const;
  private:
  bool _internal_has_upgrade_id() const;
  public:
  void clear_upgrade_id();
  uint32_t upgrade_id() const;
  void set_upgrade_id(uint32_t value);
  private:
  uint32_t _internal_upgrade_id() const;
  void _internal_set_upgrade_id(uint32_t value);
  public:

  // optional uint32 sold_time_s = 4;
  bool has_sold_time_s() const;
  private:
  bool _internal_has_sold_time_s() const;
  public:
  void clear_sold_time_s();
  uint32_t sold_time_s() const;
  void set_sold_time_s(uint32_t value);
  private:
  uint32_t _internal_sold_time_s() const;
  void _internal_set_sold_time_s(uint32_t value);
  public:

  // optional uint32 flags = 5;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  uint32_t flags() const;
  void set_flags(uint32_t value);
  private:
  uint32_t _internal_flags() const;
  void _internal_set_flags(uint32_t value);
  public:

  // optional uint32 imbued_ability_id = 6;
  bool has_imbued_ability_id() const;
  private:
  bool _internal_has_imbued_ability_id() const;
  public:
  void clear_imbued_ability_id();
  uint32_t imbued_ability_id() const;
  void set_imbued_ability_id(uint32_t value);
  private:
  uint32_t _internal_imbued_ability_id() const;
  void _internal_set_imbued_ability_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.Items)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t game_time_s_;
    uint32_t item_id_;
    uint32_t upgrade_id_;
    uint32_t sold_time_s_;
    uint32_t flags_;
    uint32_t imbued_ability_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_Ping /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.Ping) */ {
 public:
  inline CMsgMatchMetaDataContents_Ping() : CMsgMatchMetaDataContents_Ping(nullptr) {}
  ~CMsgMatchMetaDataContents_Ping() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_Ping(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_Ping(const CMsgMatchMetaDataContents_Ping& from);
  CMsgMatchMetaDataContents_Ping(CMsgMatchMetaDataContents_Ping&& from) noexcept
    : CMsgMatchMetaDataContents_Ping() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_Ping& operator=(const CMsgMatchMetaDataContents_Ping& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_Ping& operator=(CMsgMatchMetaDataContents_Ping&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_Ping& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_Ping* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_Ping*>(
               &_CMsgMatchMetaDataContents_Ping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgMatchMetaDataContents_Ping& a, CMsgMatchMetaDataContents_Ping& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_Ping* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_Ping* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_Ping* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_Ping>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_Ping& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_Ping& from) {
    CMsgMatchMetaDataContents_Ping::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_Ping* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.Ping";
  }
  protected:
  explicit CMsgMatchMetaDataContents_Ping(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPingTypeFieldNumber = 1,
    kPingDataFieldNumber = 2,
    kGameTimeSFieldNumber = 3,
  };
  // optional uint32 ping_type = 1;
  bool has_ping_type() const;
  private:
  bool _internal_has_ping_type() const;
  public:
  void clear_ping_type();
  uint32_t ping_type() const;
  void set_ping_type(uint32_t value);
  private:
  uint32_t _internal_ping_type() const;
  void _internal_set_ping_type(uint32_t value);
  public:

  // optional uint32 ping_data = 2;
  bool has_ping_data() const;
  private:
  bool _internal_has_ping_data() const;
  public:
  void clear_ping_data();
  uint32_t ping_data() const;
  void set_ping_data(uint32_t value);
  private:
  uint32_t _internal_ping_data() const;
  void _internal_set_ping_data(uint32_t value);
  public:

  // optional uint32 game_time_s = 3;
  bool has_game_time_s() const;
  private:
  bool _internal_has_game_time_s() const;
  public:
  void clear_game_time_s();
  uint32_t game_time_s() const;
  void set_game_time_s(uint32_t value);
  private:
  uint32_t _internal_game_time_s() const;
  void _internal_set_game_time_s(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.Ping)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t ping_type_;
    uint32_t ping_data_;
    uint32_t game_time_s_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_GoldSource /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.GoldSource) */ {
 public:
  inline CMsgMatchMetaDataContents_GoldSource() : CMsgMatchMetaDataContents_GoldSource(nullptr) {}
  ~CMsgMatchMetaDataContents_GoldSource() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_GoldSource(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_GoldSource(const CMsgMatchMetaDataContents_GoldSource& from);
  CMsgMatchMetaDataContents_GoldSource(CMsgMatchMetaDataContents_GoldSource&& from) noexcept
    : CMsgMatchMetaDataContents_GoldSource() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_GoldSource& operator=(const CMsgMatchMetaDataContents_GoldSource& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_GoldSource& operator=(CMsgMatchMetaDataContents_GoldSource&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_GoldSource& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_GoldSource* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_GoldSource*>(
               &_CMsgMatchMetaDataContents_GoldSource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMsgMatchMetaDataContents_GoldSource& a, CMsgMatchMetaDataContents_GoldSource& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_GoldSource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_GoldSource* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_GoldSource* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_GoldSource>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_GoldSource& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_GoldSource& from) {
    CMsgMatchMetaDataContents_GoldSource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_GoldSource* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.GoldSource";
  }
  protected:
  explicit CMsgMatchMetaDataContents_GoldSource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKillsFieldNumber = 2,
    kDamageFieldNumber = 3,
    kGoldFieldNumber = 4,
    kGoldOrbsFieldNumber = 5,
    kSourceFieldNumber = 1,
  };
  // optional uint32 kills = 2;
  bool has_kills() const;
  private:
  bool _internal_has_kills() const;
  public:
  void clear_kills();
  uint32_t kills() const;
  void set_kills(uint32_t value);
  private:
  uint32_t _internal_kills() const;
  void _internal_set_kills(uint32_t value);
  public:

  // optional uint32 damage = 3;
  bool has_damage() const;
  private:
  bool _internal_has_damage() const;
  public:
  void clear_damage();
  uint32_t damage() const;
  void set_damage(uint32_t value);
  private:
  uint32_t _internal_damage() const;
  void _internal_set_damage(uint32_t value);
  public:

  // optional uint32 gold = 4;
  bool has_gold() const;
  private:
  bool _internal_has_gold() const;
  public:
  void clear_gold();
  uint32_t gold() const;
  void set_gold(uint32_t value);
  private:
  uint32_t _internal_gold() const;
  void _internal_set_gold(uint32_t value);
  public:

  // optional uint32 gold_orbs = 5;
  bool has_gold_orbs() const;
  private:
  bool _internal_has_gold_orbs() const;
  public:
  void clear_gold_orbs();
  uint32_t gold_orbs() const;
  void set_gold_orbs(uint32_t value);
  private:
  uint32_t _internal_gold_orbs() const;
  void _internal_set_gold_orbs(uint32_t value);
  public:

  // optional .CMsgMatchMetaDataContents.EGoldSource source = 1 [default = k_ePlayers];
  bool has_source() const;
  private:
  bool _internal_has_source() const;
  public:
  void clear_source();
  ::CMsgMatchMetaDataContents_EGoldSource source() const;
  void set_source(::CMsgMatchMetaDataContents_EGoldSource value);
  private:
  ::CMsgMatchMetaDataContents_EGoldSource _internal_source() const;
  void _internal_set_source(::CMsgMatchMetaDataContents_EGoldSource value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.GoldSource)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t kills_;
    uint32_t damage_;
    uint32_t gold_;
    uint32_t gold_orbs_;
    int source_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_CustomUserStatInfo /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.CustomUserStatInfo) */ {
 public:
  inline CMsgMatchMetaDataContents_CustomUserStatInfo() : CMsgMatchMetaDataContents_CustomUserStatInfo(nullptr) {}
  ~CMsgMatchMetaDataContents_CustomUserStatInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_CustomUserStatInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_CustomUserStatInfo(const CMsgMatchMetaDataContents_CustomUserStatInfo& from);
  CMsgMatchMetaDataContents_CustomUserStatInfo(CMsgMatchMetaDataContents_CustomUserStatInfo&& from) noexcept
    : CMsgMatchMetaDataContents_CustomUserStatInfo() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_CustomUserStatInfo& operator=(const CMsgMatchMetaDataContents_CustomUserStatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_CustomUserStatInfo& operator=(CMsgMatchMetaDataContents_CustomUserStatInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_CustomUserStatInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_CustomUserStatInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_CustomUserStatInfo*>(
               &_CMsgMatchMetaDataContents_CustomUserStatInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CMsgMatchMetaDataContents_CustomUserStatInfo& a, CMsgMatchMetaDataContents_CustomUserStatInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_CustomUserStatInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_CustomUserStatInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_CustomUserStatInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_CustomUserStatInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_CustomUserStatInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_CustomUserStatInfo& from) {
    CMsgMatchMetaDataContents_CustomUserStatInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_CustomUserStatInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.CustomUserStatInfo";
  }
  protected:
  explicit CMsgMatchMetaDataContents_CustomUserStatInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kIdFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.CustomUserStatInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    uint32_t id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_CustomUserStat /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.CustomUserStat) */ {
 public:
  inline CMsgMatchMetaDataContents_CustomUserStat() : CMsgMatchMetaDataContents_CustomUserStat(nullptr) {}
  ~CMsgMatchMetaDataContents_CustomUserStat() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_CustomUserStat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_CustomUserStat(const CMsgMatchMetaDataContents_CustomUserStat& from);
  CMsgMatchMetaDataContents_CustomUserStat(CMsgMatchMetaDataContents_CustomUserStat&& from) noexcept
    : CMsgMatchMetaDataContents_CustomUserStat() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_CustomUserStat& operator=(const CMsgMatchMetaDataContents_CustomUserStat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_CustomUserStat& operator=(CMsgMatchMetaDataContents_CustomUserStat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_CustomUserStat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_CustomUserStat* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_CustomUserStat*>(
               &_CMsgMatchMetaDataContents_CustomUserStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CMsgMatchMetaDataContents_CustomUserStat& a, CMsgMatchMetaDataContents_CustomUserStat& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_CustomUserStat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_CustomUserStat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_CustomUserStat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_CustomUserStat>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_CustomUserStat& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_CustomUserStat& from) {
    CMsgMatchMetaDataContents_CustomUserStat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_CustomUserStat* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.CustomUserStat";
  }
  protected:
  explicit CMsgMatchMetaDataContents_CustomUserStat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kIdFieldNumber = 3,
  };
  // optional uint32 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  uint32_t value() const;
  void set_value(uint32_t value);
  private:
  uint32_t _internal_value() const;
  void _internal_set_value(uint32_t value);
  public:

  // optional uint32 id = 3;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.CustomUserStat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t value_;
    uint32_t id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_PlayerStats /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.PlayerStats) */ {
 public:
  inline CMsgMatchMetaDataContents_PlayerStats() : CMsgMatchMetaDataContents_PlayerStats(nullptr) {}
  ~CMsgMatchMetaDataContents_PlayerStats() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_PlayerStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_PlayerStats(const CMsgMatchMetaDataContents_PlayerStats& from);
  CMsgMatchMetaDataContents_PlayerStats(CMsgMatchMetaDataContents_PlayerStats&& from) noexcept
    : CMsgMatchMetaDataContents_PlayerStats() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_PlayerStats& operator=(const CMsgMatchMetaDataContents_PlayerStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_PlayerStats& operator=(CMsgMatchMetaDataContents_PlayerStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_PlayerStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_PlayerStats* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_PlayerStats*>(
               &_CMsgMatchMetaDataContents_PlayerStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgMatchMetaDataContents_PlayerStats& a, CMsgMatchMetaDataContents_PlayerStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_PlayerStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_PlayerStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_PlayerStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_PlayerStats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_PlayerStats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_PlayerStats& from) {
    CMsgMatchMetaDataContents_PlayerStats::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_PlayerStats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.PlayerStats";
  }
  protected:
  explicit CMsgMatchMetaDataContents_PlayerStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoldSourcesFieldNumber = 40,
    kCustomUserStatsFieldNumber = 41,
    kTimeStampSFieldNumber = 1,
    kNetWorthFieldNumber = 2,
    kGoldPlayerFieldNumber = 3,
    kGoldPlayerOrbsFieldNumber = 4,
    kGoldLaneCreepOrbsFieldNumber = 5,
    kGoldNeutralCreepOrbsFieldNumber = 6,
    kGoldBossFieldNumber = 7,
    kGoldBossOrbFieldNumber = 8,
    kGoldTreasureFieldNumber = 9,
    kGoldDeniedFieldNumber = 10,
    kGoldDeathLossFieldNumber = 11,
    kGoldLaneCreepFieldNumber = 12,
    kGoldNeutralCreepFieldNumber = 13,
    kKillsFieldNumber = 14,
    kDeathsFieldNumber = 15,
    kAssistsFieldNumber = 16,
    kCreepKillsFieldNumber = 17,
    kNeutralKillsFieldNumber = 18,
    kPossibleCreepsFieldNumber = 19,
    kCreepDamageFieldNumber = 20,
    kPlayerDamageFieldNumber = 21,
    kNeutralDamageFieldNumber = 22,
    kBossDamageFieldNumber = 23,
    kDeniesFieldNumber = 24,
    kPlayerHealingFieldNumber = 25,
    kAbilityPointsFieldNumber = 26,
    kSelfHealingFieldNumber = 27,
    kPlayerDamageTakenFieldNumber = 28,
    kMaxHealthFieldNumber = 29,
    kWeaponPowerFieldNumber = 30,
    kTechPowerFieldNumber = 31,
    kShotsHitFieldNumber = 32,
    kShotsMissedFieldNumber = 33,
    kDamageAbsorbedFieldNumber = 34,
    kAbsorptionProvidedFieldNumber = 35,
    kHeroBulletsHitFieldNumber = 36,
    kHeroBulletsHitCritFieldNumber = 37,
    kHealPreventedFieldNumber = 38,
    kHealLostFieldNumber = 39,
    kDamageMitigatedFieldNumber = 42,
    kLevelFieldNumber = 43,
  };
  // repeated .CMsgMatchMetaDataContents.GoldSource gold_sources = 40;
  int gold_sources_size() const;
  private:
  int _internal_gold_sources_size() const;
  public:
  void clear_gold_sources();
  ::CMsgMatchMetaDataContents_GoldSource* mutable_gold_sources(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_GoldSource >*
      mutable_gold_sources();
  private:
  const ::CMsgMatchMetaDataContents_GoldSource& _internal_gold_sources(int index) const;
  ::CMsgMatchMetaDataContents_GoldSource* _internal_add_gold_sources();
  public:
  const ::CMsgMatchMetaDataContents_GoldSource& gold_sources(int index) const;
  ::CMsgMatchMetaDataContents_GoldSource* add_gold_sources();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_GoldSource >&
      gold_sources() const;

  // repeated .CMsgMatchMetaDataContents.CustomUserStat custom_user_stats = 41;
  int custom_user_stats_size() const;
  private:
  int _internal_custom_user_stats_size() const;
  public:
  void clear_custom_user_stats();
  ::CMsgMatchMetaDataContents_CustomUserStat* mutable_custom_user_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_CustomUserStat >*
      mutable_custom_user_stats();
  private:
  const ::CMsgMatchMetaDataContents_CustomUserStat& _internal_custom_user_stats(int index) const;
  ::CMsgMatchMetaDataContents_CustomUserStat* _internal_add_custom_user_stats();
  public:
  const ::CMsgMatchMetaDataContents_CustomUserStat& custom_user_stats(int index) const;
  ::CMsgMatchMetaDataContents_CustomUserStat* add_custom_user_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_CustomUserStat >&
      custom_user_stats() const;

  // optional uint32 time_stamp_s = 1;
  bool has_time_stamp_s() const;
  private:
  bool _internal_has_time_stamp_s() const;
  public:
  void clear_time_stamp_s();
  uint32_t time_stamp_s() const;
  void set_time_stamp_s(uint32_t value);
  private:
  uint32_t _internal_time_stamp_s() const;
  void _internal_set_time_stamp_s(uint32_t value);
  public:

  // optional uint32 net_worth = 2;
  bool has_net_worth() const;
  private:
  bool _internal_has_net_worth() const;
  public:
  void clear_net_worth();
  uint32_t net_worth() const;
  void set_net_worth(uint32_t value);
  private:
  uint32_t _internal_net_worth() const;
  void _internal_set_net_worth(uint32_t value);
  public:

  // optional uint32 gold_player = 3;
  bool has_gold_player() const;
  private:
  bool _internal_has_gold_player() const;
  public:
  void clear_gold_player();
  uint32_t gold_player() const;
  void set_gold_player(uint32_t value);
  private:
  uint32_t _internal_gold_player() const;
  void _internal_set_gold_player(uint32_t value);
  public:

  // optional uint32 gold_player_orbs = 4;
  bool has_gold_player_orbs() const;
  private:
  bool _internal_has_gold_player_orbs() const;
  public:
  void clear_gold_player_orbs();
  uint32_t gold_player_orbs() const;
  void set_gold_player_orbs(uint32_t value);
  private:
  uint32_t _internal_gold_player_orbs() const;
  void _internal_set_gold_player_orbs(uint32_t value);
  public:

  // optional uint32 gold_lane_creep_orbs = 5;
  bool has_gold_lane_creep_orbs() const;
  private:
  bool _internal_has_gold_lane_creep_orbs() const;
  public:
  void clear_gold_lane_creep_orbs();
  uint32_t gold_lane_creep_orbs() const;
  void set_gold_lane_creep_orbs(uint32_t value);
  private:
  uint32_t _internal_gold_lane_creep_orbs() const;
  void _internal_set_gold_lane_creep_orbs(uint32_t value);
  public:

  // optional uint32 gold_neutral_creep_orbs = 6;
  bool has_gold_neutral_creep_orbs() const;
  private:
  bool _internal_has_gold_neutral_creep_orbs() const;
  public:
  void clear_gold_neutral_creep_orbs();
  uint32_t gold_neutral_creep_orbs() const;
  void set_gold_neutral_creep_orbs(uint32_t value);
  private:
  uint32_t _internal_gold_neutral_creep_orbs() const;
  void _internal_set_gold_neutral_creep_orbs(uint32_t value);
  public:

  // optional uint32 gold_boss = 7;
  bool has_gold_boss() const;
  private:
  bool _internal_has_gold_boss() const;
  public:
  void clear_gold_boss();
  uint32_t gold_boss() const;
  void set_gold_boss(uint32_t value);
  private:
  uint32_t _internal_gold_boss() const;
  void _internal_set_gold_boss(uint32_t value);
  public:

  // optional uint32 gold_boss_orb = 8;
  bool has_gold_boss_orb() const;
  private:
  bool _internal_has_gold_boss_orb() const;
  public:
  void clear_gold_boss_orb();
  uint32_t gold_boss_orb() const;
  void set_gold_boss_orb(uint32_t value);
  private:
  uint32_t _internal_gold_boss_orb() const;
  void _internal_set_gold_boss_orb(uint32_t value);
  public:

  // optional uint32 gold_treasure = 9;
  bool has_gold_treasure() const;
  private:
  bool _internal_has_gold_treasure() const;
  public:
  void clear_gold_treasure();
  uint32_t gold_treasure() const;
  void set_gold_treasure(uint32_t value);
  private:
  uint32_t _internal_gold_treasure() const;
  void _internal_set_gold_treasure(uint32_t value);
  public:

  // optional uint32 gold_denied = 10;
  bool has_gold_denied() const;
  private:
  bool _internal_has_gold_denied() const;
  public:
  void clear_gold_denied();
  uint32_t gold_denied() const;
  void set_gold_denied(uint32_t value);
  private:
  uint32_t _internal_gold_denied() const;
  void _internal_set_gold_denied(uint32_t value);
  public:

  // optional uint32 gold_death_loss = 11;
  bool has_gold_death_loss() const;
  private:
  bool _internal_has_gold_death_loss() const;
  public:
  void clear_gold_death_loss();
  uint32_t gold_death_loss() const;
  void set_gold_death_loss(uint32_t value);
  private:
  uint32_t _internal_gold_death_loss() const;
  void _internal_set_gold_death_loss(uint32_t value);
  public:

  // optional uint32 gold_lane_creep = 12;
  bool has_gold_lane_creep() const;
  private:
  bool _internal_has_gold_lane_creep() const;
  public:
  void clear_gold_lane_creep();
  uint32_t gold_lane_creep() const;
  void set_gold_lane_creep(uint32_t value);
  private:
  uint32_t _internal_gold_lane_creep() const;
  void _internal_set_gold_lane_creep(uint32_t value);
  public:

  // optional uint32 gold_neutral_creep = 13;
  bool has_gold_neutral_creep() const;
  private:
  bool _internal_has_gold_neutral_creep() const;
  public:
  void clear_gold_neutral_creep();
  uint32_t gold_neutral_creep() const;
  void set_gold_neutral_creep(uint32_t value);
  private:
  uint32_t _internal_gold_neutral_creep() const;
  void _internal_set_gold_neutral_creep(uint32_t value);
  public:

  // optional uint32 kills = 14;
  bool has_kills() const;
  private:
  bool _internal_has_kills() const;
  public:
  void clear_kills();
  uint32_t kills() const;
  void set_kills(uint32_t value);
  private:
  uint32_t _internal_kills() const;
  void _internal_set_kills(uint32_t value);
  public:

  // optional uint32 deaths = 15;
  bool has_deaths() const;
  private:
  bool _internal_has_deaths() const;
  public:
  void clear_deaths();
  uint32_t deaths() const;
  void set_deaths(uint32_t value);
  private:
  uint32_t _internal_deaths() const;
  void _internal_set_deaths(uint32_t value);
  public:

  // optional uint32 assists = 16;
  bool has_assists() const;
  private:
  bool _internal_has_assists() const;
  public:
  void clear_assists();
  uint32_t assists() const;
  void set_assists(uint32_t value);
  private:
  uint32_t _internal_assists() const;
  void _internal_set_assists(uint32_t value);
  public:

  // optional uint32 creep_kills = 17;
  bool has_creep_kills() const;
  private:
  bool _internal_has_creep_kills() const;
  public:
  void clear_creep_kills();
  uint32_t creep_kills() const;
  void set_creep_kills(uint32_t value);
  private:
  uint32_t _internal_creep_kills() const;
  void _internal_set_creep_kills(uint32_t value);
  public:

  // optional uint32 neutral_kills = 18;
  bool has_neutral_kills() const;
  private:
  bool _internal_has_neutral_kills() const;
  public:
  void clear_neutral_kills();
  uint32_t neutral_kills() const;
  void set_neutral_kills(uint32_t value);
  private:
  uint32_t _internal_neutral_kills() const;
  void _internal_set_neutral_kills(uint32_t value);
  public:

  // optional uint32 possible_creeps = 19;
  bool has_possible_creeps() const;
  private:
  bool _internal_has_possible_creeps() const;
  public:
  void clear_possible_creeps();
  uint32_t possible_creeps() const;
  void set_possible_creeps(uint32_t value);
  private:
  uint32_t _internal_possible_creeps() const;
  void _internal_set_possible_creeps(uint32_t value);
  public:

  // optional uint32 creep_damage = 20;
  bool has_creep_damage() const;
  private:
  bool _internal_has_creep_damage() const;
  public:
  void clear_creep_damage();
  uint32_t creep_damage() const;
  void set_creep_damage(uint32_t value);
  private:
  uint32_t _internal_creep_damage() const;
  void _internal_set_creep_damage(uint32_t value);
  public:

  // optional uint32 player_damage = 21;
  bool has_player_damage() const;
  private:
  bool _internal_has_player_damage() const;
  public:
  void clear_player_damage();
  uint32_t player_damage() const;
  void set_player_damage(uint32_t value);
  private:
  uint32_t _internal_player_damage() const;
  void _internal_set_player_damage(uint32_t value);
  public:

  // optional uint32 neutral_damage = 22;
  bool has_neutral_damage() const;
  private:
  bool _internal_has_neutral_damage() const;
  public:
  void clear_neutral_damage();
  uint32_t neutral_damage() const;
  void set_neutral_damage(uint32_t value);
  private:
  uint32_t _internal_neutral_damage() const;
  void _internal_set_neutral_damage(uint32_t value);
  public:

  // optional uint32 boss_damage = 23;
  bool has_boss_damage() const;
  private:
  bool _internal_has_boss_damage() const;
  public:
  void clear_boss_damage();
  uint32_t boss_damage() const;
  void set_boss_damage(uint32_t value);
  private:
  uint32_t _internal_boss_damage() const;
  void _internal_set_boss_damage(uint32_t value);
  public:

  // optional uint32 denies = 24;
  bool has_denies() const;
  private:
  bool _internal_has_denies() const;
  public:
  void clear_denies();
  uint32_t denies() const;
  void set_denies(uint32_t value);
  private:
  uint32_t _internal_denies() const;
  void _internal_set_denies(uint32_t value);
  public:

  // optional uint32 player_healing = 25;
  bool has_player_healing() const;
  private:
  bool _internal_has_player_healing() const;
  public:
  void clear_player_healing();
  uint32_t player_healing() const;
  void set_player_healing(uint32_t value);
  private:
  uint32_t _internal_player_healing() const;
  void _internal_set_player_healing(uint32_t value);
  public:

  // optional uint32 ability_points = 26;
  bool has_ability_points() const;
  private:
  bool _internal_has_ability_points() const;
  public:
  void clear_ability_points();
  uint32_t ability_points() const;
  void set_ability_points(uint32_t value);
  private:
  uint32_t _internal_ability_points() const;
  void _internal_set_ability_points(uint32_t value);
  public:

  // optional uint32 self_healing = 27;
  bool has_self_healing() const;
  private:
  bool _internal_has_self_healing() const;
  public:
  void clear_self_healing();
  uint32_t self_healing() const;
  void set_self_healing(uint32_t value);
  private:
  uint32_t _internal_self_healing() const;
  void _internal_set_self_healing(uint32_t value);
  public:

  // optional uint32 player_damage_taken = 28;
  bool has_player_damage_taken() const;
  private:
  bool _internal_has_player_damage_taken() const;
  public:
  void clear_player_damage_taken();
  uint32_t player_damage_taken() const;
  void set_player_damage_taken(uint32_t value);
  private:
  uint32_t _internal_player_damage_taken() const;
  void _internal_set_player_damage_taken(uint32_t value);
  public:

  // optional uint32 max_health = 29;
  bool has_max_health() const;
  private:
  bool _internal_has_max_health() const;
  public:
  void clear_max_health();
  uint32_t max_health() const;
  void set_max_health(uint32_t value);
  private:
  uint32_t _internal_max_health() const;
  void _internal_set_max_health(uint32_t value);
  public:

  // optional uint32 weapon_power = 30;
  bool has_weapon_power() const;
  private:
  bool _internal_has_weapon_power() const;
  public:
  void clear_weapon_power();
  uint32_t weapon_power() const;
  void set_weapon_power(uint32_t value);
  private:
  uint32_t _internal_weapon_power() const;
  void _internal_set_weapon_power(uint32_t value);
  public:

  // optional uint32 tech_power = 31;
  bool has_tech_power() const;
  private:
  bool _internal_has_tech_power() const;
  public:
  void clear_tech_power();
  uint32_t tech_power() const;
  void set_tech_power(uint32_t value);
  private:
  uint32_t _internal_tech_power() const;
  void _internal_set_tech_power(uint32_t value);
  public:

  // optional uint32 shots_hit = 32;
  bool has_shots_hit() const;
  private:
  bool _internal_has_shots_hit() const;
  public:
  void clear_shots_hit();
  uint32_t shots_hit() const;
  void set_shots_hit(uint32_t value);
  private:
  uint32_t _internal_shots_hit() const;
  void _internal_set_shots_hit(uint32_t value);
  public:

  // optional uint32 shots_missed = 33;
  bool has_shots_missed() const;
  private:
  bool _internal_has_shots_missed() const;
  public:
  void clear_shots_missed();
  uint32_t shots_missed() const;
  void set_shots_missed(uint32_t value);
  private:
  uint32_t _internal_shots_missed() const;
  void _internal_set_shots_missed(uint32_t value);
  public:

  // optional uint32 damage_absorbed = 34;
  bool has_damage_absorbed() const;
  private:
  bool _internal_has_damage_absorbed() const;
  public:
  void clear_damage_absorbed();
  uint32_t damage_absorbed() const;
  void set_damage_absorbed(uint32_t value);
  private:
  uint32_t _internal_damage_absorbed() const;
  void _internal_set_damage_absorbed(uint32_t value);
  public:

  // optional uint32 absorption_provided = 35;
  bool has_absorption_provided() const;
  private:
  bool _internal_has_absorption_provided() const;
  public:
  void clear_absorption_provided();
  uint32_t absorption_provided() const;
  void set_absorption_provided(uint32_t value);
  private:
  uint32_t _internal_absorption_provided() const;
  void _internal_set_absorption_provided(uint32_t value);
  public:

  // optional uint32 hero_bullets_hit = 36;
  bool has_hero_bullets_hit() const;
  private:
  bool _internal_has_hero_bullets_hit() const;
  public:
  void clear_hero_bullets_hit();
  uint32_t hero_bullets_hit() const;
  void set_hero_bullets_hit(uint32_t value);
  private:
  uint32_t _internal_hero_bullets_hit() const;
  void _internal_set_hero_bullets_hit(uint32_t value);
  public:

  // optional uint32 hero_bullets_hit_crit = 37;
  bool has_hero_bullets_hit_crit() const;
  private:
  bool _internal_has_hero_bullets_hit_crit() const;
  public:
  void clear_hero_bullets_hit_crit();
  uint32_t hero_bullets_hit_crit() const;
  void set_hero_bullets_hit_crit(uint32_t value);
  private:
  uint32_t _internal_hero_bullets_hit_crit() const;
  void _internal_set_hero_bullets_hit_crit(uint32_t value);
  public:

  // optional uint32 heal_prevented = 38;
  bool has_heal_prevented() const;
  private:
  bool _internal_has_heal_prevented() const;
  public:
  void clear_heal_prevented();
  uint32_t heal_prevented() const;
  void set_heal_prevented(uint32_t value);
  private:
  uint32_t _internal_heal_prevented() const;
  void _internal_set_heal_prevented(uint32_t value);
  public:

  // optional uint32 heal_lost = 39;
  bool has_heal_lost() const;
  private:
  bool _internal_has_heal_lost() const;
  public:
  void clear_heal_lost();
  uint32_t heal_lost() const;
  void set_heal_lost(uint32_t value);
  private:
  uint32_t _internal_heal_lost() const;
  void _internal_set_heal_lost(uint32_t value);
  public:

  // optional uint32 damage_mitigated = 42;
  bool has_damage_mitigated() const;
  private:
  bool _internal_has_damage_mitigated() const;
  public:
  void clear_damage_mitigated();
  uint32_t damage_mitigated() const;
  void set_damage_mitigated(uint32_t value);
  private:
  uint32_t _internal_damage_mitigated() const;
  void _internal_set_damage_mitigated(uint32_t value);
  public:

  // optional uint32 level = 43;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  uint32_t level() const;
  void set_level(uint32_t value);
  private:
  uint32_t _internal_level() const;
  void _internal_set_level(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.PlayerStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_GoldSource > gold_sources_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_CustomUserStat > custom_user_stats_;
    uint32_t time_stamp_s_;
    uint32_t net_worth_;
    uint32_t gold_player_;
    uint32_t gold_player_orbs_;
    uint32_t gold_lane_creep_orbs_;
    uint32_t gold_neutral_creep_orbs_;
    uint32_t gold_boss_;
    uint32_t gold_boss_orb_;
    uint32_t gold_treasure_;
    uint32_t gold_denied_;
    uint32_t gold_death_loss_;
    uint32_t gold_lane_creep_;
    uint32_t gold_neutral_creep_;
    uint32_t kills_;
    uint32_t deaths_;
    uint32_t assists_;
    uint32_t creep_kills_;
    uint32_t neutral_kills_;
    uint32_t possible_creeps_;
    uint32_t creep_damage_;
    uint32_t player_damage_;
    uint32_t neutral_damage_;
    uint32_t boss_damage_;
    uint32_t denies_;
    uint32_t player_healing_;
    uint32_t ability_points_;
    uint32_t self_healing_;
    uint32_t player_damage_taken_;
    uint32_t max_health_;
    uint32_t weapon_power_;
    uint32_t tech_power_;
    uint32_t shots_hit_;
    uint32_t shots_missed_;
    uint32_t damage_absorbed_;
    uint32_t absorption_provided_;
    uint32_t hero_bullets_hit_;
    uint32_t hero_bullets_hit_crit_;
    uint32_t heal_prevented_;
    uint32_t heal_lost_;
    uint32_t damage_mitigated_;
    uint32_t level_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_AbilityStat /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.AbilityStat) */ {
 public:
  inline CMsgMatchMetaDataContents_AbilityStat() : CMsgMatchMetaDataContents_AbilityStat(nullptr) {}
  ~CMsgMatchMetaDataContents_AbilityStat() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_AbilityStat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_AbilityStat(const CMsgMatchMetaDataContents_AbilityStat& from);
  CMsgMatchMetaDataContents_AbilityStat(CMsgMatchMetaDataContents_AbilityStat&& from) noexcept
    : CMsgMatchMetaDataContents_AbilityStat() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_AbilityStat& operator=(const CMsgMatchMetaDataContents_AbilityStat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_AbilityStat& operator=(CMsgMatchMetaDataContents_AbilityStat&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_AbilityStat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_AbilityStat* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_AbilityStat*>(
               &_CMsgMatchMetaDataContents_AbilityStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgMatchMetaDataContents_AbilityStat& a, CMsgMatchMetaDataContents_AbilityStat& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_AbilityStat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_AbilityStat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_AbilityStat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_AbilityStat>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_AbilityStat& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_AbilityStat& from) {
    CMsgMatchMetaDataContents_AbilityStat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_AbilityStat* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.AbilityStat";
  }
  protected:
  explicit CMsgMatchMetaDataContents_AbilityStat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbilityIdFieldNumber = 1,
    kAbilityValueFieldNumber = 2,
  };
  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  uint32_t ability_id() const;
  void set_ability_id(uint32_t value);
  private:
  uint32_t _internal_ability_id() const;
  void _internal_set_ability_id(uint32_t value);
  public:

  // optional uint32 ability_value = 2;
  bool has_ability_value() const;
  private:
  bool _internal_has_ability_value() const;
  public:
  void clear_ability_value();
  uint32_t ability_value() const;
  void set_ability_value(uint32_t value);
  private:
  uint32_t _internal_ability_value() const;
  void _internal_set_ability_value(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.AbilityStat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t ability_id_;
    uint32_t ability_value_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_BookReward /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.BookReward) */ {
 public:
  inline CMsgMatchMetaDataContents_BookReward() : CMsgMatchMetaDataContents_BookReward(nullptr) {}
  ~CMsgMatchMetaDataContents_BookReward() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_BookReward(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_BookReward(const CMsgMatchMetaDataContents_BookReward& from);
  CMsgMatchMetaDataContents_BookReward(CMsgMatchMetaDataContents_BookReward&& from) noexcept
    : CMsgMatchMetaDataContents_BookReward() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_BookReward& operator=(const CMsgMatchMetaDataContents_BookReward& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_BookReward& operator=(CMsgMatchMetaDataContents_BookReward&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_BookReward& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_BookReward* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_BookReward*>(
               &_CMsgMatchMetaDataContents_BookReward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMsgMatchMetaDataContents_BookReward& a, CMsgMatchMetaDataContents_BookReward& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_BookReward* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_BookReward* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_BookReward* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_BookReward>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_BookReward& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_BookReward& from) {
    CMsgMatchMetaDataContents_BookReward::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_BookReward* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.BookReward";
  }
  protected:
  explicit CMsgMatchMetaDataContents_BookReward(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBookIdFieldNumber = 1,
    kXpAmountFieldNumber = 2,
    kStartingXpFieldNumber = 3,
  };
  // optional uint32 book_id = 1;
  bool has_book_id() const;
  private:
  bool _internal_has_book_id() const;
  public:
  void clear_book_id();
  uint32_t book_id() const;
  void set_book_id(uint32_t value);
  private:
  uint32_t _internal_book_id() const;
  void _internal_set_book_id(uint32_t value);
  public:

  // optional uint32 xp_amount = 2;
  bool has_xp_amount() const;
  private:
  bool _internal_has_xp_amount() const;
  public:
  void clear_xp_amount();
  uint32_t xp_amount() const;
  void set_xp_amount(uint32_t value);
  private:
  uint32_t _internal_xp_amount() const;
  void _internal_set_xp_amount(uint32_t value);
  public:

  // optional uint32 starting_xp = 3;
  bool has_starting_xp() const;
  private:
  bool _internal_has_starting_xp() const;
  public:
  void clear_starting_xp();
  uint32_t starting_xp() const;
  void set_starting_xp(uint32_t value);
  private:
  uint32_t _internal_starting_xp() const;
  void _internal_set_starting_xp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.BookReward)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t book_id_;
    uint32_t xp_amount_;
    uint32_t starting_xp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_Players /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.Players) */ {
 public:
  inline CMsgMatchMetaDataContents_Players() : CMsgMatchMetaDataContents_Players(nullptr) {}
  ~CMsgMatchMetaDataContents_Players() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_Players(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_Players(const CMsgMatchMetaDataContents_Players& from);
  CMsgMatchMetaDataContents_Players(CMsgMatchMetaDataContents_Players&& from) noexcept
    : CMsgMatchMetaDataContents_Players() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_Players& operator=(const CMsgMatchMetaDataContents_Players& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_Players& operator=(CMsgMatchMetaDataContents_Players&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_Players& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_Players* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_Players*>(
               &_CMsgMatchMetaDataContents_Players_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgMatchMetaDataContents_Players& a, CMsgMatchMetaDataContents_Players& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_Players* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_Players* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_Players* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_Players>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_Players& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_Players& from) {
    CMsgMatchMetaDataContents_Players::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_Players* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.Players";
  }
  protected:
  explicit CMsgMatchMetaDataContents_Players(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeathDetailsFieldNumber = 3,
    kItemsFieldNumber = 4,
    kStatsFieldNumber = 5,
    kPingsFieldNumber = 19,
    kAbilityStatsFieldNumber = 20,
    kStatsTypeStatFieldNumber = 21,
    kBookRewardsFieldNumber = 22,
    kAccountIdFieldNumber = 1,
    kPlayerSlotFieldNumber = 2,
    kTeamFieldNumber = 6,
    kKillsFieldNumber = 8,
    kDeathsFieldNumber = 9,
    kAssistsFieldNumber = 10,
    kNetWorthFieldNumber = 11,
    kHeroIdFieldNumber = 12,
    kLastHitsFieldNumber = 13,
    kDeniesFieldNumber = 14,
    kAbilityPointsFieldNumber = 15,
    kPartyFieldNumber = 16,
    kAssignedLaneFieldNumber = 17,
    kLevelFieldNumber = 18,
    kAbandonMatchTimeSFieldNumber = 23,
  };
  // repeated .CMsgMatchMetaDataContents.Deaths death_details = 3;
  int death_details_size() const;
  private:
  int _internal_death_details_size() const;
  public:
  void clear_death_details();
  ::CMsgMatchMetaDataContents_Deaths* mutable_death_details(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Deaths >*
      mutable_death_details();
  private:
  const ::CMsgMatchMetaDataContents_Deaths& _internal_death_details(int index) const;
  ::CMsgMatchMetaDataContents_Deaths* _internal_add_death_details();
  public:
  const ::CMsgMatchMetaDataContents_Deaths& death_details(int index) const;
  ::CMsgMatchMetaDataContents_Deaths* add_death_details();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Deaths >&
      death_details() const;

  // repeated .CMsgMatchMetaDataContents.Items items = 4;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::CMsgMatchMetaDataContents_Items* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Items >*
      mutable_items();
  private:
  const ::CMsgMatchMetaDataContents_Items& _internal_items(int index) const;
  ::CMsgMatchMetaDataContents_Items* _internal_add_items();
  public:
  const ::CMsgMatchMetaDataContents_Items& items(int index) const;
  ::CMsgMatchMetaDataContents_Items* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Items >&
      items() const;

  // repeated .CMsgMatchMetaDataContents.PlayerStats stats = 5;
  int stats_size() const;
  private:
  int _internal_stats_size() const;
  public:
  void clear_stats();
  ::CMsgMatchMetaDataContents_PlayerStats* mutable_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_PlayerStats >*
      mutable_stats();
  private:
  const ::CMsgMatchMetaDataContents_PlayerStats& _internal_stats(int index) const;
  ::CMsgMatchMetaDataContents_PlayerStats* _internal_add_stats();
  public:
  const ::CMsgMatchMetaDataContents_PlayerStats& stats(int index) const;
  ::CMsgMatchMetaDataContents_PlayerStats* add_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_PlayerStats >&
      stats() const;

  // repeated .CMsgMatchMetaDataContents.Ping pings = 19;
  int pings_size() const;
  private:
  int _internal_pings_size() const;
  public:
  void clear_pings();
  ::CMsgMatchMetaDataContents_Ping* mutable_pings(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Ping >*
      mutable_pings();
  private:
  const ::CMsgMatchMetaDataContents_Ping& _internal_pings(int index) const;
  ::CMsgMatchMetaDataContents_Ping* _internal_add_pings();
  public:
  const ::CMsgMatchMetaDataContents_Ping& pings(int index) const;
  ::CMsgMatchMetaDataContents_Ping* add_pings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Ping >&
      pings() const;

  // repeated .CMsgMatchMetaDataContents.AbilityStat ability_stats = 20;
  int ability_stats_size() const;
  private:
  int _internal_ability_stats_size() const;
  public:
  void clear_ability_stats();
  ::CMsgMatchMetaDataContents_AbilityStat* mutable_ability_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_AbilityStat >*
      mutable_ability_stats();
  private:
  const ::CMsgMatchMetaDataContents_AbilityStat& _internal_ability_stats(int index) const;
  ::CMsgMatchMetaDataContents_AbilityStat* _internal_add_ability_stats();
  public:
  const ::CMsgMatchMetaDataContents_AbilityStat& ability_stats(int index) const;
  ::CMsgMatchMetaDataContents_AbilityStat* add_ability_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_AbilityStat >&
      ability_stats() const;

  // repeated float stats_type_stat = 21 [packed = true];
  int stats_type_stat_size() const;
  private:
  int _internal_stats_type_stat_size() const;
  public:
  void clear_stats_type_stat();
  private:
  float _internal_stats_type_stat(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_stats_type_stat() const;
  void _internal_add_stats_type_stat(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_stats_type_stat();
  public:
  float stats_type_stat(int index) const;
  void set_stats_type_stat(int index, float value);
  void add_stats_type_stat(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      stats_type_stat() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_stats_type_stat();

  // repeated .CMsgMatchMetaDataContents.BookReward book_rewards = 22;
  int book_rewards_size() const;
  private:
  int _internal_book_rewards_size() const;
  public:
  void clear_book_rewards();
  ::CMsgMatchMetaDataContents_BookReward* mutable_book_rewards(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_BookReward >*
      mutable_book_rewards();
  private:
  const ::CMsgMatchMetaDataContents_BookReward& _internal_book_rewards(int index) const;
  ::CMsgMatchMetaDataContents_BookReward* _internal_add_book_rewards();
  public:
  const ::CMsgMatchMetaDataContents_BookReward& book_rewards(int index) const;
  ::CMsgMatchMetaDataContents_BookReward* add_book_rewards();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_BookReward >&
      book_rewards() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // optional uint32 player_slot = 2;
  bool has_player_slot() const;
  private:
  bool _internal_has_player_slot() const;
  public:
  void clear_player_slot();
  uint32_t player_slot() const;
  void set_player_slot(uint32_t value);
  private:
  uint32_t _internal_player_slot() const;
  void _internal_set_player_slot(uint32_t value);
  public:

  // optional .ECitadelLobbyTeam team = 6 [default = k_ECitadelLobbyTeam_Team0];
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  ::ECitadelLobbyTeam team() const;
  void set_team(::ECitadelLobbyTeam value);
  private:
  ::ECitadelLobbyTeam _internal_team() const;
  void _internal_set_team(::ECitadelLobbyTeam value);
  public:

  // optional uint32 kills = 8;
  bool has_kills() const;
  private:
  bool _internal_has_kills() const;
  public:
  void clear_kills();
  uint32_t kills() const;
  void set_kills(uint32_t value);
  private:
  uint32_t _internal_kills() const;
  void _internal_set_kills(uint32_t value);
  public:

  // optional uint32 deaths = 9;
  bool has_deaths() const;
  private:
  bool _internal_has_deaths() const;
  public:
  void clear_deaths();
  uint32_t deaths() const;
  void set_deaths(uint32_t value);
  private:
  uint32_t _internal_deaths() const;
  void _internal_set_deaths(uint32_t value);
  public:

  // optional uint32 assists = 10;
  bool has_assists() const;
  private:
  bool _internal_has_assists() const;
  public:
  void clear_assists();
  uint32_t assists() const;
  void set_assists(uint32_t value);
  private:
  uint32_t _internal_assists() const;
  void _internal_set_assists(uint32_t value);
  public:

  // optional uint32 net_worth = 11;
  bool has_net_worth() const;
  private:
  bool _internal_has_net_worth() const;
  public:
  void clear_net_worth();
  uint32_t net_worth() const;
  void set_net_worth(uint32_t value);
  private:
  uint32_t _internal_net_worth() const;
  void _internal_set_net_worth(uint32_t value);
  public:

  // optional uint32 hero_id = 12;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // optional uint32 last_hits = 13;
  bool has_last_hits() const;
  private:
  bool _internal_has_last_hits() const;
  public:
  void clear_last_hits();
  uint32_t last_hits() const;
  void set_last_hits(uint32_t value);
  private:
  uint32_t _internal_last_hits() const;
  void _internal_set_last_hits(uint32_t value);
  public:

  // optional uint32 denies = 14;
  bool has_denies() const;
  private:
  bool _internal_has_denies() const;
  public:
  void clear_denies();
  uint32_t denies() const;
  void set_denies(uint32_t value);
  private:
  uint32_t _internal_denies() const;
  void _internal_set_denies(uint32_t value);
  public:

  // optional uint32 ability_points = 15;
  bool has_ability_points() const;
  private:
  bool _internal_has_ability_points() const;
  public:
  void clear_ability_points();
  uint32_t ability_points() const;
  void set_ability_points(uint32_t value);
  private:
  uint32_t _internal_ability_points() const;
  void _internal_set_ability_points(uint32_t value);
  public:

  // optional uint32 party = 16;
  bool has_party() const;
  private:
  bool _internal_has_party() const;
  public:
  void clear_party();
  uint32_t party() const;
  void set_party(uint32_t value);
  private:
  uint32_t _internal_party() const;
  void _internal_set_party(uint32_t value);
  public:

  // optional uint32 assigned_lane = 17;
  bool has_assigned_lane() const;
  private:
  bool _internal_has_assigned_lane() const;
  public:
  void clear_assigned_lane();
  uint32_t assigned_lane() const;
  void set_assigned_lane(uint32_t value);
  private:
  uint32_t _internal_assigned_lane() const;
  void _internal_set_assigned_lane(uint32_t value);
  public:

  // optional uint32 level = 18;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  uint32_t level() const;
  void set_level(uint32_t value);
  private:
  uint32_t _internal_level() const;
  void _internal_set_level(uint32_t value);
  public:

  // optional uint32 abandon_match_time_s = 23;
  bool has_abandon_match_time_s() const;
  private:
  bool _internal_has_abandon_match_time_s() const;
  public:
  void clear_abandon_match_time_s();
  uint32_t abandon_match_time_s() const;
  void set_abandon_match_time_s(uint32_t value);
  private:
  uint32_t _internal_abandon_match_time_s() const;
  void _internal_set_abandon_match_time_s(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.Players)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Deaths > death_details_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Items > items_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_PlayerStats > stats_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Ping > pings_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_AbilityStat > ability_stats_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > stats_type_stat_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_BookReward > book_rewards_;
    uint32_t account_id_;
    uint32_t player_slot_;
    int team_;
    uint32_t kills_;
    uint32_t deaths_;
    uint32_t assists_;
    uint32_t net_worth_;
    uint32_t hero_id_;
    uint32_t last_hits_;
    uint32_t denies_;
    uint32_t ability_points_;
    uint32_t party_;
    uint32_t assigned_lane_;
    uint32_t level_;
    uint32_t abandon_match_time_s_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_Objective /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.Objective) */ {
 public:
  inline CMsgMatchMetaDataContents_Objective() : CMsgMatchMetaDataContents_Objective(nullptr) {}
  ~CMsgMatchMetaDataContents_Objective() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_Objective(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_Objective(const CMsgMatchMetaDataContents_Objective& from);
  CMsgMatchMetaDataContents_Objective(CMsgMatchMetaDataContents_Objective&& from) noexcept
    : CMsgMatchMetaDataContents_Objective() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_Objective& operator=(const CMsgMatchMetaDataContents_Objective& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_Objective& operator=(CMsgMatchMetaDataContents_Objective&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_Objective& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_Objective* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_Objective*>(
               &_CMsgMatchMetaDataContents_Objective_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgMatchMetaDataContents_Objective& a, CMsgMatchMetaDataContents_Objective& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_Objective* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_Objective* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_Objective* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_Objective>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_Objective& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_Objective& from) {
    CMsgMatchMetaDataContents_Objective::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_Objective* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.Objective";
  }
  protected:
  explicit CMsgMatchMetaDataContents_Objective(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLegacyObjectiveIdFieldNumber = 1,
    kDestroyedTimeSFieldNumber = 2,
    kCreepDamageFieldNumber = 4,
    kCreepDamageMitigatedFieldNumber = 5,
    kPlayerDamageFieldNumber = 6,
    kPlayerDamageMitigatedFieldNumber = 7,
    kFirstDamageTimeSFieldNumber = 8,
    kTeamObjectiveIdFieldNumber = 9,
    kTeamFieldNumber = 10,
  };
  // optional .ECitadelObjective legacy_objective_id = 1 [default = k_eCitadelObjective_Team0_Core];
  bool has_legacy_objective_id() const;
  private:
  bool _internal_has_legacy_objective_id() const;
  public:
  void clear_legacy_objective_id();
  ::ECitadelObjective legacy_objective_id() const;
  void set_legacy_objective_id(::ECitadelObjective value);
  private:
  ::ECitadelObjective _internal_legacy_objective_id() const;
  void _internal_set_legacy_objective_id(::ECitadelObjective value);
  public:

  // optional uint32 destroyed_time_s = 2;
  bool has_destroyed_time_s() const;
  private:
  bool _internal_has_destroyed_time_s() const;
  public:
  void clear_destroyed_time_s();
  uint32_t destroyed_time_s() const;
  void set_destroyed_time_s(uint32_t value);
  private:
  uint32_t _internal_destroyed_time_s() const;
  void _internal_set_destroyed_time_s(uint32_t value);
  public:

  // optional uint32 creep_damage = 4;
  bool has_creep_damage() const;
  private:
  bool _internal_has_creep_damage() const;
  public:
  void clear_creep_damage();
  uint32_t creep_damage() const;
  void set_creep_damage(uint32_t value);
  private:
  uint32_t _internal_creep_damage() const;
  void _internal_set_creep_damage(uint32_t value);
  public:

  // optional uint32 creep_damage_mitigated = 5;
  bool has_creep_damage_mitigated() const;
  private:
  bool _internal_has_creep_damage_mitigated() const;
  public:
  void clear_creep_damage_mitigated();
  uint32_t creep_damage_mitigated() const;
  void set_creep_damage_mitigated(uint32_t value);
  private:
  uint32_t _internal_creep_damage_mitigated() const;
  void _internal_set_creep_damage_mitigated(uint32_t value);
  public:

  // optional uint32 player_damage = 6;
  bool has_player_damage() const;
  private:
  bool _internal_has_player_damage() const;
  public:
  void clear_player_damage();
  uint32_t player_damage() const;
  void set_player_damage(uint32_t value);
  private:
  uint32_t _internal_player_damage() const;
  void _internal_set_player_damage(uint32_t value);
  public:

  // optional uint32 player_damage_mitigated = 7;
  bool has_player_damage_mitigated() const;
  private:
  bool _internal_has_player_damage_mitigated() const;
  public:
  void clear_player_damage_mitigated();
  uint32_t player_damage_mitigated() const;
  void set_player_damage_mitigated(uint32_t value);
  private:
  uint32_t _internal_player_damage_mitigated() const;
  void _internal_set_player_damage_mitigated(uint32_t value);
  public:

  // optional uint32 first_damage_time_s = 8;
  bool has_first_damage_time_s() const;
  private:
  bool _internal_has_first_damage_time_s() const;
  public:
  void clear_first_damage_time_s();
  uint32_t first_damage_time_s() const;
  void set_first_damage_time_s(uint32_t value);
  private:
  uint32_t _internal_first_damage_time_s() const;
  void _internal_set_first_damage_time_s(uint32_t value);
  public:

  // optional .ECitadelTeamObjective team_objective_id = 9 [default = k_eCitadelTeamObjective_Core];
  bool has_team_objective_id() const;
  private:
  bool _internal_has_team_objective_id() const;
  public:
  void clear_team_objective_id();
  ::ECitadelTeamObjective team_objective_id() const;
  void set_team_objective_id(::ECitadelTeamObjective value);
  private:
  ::ECitadelTeamObjective _internal_team_objective_id() const;
  void _internal_set_team_objective_id(::ECitadelTeamObjective value);
  public:

  // optional .ECitadelLobbyTeam team = 10 [default = k_ECitadelLobbyTeam_Team0];
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  ::ECitadelLobbyTeam team() const;
  void set_team(::ECitadelLobbyTeam value);
  private:
  ::ECitadelLobbyTeam _internal_team() const;
  void _internal_set_team(::ECitadelLobbyTeam value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.Objective)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int legacy_objective_id_;
    uint32_t destroyed_time_s_;
    uint32_t creep_damage_;
    uint32_t creep_damage_mitigated_;
    uint32_t player_damage_;
    uint32_t player_damage_mitigated_;
    uint32_t first_damage_time_s_;
    int team_objective_id_;
    int team_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_MidBoss /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.MidBoss) */ {
 public:
  inline CMsgMatchMetaDataContents_MidBoss() : CMsgMatchMetaDataContents_MidBoss(nullptr) {}
  ~CMsgMatchMetaDataContents_MidBoss() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_MidBoss(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_MidBoss(const CMsgMatchMetaDataContents_MidBoss& from);
  CMsgMatchMetaDataContents_MidBoss(CMsgMatchMetaDataContents_MidBoss&& from) noexcept
    : CMsgMatchMetaDataContents_MidBoss() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_MidBoss& operator=(const CMsgMatchMetaDataContents_MidBoss& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_MidBoss& operator=(CMsgMatchMetaDataContents_MidBoss&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_MidBoss& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_MidBoss* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_MidBoss*>(
               &_CMsgMatchMetaDataContents_MidBoss_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgMatchMetaDataContents_MidBoss& a, CMsgMatchMetaDataContents_MidBoss& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_MidBoss* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_MidBoss* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_MidBoss* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_MidBoss>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_MidBoss& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_MidBoss& from) {
    CMsgMatchMetaDataContents_MidBoss::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_MidBoss* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.MidBoss";
  }
  protected:
  explicit CMsgMatchMetaDataContents_MidBoss(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamKilledFieldNumber = 1,
    kTeamClaimedFieldNumber = 2,
    kDestroyedTimeSFieldNumber = 3,
  };
  // optional .ECitadelLobbyTeam team_killed = 1 [default = k_ECitadelLobbyTeam_Team0];
  bool has_team_killed() const;
  private:
  bool _internal_has_team_killed() const;
  public:
  void clear_team_killed();
  ::ECitadelLobbyTeam team_killed() const;
  void set_team_killed(::ECitadelLobbyTeam value);
  private:
  ::ECitadelLobbyTeam _internal_team_killed() const;
  void _internal_set_team_killed(::ECitadelLobbyTeam value);
  public:

  // optional .ECitadelLobbyTeam team_claimed = 2 [default = k_ECitadelLobbyTeam_Team0];
  bool has_team_claimed() const;
  private:
  bool _internal_has_team_claimed() const;
  public:
  void clear_team_claimed();
  ::ECitadelLobbyTeam team_claimed() const;
  void set_team_claimed(::ECitadelLobbyTeam value);
  private:
  ::ECitadelLobbyTeam _internal_team_claimed() const;
  void _internal_set_team_claimed(::ECitadelLobbyTeam value);
  public:

  // optional uint32 destroyed_time_s = 3;
  bool has_destroyed_time_s() const;
  private:
  bool _internal_has_destroyed_time_s() const;
  public:
  void clear_destroyed_time_s();
  uint32_t destroyed_time_s() const;
  void set_destroyed_time_s(uint32_t value);
  private:
  uint32_t _internal_destroyed_time_s() const;
  void _internal_set_destroyed_time_s(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.MidBoss)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int team_killed_;
    int team_claimed_;
    uint32_t destroyed_time_s_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_Pause /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.Pause) */ {
 public:
  inline CMsgMatchMetaDataContents_Pause() : CMsgMatchMetaDataContents_Pause(nullptr) {}
  ~CMsgMatchMetaDataContents_Pause() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_Pause(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_Pause(const CMsgMatchMetaDataContents_Pause& from);
  CMsgMatchMetaDataContents_Pause(CMsgMatchMetaDataContents_Pause&& from) noexcept
    : CMsgMatchMetaDataContents_Pause() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_Pause& operator=(const CMsgMatchMetaDataContents_Pause& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_Pause& operator=(CMsgMatchMetaDataContents_Pause&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_Pause& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_Pause* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_Pause*>(
               &_CMsgMatchMetaDataContents_Pause_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgMatchMetaDataContents_Pause& a, CMsgMatchMetaDataContents_Pause& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_Pause* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_Pause* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_Pause* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_Pause>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_Pause& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_Pause& from) {
    CMsgMatchMetaDataContents_Pause::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_Pause* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.Pause";
  }
  protected:
  explicit CMsgMatchMetaDataContents_Pause(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameTimeSFieldNumber = 1,
    kPauseDurationSFieldNumber = 2,
    kPlayerSlotFieldNumber = 3,
  };
  // optional uint32 game_time_s = 1;
  bool has_game_time_s() const;
  private:
  bool _internal_has_game_time_s() const;
  public:
  void clear_game_time_s();
  uint32_t game_time_s() const;
  void set_game_time_s(uint32_t value);
  private:
  uint32_t _internal_game_time_s() const;
  void _internal_set_game_time_s(uint32_t value);
  public:

  // optional uint32 pause_duration_s = 2;
  bool has_pause_duration_s() const;
  private:
  bool _internal_has_pause_duration_s() const;
  public:
  void clear_pause_duration_s();
  uint32_t pause_duration_s() const;
  void set_pause_duration_s(uint32_t value);
  private:
  uint32_t _internal_pause_duration_s() const;
  void _internal_set_pause_duration_s(uint32_t value);
  public:

  // optional uint32 player_slot = 3;
  bool has_player_slot() const;
  private:
  bool _internal_has_player_slot() const;
  public:
  void clear_player_slot();
  uint32_t player_slot() const;
  void set_player_slot(uint32_t value);
  private:
  uint32_t _internal_player_slot() const;
  void _internal_set_player_slot(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.Pause)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t game_time_s_;
    uint32_t pause_duration_s_;
    uint32_t player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_WatchedDeathReplay /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.WatchedDeathReplay) */ {
 public:
  inline CMsgMatchMetaDataContents_WatchedDeathReplay() : CMsgMatchMetaDataContents_WatchedDeathReplay(nullptr) {}
  ~CMsgMatchMetaDataContents_WatchedDeathReplay() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_WatchedDeathReplay(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_WatchedDeathReplay(const CMsgMatchMetaDataContents_WatchedDeathReplay& from);
  CMsgMatchMetaDataContents_WatchedDeathReplay(CMsgMatchMetaDataContents_WatchedDeathReplay&& from) noexcept
    : CMsgMatchMetaDataContents_WatchedDeathReplay() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_WatchedDeathReplay& operator=(const CMsgMatchMetaDataContents_WatchedDeathReplay& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_WatchedDeathReplay& operator=(CMsgMatchMetaDataContents_WatchedDeathReplay&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_WatchedDeathReplay& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_WatchedDeathReplay* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_WatchedDeathReplay*>(
               &_CMsgMatchMetaDataContents_WatchedDeathReplay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CMsgMatchMetaDataContents_WatchedDeathReplay& a, CMsgMatchMetaDataContents_WatchedDeathReplay& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_WatchedDeathReplay* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_WatchedDeathReplay* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_WatchedDeathReplay* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_WatchedDeathReplay>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_WatchedDeathReplay& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_WatchedDeathReplay& from) {
    CMsgMatchMetaDataContents_WatchedDeathReplay::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_WatchedDeathReplay* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.WatchedDeathReplay";
  }
  protected:
  explicit CMsgMatchMetaDataContents_WatchedDeathReplay(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameTimeSFieldNumber = 1,
    kPlayerSlotFieldNumber = 2,
  };
  // optional uint32 game_time_s = 1;
  bool has_game_time_s() const;
  private:
  bool _internal_has_game_time_s() const;
  public:
  void clear_game_time_s();
  uint32_t game_time_s() const;
  void set_game_time_s(uint32_t value);
  private:
  uint32_t _internal_game_time_s() const;
  void _internal_set_game_time_s(uint32_t value);
  public:

  // optional uint32 player_slot = 2;
  bool has_player_slot() const;
  private:
  bool _internal_has_player_slot() const;
  public:
  void clear_player_slot();
  uint32_t player_slot() const;
  void set_player_slot(uint32_t value);
  private:
  uint32_t _internal_player_slot() const;
  void _internal_set_player_slot(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.WatchedDeathReplay)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t game_time_s_;
    uint32_t player_slot_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents_MatchInfo /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents.MatchInfo) */ {
 public:
  inline CMsgMatchMetaDataContents_MatchInfo() : CMsgMatchMetaDataContents_MatchInfo(nullptr) {}
  ~CMsgMatchMetaDataContents_MatchInfo() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents_MatchInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents_MatchInfo(const CMsgMatchMetaDataContents_MatchInfo& from);
  CMsgMatchMetaDataContents_MatchInfo(CMsgMatchMetaDataContents_MatchInfo&& from) noexcept
    : CMsgMatchMetaDataContents_MatchInfo() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents_MatchInfo& operator=(const CMsgMatchMetaDataContents_MatchInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents_MatchInfo& operator=(CMsgMatchMetaDataContents_MatchInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents_MatchInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents_MatchInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents_MatchInfo*>(
               &_CMsgMatchMetaDataContents_MatchInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CMsgMatchMetaDataContents_MatchInfo& a, CMsgMatchMetaDataContents_MatchInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents_MatchInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents_MatchInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents_MatchInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents_MatchInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents_MatchInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents_MatchInfo& from) {
    CMsgMatchMetaDataContents_MatchInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents_MatchInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents.MatchInfo";
  }
  protected:
  explicit CMsgMatchMetaDataContents_MatchInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayersFieldNumber = 4,
    kObjectivesFieldNumber = 11,
    kMatchPausesFieldNumber = 14,
    kCustomUserStatsFieldNumber = 15,
    kWatchedDeathReplaysFieldNumber = 16,
    kMidBossFieldNumber = 19,
    kMatchPathsFieldNumber = 12,
    kDamageMatrixFieldNumber = 13,
    kDurationSFieldNumber = 1,
    kMatchOutcomeFieldNumber = 2,
    kWinningTeamFieldNumber = 3,
    kStartTimeFieldNumber = 5,
    kMatchIdFieldNumber = 6,
    kLegacyObjectivesMaskFieldNumber = 8,
    kGameModeFieldNumber = 9,
    kObjectivesMaskTeam0FieldNumber = 17,
    kObjectivesMaskTeam1FieldNumber = 18,
    kMatchModeFieldNumber = 10,
  };
  // repeated .CMsgMatchMetaDataContents.Players players = 4;
  int players_size() const;
  private:
  int _internal_players_size() const;
  public:
  void clear_players();
  ::CMsgMatchMetaDataContents_Players* mutable_players(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Players >*
      mutable_players();
  private:
  const ::CMsgMatchMetaDataContents_Players& _internal_players(int index) const;
  ::CMsgMatchMetaDataContents_Players* _internal_add_players();
  public:
  const ::CMsgMatchMetaDataContents_Players& players(int index) const;
  ::CMsgMatchMetaDataContents_Players* add_players();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Players >&
      players() const;

  // repeated .CMsgMatchMetaDataContents.Objective objectives = 11;
  int objectives_size() const;
  private:
  int _internal_objectives_size() const;
  public:
  void clear_objectives();
  ::CMsgMatchMetaDataContents_Objective* mutable_objectives(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Objective >*
      mutable_objectives();
  private:
  const ::CMsgMatchMetaDataContents_Objective& _internal_objectives(int index) const;
  ::CMsgMatchMetaDataContents_Objective* _internal_add_objectives();
  public:
  const ::CMsgMatchMetaDataContents_Objective& objectives(int index) const;
  ::CMsgMatchMetaDataContents_Objective* add_objectives();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Objective >&
      objectives() const;

  // repeated .CMsgMatchMetaDataContents.Pause match_pauses = 14;
  int match_pauses_size() const;
  private:
  int _internal_match_pauses_size() const;
  public:
  void clear_match_pauses();
  ::CMsgMatchMetaDataContents_Pause* mutable_match_pauses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Pause >*
      mutable_match_pauses();
  private:
  const ::CMsgMatchMetaDataContents_Pause& _internal_match_pauses(int index) const;
  ::CMsgMatchMetaDataContents_Pause* _internal_add_match_pauses();
  public:
  const ::CMsgMatchMetaDataContents_Pause& match_pauses(int index) const;
  ::CMsgMatchMetaDataContents_Pause* add_match_pauses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Pause >&
      match_pauses() const;

  // repeated .CMsgMatchMetaDataContents.CustomUserStatInfo custom_user_stats = 15;
  int custom_user_stats_size() const;
  private:
  int _internal_custom_user_stats_size() const;
  public:
  void clear_custom_user_stats();
  ::CMsgMatchMetaDataContents_CustomUserStatInfo* mutable_custom_user_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_CustomUserStatInfo >*
      mutable_custom_user_stats();
  private:
  const ::CMsgMatchMetaDataContents_CustomUserStatInfo& _internal_custom_user_stats(int index) const;
  ::CMsgMatchMetaDataContents_CustomUserStatInfo* _internal_add_custom_user_stats();
  public:
  const ::CMsgMatchMetaDataContents_CustomUserStatInfo& custom_user_stats(int index) const;
  ::CMsgMatchMetaDataContents_CustomUserStatInfo* add_custom_user_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_CustomUserStatInfo >&
      custom_user_stats() const;

  // repeated .CMsgMatchMetaDataContents.WatchedDeathReplay watched_death_replays = 16;
  int watched_death_replays_size() const;
  private:
  int _internal_watched_death_replays_size() const;
  public:
  void clear_watched_death_replays();
  ::CMsgMatchMetaDataContents_WatchedDeathReplay* mutable_watched_death_replays(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_WatchedDeathReplay >*
      mutable_watched_death_replays();
  private:
  const ::CMsgMatchMetaDataContents_WatchedDeathReplay& _internal_watched_death_replays(int index) const;
  ::CMsgMatchMetaDataContents_WatchedDeathReplay* _internal_add_watched_death_replays();
  public:
  const ::CMsgMatchMetaDataContents_WatchedDeathReplay& watched_death_replays(int index) const;
  ::CMsgMatchMetaDataContents_WatchedDeathReplay* add_watched_death_replays();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_WatchedDeathReplay >&
      watched_death_replays() const;

  // repeated .CMsgMatchMetaDataContents.MidBoss mid_boss = 19;
  int mid_boss_size() const;
  private:
  int _internal_mid_boss_size() const;
  public:
  void clear_mid_boss();
  ::CMsgMatchMetaDataContents_MidBoss* mutable_mid_boss(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_MidBoss >*
      mutable_mid_boss();
  private:
  const ::CMsgMatchMetaDataContents_MidBoss& _internal_mid_boss(int index) const;
  ::CMsgMatchMetaDataContents_MidBoss* _internal_add_mid_boss();
  public:
  const ::CMsgMatchMetaDataContents_MidBoss& mid_boss(int index) const;
  ::CMsgMatchMetaDataContents_MidBoss* add_mid_boss();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_MidBoss >&
      mid_boss() const;

  // optional .CMsgMatchPlayerPathsData match_paths = 12;
  bool has_match_paths() const;
  private:
  bool _internal_has_match_paths() const;
  public:
  void clear_match_paths();
  const ::CMsgMatchPlayerPathsData& match_paths() const;
  PROTOBUF_NODISCARD ::CMsgMatchPlayerPathsData* release_match_paths();
  ::CMsgMatchPlayerPathsData* mutable_match_paths();
  void set_allocated_match_paths(::CMsgMatchPlayerPathsData* match_paths);
  private:
  const ::CMsgMatchPlayerPathsData& _internal_match_paths() const;
  ::CMsgMatchPlayerPathsData* _internal_mutable_match_paths();
  public:
  void unsafe_arena_set_allocated_match_paths(
      ::CMsgMatchPlayerPathsData* match_paths);
  ::CMsgMatchPlayerPathsData* unsafe_arena_release_match_paths();

  // optional .CMsgMatchPlayerDamageMatrix damage_matrix = 13;
  bool has_damage_matrix() const;
  private:
  bool _internal_has_damage_matrix() const;
  public:
  void clear_damage_matrix();
  const ::CMsgMatchPlayerDamageMatrix& damage_matrix() const;
  PROTOBUF_NODISCARD ::CMsgMatchPlayerDamageMatrix* release_damage_matrix();
  ::CMsgMatchPlayerDamageMatrix* mutable_damage_matrix();
  void set_allocated_damage_matrix(::CMsgMatchPlayerDamageMatrix* damage_matrix);
  private:
  const ::CMsgMatchPlayerDamageMatrix& _internal_damage_matrix() const;
  ::CMsgMatchPlayerDamageMatrix* _internal_mutable_damage_matrix();
  public:
  void unsafe_arena_set_allocated_damage_matrix(
      ::CMsgMatchPlayerDamageMatrix* damage_matrix);
  ::CMsgMatchPlayerDamageMatrix* unsafe_arena_release_damage_matrix();

  // optional uint32 duration_s = 1;
  bool has_duration_s() const;
  private:
  bool _internal_has_duration_s() const;
  public:
  void clear_duration_s();
  uint32_t duration_s() const;
  void set_duration_s(uint32_t value);
  private:
  uint32_t _internal_duration_s() const;
  void _internal_set_duration_s(uint32_t value);
  public:

  // optional .CMsgMatchMetaDataContents.EMatchOutcome match_outcome = 2 [default = k_eOutcome_TeamWin];
  bool has_match_outcome() const;
  private:
  bool _internal_has_match_outcome() const;
  public:
  void clear_match_outcome();
  ::CMsgMatchMetaDataContents_EMatchOutcome match_outcome() const;
  void set_match_outcome(::CMsgMatchMetaDataContents_EMatchOutcome value);
  private:
  ::CMsgMatchMetaDataContents_EMatchOutcome _internal_match_outcome() const;
  void _internal_set_match_outcome(::CMsgMatchMetaDataContents_EMatchOutcome value);
  public:

  // optional .ECitadelLobbyTeam winning_team = 3 [default = k_ECitadelLobbyTeam_Team0];
  bool has_winning_team() const;
  private:
  bool _internal_has_winning_team() const;
  public:
  void clear_winning_team();
  ::ECitadelLobbyTeam winning_team() const;
  void set_winning_team(::ECitadelLobbyTeam value);
  private:
  ::ECitadelLobbyTeam _internal_winning_team() const;
  void _internal_set_winning_team(::ECitadelLobbyTeam value);
  public:

  // optional uint32 start_time = 5;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  uint32_t start_time() const;
  void set_start_time(uint32_t value);
  private:
  uint32_t _internal_start_time() const;
  void _internal_set_start_time(uint32_t value);
  public:

  // optional uint64 match_id = 6;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional uint32 legacy_objectives_mask = 8;
  bool has_legacy_objectives_mask() const;
  private:
  bool _internal_has_legacy_objectives_mask() const;
  public:
  void clear_legacy_objectives_mask();
  uint32_t legacy_objectives_mask() const;
  void set_legacy_objectives_mask(uint32_t value);
  private:
  uint32_t _internal_legacy_objectives_mask() const;
  void _internal_set_legacy_objectives_mask(uint32_t value);
  public:

  // optional .ECitadelGameMode game_mode = 9 [default = k_ECitadelGameMode_Invalid];
  bool has_game_mode() const;
  private:
  bool _internal_has_game_mode() const;
  public:
  void clear_game_mode();
  ::ECitadelGameMode game_mode() const;
  void set_game_mode(::ECitadelGameMode value);
  private:
  ::ECitadelGameMode _internal_game_mode() const;
  void _internal_set_game_mode(::ECitadelGameMode value);
  public:

  // optional uint64 objectives_mask_team0 = 17;
  bool has_objectives_mask_team0() const;
  private:
  bool _internal_has_objectives_mask_team0() const;
  public:
  void clear_objectives_mask_team0();
  uint64_t objectives_mask_team0() const;
  void set_objectives_mask_team0(uint64_t value);
  private:
  uint64_t _internal_objectives_mask_team0() const;
  void _internal_set_objectives_mask_team0(uint64_t value);
  public:

  // optional uint64 objectives_mask_team1 = 18;
  bool has_objectives_mask_team1() const;
  private:
  bool _internal_has_objectives_mask_team1() const;
  public:
  void clear_objectives_mask_team1();
  uint64_t objectives_mask_team1() const;
  void set_objectives_mask_team1(uint64_t value);
  private:
  uint64_t _internal_objectives_mask_team1() const;
  void _internal_set_objectives_mask_team1(uint64_t value);
  public:

  // optional .ECitadelMatchMode match_mode = 10 [default = k_ECitadelMatchMode_Invalid];
  bool has_match_mode() const;
  private:
  bool _internal_has_match_mode() const;
  public:
  void clear_match_mode();
  ::ECitadelMatchMode match_mode() const;
  void set_match_mode(::ECitadelMatchMode value);
  private:
  ::ECitadelMatchMode _internal_match_mode() const;
  void _internal_set_match_mode(::ECitadelMatchMode value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents.MatchInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Players > players_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Objective > objectives_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Pause > match_pauses_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_CustomUserStatInfo > custom_user_stats_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_WatchedDeathReplay > watched_death_replays_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_MidBoss > mid_boss_;
    ::CMsgMatchPlayerPathsData* match_paths_;
    ::CMsgMatchPlayerDamageMatrix* damage_matrix_;
    uint32_t duration_s_;
    int match_outcome_;
    int winning_team_;
    uint32_t start_time_;
    uint64_t match_id_;
    uint32_t legacy_objectives_mask_;
    int game_mode_;
    uint64_t objectives_mask_team0_;
    uint64_t objectives_mask_team1_;
    int match_mode_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaDataContents /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaDataContents) */ {
 public:
  inline CMsgMatchMetaDataContents() : CMsgMatchMetaDataContents(nullptr) {}
  ~CMsgMatchMetaDataContents() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaDataContents(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaDataContents(const CMsgMatchMetaDataContents& from);
  CMsgMatchMetaDataContents(CMsgMatchMetaDataContents&& from) noexcept
    : CMsgMatchMetaDataContents() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaDataContents& operator=(const CMsgMatchMetaDataContents& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaDataContents& operator=(CMsgMatchMetaDataContents&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaDataContents& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaDataContents* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaDataContents*>(
               &_CMsgMatchMetaDataContents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CMsgMatchMetaDataContents& a, CMsgMatchMetaDataContents& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaDataContents* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaDataContents* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaDataContents* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaDataContents>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaDataContents& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaDataContents& from) {
    CMsgMatchMetaDataContents::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaDataContents* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaDataContents";
  }
  protected:
  explicit CMsgMatchMetaDataContents(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  typedef CMsgMatchMetaDataContents_Position Position;
  typedef CMsgMatchMetaDataContents_Deaths Deaths;
  typedef CMsgMatchMetaDataContents_Items Items;
  typedef CMsgMatchMetaDataContents_Ping Ping;
  typedef CMsgMatchMetaDataContents_GoldSource GoldSource;
  typedef CMsgMatchMetaDataContents_CustomUserStatInfo CustomUserStatInfo;
  typedef CMsgMatchMetaDataContents_CustomUserStat CustomUserStat;
  typedef CMsgMatchMetaDataContents_PlayerStats PlayerStats;
  typedef CMsgMatchMetaDataContents_AbilityStat AbilityStat;
  typedef CMsgMatchMetaDataContents_BookReward BookReward;
  typedef CMsgMatchMetaDataContents_Players Players;
  typedef CMsgMatchMetaDataContents_Objective Objective;
  typedef CMsgMatchMetaDataContents_MidBoss MidBoss;
  typedef CMsgMatchMetaDataContents_Pause Pause;
  typedef CMsgMatchMetaDataContents_WatchedDeathReplay WatchedDeathReplay;
  typedef CMsgMatchMetaDataContents_MatchInfo MatchInfo;

  typedef CMsgMatchMetaDataContents_EMatchOutcome EMatchOutcome;
  static constexpr EMatchOutcome k_eOutcome_TeamWin =
    CMsgMatchMetaDataContents_EMatchOutcome_k_eOutcome_TeamWin;
  static constexpr EMatchOutcome k_eOutcome_Error =
    CMsgMatchMetaDataContents_EMatchOutcome_k_eOutcome_Error;
  static inline bool EMatchOutcome_IsValid(int value) {
    return CMsgMatchMetaDataContents_EMatchOutcome_IsValid(value);
  }
  static constexpr EMatchOutcome EMatchOutcome_MIN =
    CMsgMatchMetaDataContents_EMatchOutcome_EMatchOutcome_MIN;
  static constexpr EMatchOutcome EMatchOutcome_MAX =
    CMsgMatchMetaDataContents_EMatchOutcome_EMatchOutcome_MAX;
  static constexpr int EMatchOutcome_ARRAYSIZE =
    CMsgMatchMetaDataContents_EMatchOutcome_EMatchOutcome_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EMatchOutcome_descriptor() {
    return CMsgMatchMetaDataContents_EMatchOutcome_descriptor();
  }
  template<typename T>
  static inline const std::string& EMatchOutcome_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EMatchOutcome>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EMatchOutcome_Name.");
    return CMsgMatchMetaDataContents_EMatchOutcome_Name(enum_t_value);
  }
  static inline bool EMatchOutcome_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EMatchOutcome* value) {
    return CMsgMatchMetaDataContents_EMatchOutcome_Parse(name, value);
  }

  typedef CMsgMatchMetaDataContents_EGoldSource EGoldSource;
  static constexpr EGoldSource k_ePlayers =
    CMsgMatchMetaDataContents_EGoldSource_k_ePlayers;
  static constexpr EGoldSource k_eLaneCreeps =
    CMsgMatchMetaDataContents_EGoldSource_k_eLaneCreeps;
  static constexpr EGoldSource k_eNeutrals =
    CMsgMatchMetaDataContents_EGoldSource_k_eNeutrals;
  static constexpr EGoldSource k_eBosses =
    CMsgMatchMetaDataContents_EGoldSource_k_eBosses;
  static constexpr EGoldSource k_eTreasure =
    CMsgMatchMetaDataContents_EGoldSource_k_eTreasure;
  static constexpr EGoldSource k_eAssists =
    CMsgMatchMetaDataContents_EGoldSource_k_eAssists;
  static constexpr EGoldSource k_eDenies =
    CMsgMatchMetaDataContents_EGoldSource_k_eDenies;
  static inline bool EGoldSource_IsValid(int value) {
    return CMsgMatchMetaDataContents_EGoldSource_IsValid(value);
  }
  static constexpr EGoldSource EGoldSource_MIN =
    CMsgMatchMetaDataContents_EGoldSource_EGoldSource_MIN;
  static constexpr EGoldSource EGoldSource_MAX =
    CMsgMatchMetaDataContents_EGoldSource_EGoldSource_MAX;
  static constexpr int EGoldSource_ARRAYSIZE =
    CMsgMatchMetaDataContents_EGoldSource_EGoldSource_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EGoldSource_descriptor() {
    return CMsgMatchMetaDataContents_EGoldSource_descriptor();
  }
  template<typename T>
  static inline const std::string& EGoldSource_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EGoldSource>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EGoldSource_Name.");
    return CMsgMatchMetaDataContents_EGoldSource_Name(enum_t_value);
  }
  static inline bool EGoldSource_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EGoldSource* value) {
    return CMsgMatchMetaDataContents_EGoldSource_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMatchInfoFieldNumber = 2,
  };
  // optional .CMsgMatchMetaDataContents.MatchInfo match_info = 2;
  bool has_match_info() const;
  private:
  bool _internal_has_match_info() const;
  public:
  void clear_match_info();
  const ::CMsgMatchMetaDataContents_MatchInfo& match_info() const;
  PROTOBUF_NODISCARD ::CMsgMatchMetaDataContents_MatchInfo* release_match_info();
  ::CMsgMatchMetaDataContents_MatchInfo* mutable_match_info();
  void set_allocated_match_info(::CMsgMatchMetaDataContents_MatchInfo* match_info);
  private:
  const ::CMsgMatchMetaDataContents_MatchInfo& _internal_match_info() const;
  ::CMsgMatchMetaDataContents_MatchInfo* _internal_mutable_match_info();
  public:
  void unsafe_arena_set_allocated_match_info(
      ::CMsgMatchMetaDataContents_MatchInfo* match_info);
  ::CMsgMatchMetaDataContents_MatchInfo* unsafe_arena_release_match_info();

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaDataContents)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgMatchMetaDataContents_MatchInfo* match_info_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMatchMetaData /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMatchMetaData) */ {
 public:
  inline CMsgMatchMetaData() : CMsgMatchMetaData(nullptr) {}
  ~CMsgMatchMetaData() override;
  explicit PROTOBUF_CONSTEXPR CMsgMatchMetaData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMatchMetaData(const CMsgMatchMetaData& from);
  CMsgMatchMetaData(CMsgMatchMetaData&& from) noexcept
    : CMsgMatchMetaData() {
    *this = ::std::move(from);
  }

  inline CMsgMatchMetaData& operator=(const CMsgMatchMetaData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMatchMetaData& operator=(CMsgMatchMetaData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMatchMetaData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMatchMetaData* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchMetaData*>(
               &_CMsgMatchMetaData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CMsgMatchMetaData& a, CMsgMatchMetaData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMatchMetaData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMatchMetaData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMatchMetaData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMatchMetaData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMatchMetaData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMatchMetaData& from) {
    CMsgMatchMetaData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMatchMetaData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMatchMetaData";
  }
  protected:
  explicit CMsgMatchMetaData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchDetailsFieldNumber = 2,
    kMatchIdFieldNumber = 3,
    kVersionFieldNumber = 1,
  };
  // optional bytes match_details = 2;
  bool has_match_details() const;
  private:
  bool _internal_has_match_details() const;
  public:
  void clear_match_details();
  const std::string& match_details() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_match_details(ArgT0&& arg0, ArgT... args);
  std::string* mutable_match_details();
  PROTOBUF_NODISCARD std::string* release_match_details();
  void set_allocated_match_details(std::string* match_details);
  private:
  const std::string& _internal_match_details() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_match_details(const std::string& value);
  std::string* _internal_mutable_match_details();
  public:

  // optional uint64 match_id = 3;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  uint64_t match_id() const;
  void set_match_id(uint64_t value);
  private:
  uint64_t _internal_match_id() const;
  void _internal_set_match_id(uint64_t value);
  public:

  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  uint32_t version() const;
  void set_version(uint32_t value);
  private:
  uint32_t _internal_version() const;
  void _internal_set_version(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMatchMetaData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr match_details_;
    uint64_t match_id_;
    uint32_t version_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgMapLine /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgMapLine) */ {
 public:
  inline CMsgMapLine() : CMsgMapLine(nullptr) {}
  ~CMsgMapLine() override;
  explicit PROTOBUF_CONSTEXPR CMsgMapLine(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgMapLine(const CMsgMapLine& from);
  CMsgMapLine(CMsgMapLine&& from) noexcept
    : CMsgMapLine() {
    *this = ::std::move(from);
  }

  inline CMsgMapLine& operator=(const CMsgMapLine& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgMapLine& operator=(CMsgMapLine&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgMapLine& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgMapLine* internal_default_instance() {
    return reinterpret_cast<const CMsgMapLine*>(
               &_CMsgMapLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CMsgMapLine& a, CMsgMapLine& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgMapLine* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgMapLine* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgMapLine* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgMapLine>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgMapLine& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgMapLine& from) {
    CMsgMapLine::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgMapLine* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgMapLine";
  }
  protected:
  explicit CMsgMapLine(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kInitialFieldNumber = 3,
  };
  // optional int32 x = 1;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // optional int32 y = 2;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // optional bool initial = 3;
  bool has_initial() const;
  private:
  bool _internal_has_initial() const;
  public:
  void clear_initial();
  bool initial() const;
  void set_initial(bool value);
  private:
  bool _internal_initial() const;
  void _internal_set_initial(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgMapLine)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t x_;
    int32_t y_;
    bool initial_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgAccountHeroStats /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAccountHeroStats) */ {
 public:
  inline CMsgAccountHeroStats() : CMsgAccountHeroStats(nullptr) {}
  ~CMsgAccountHeroStats() override;
  explicit PROTOBUF_CONSTEXPR CMsgAccountHeroStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAccountHeroStats(const CMsgAccountHeroStats& from);
  CMsgAccountHeroStats(CMsgAccountHeroStats&& from) noexcept
    : CMsgAccountHeroStats() {
    *this = ::std::move(from);
  }

  inline CMsgAccountHeroStats& operator=(const CMsgAccountHeroStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAccountHeroStats& operator=(CMsgAccountHeroStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAccountHeroStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAccountHeroStats* internal_default_instance() {
    return reinterpret_cast<const CMsgAccountHeroStats*>(
               &_CMsgAccountHeroStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CMsgAccountHeroStats& a, CMsgAccountHeroStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAccountHeroStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAccountHeroStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAccountHeroStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgAccountHeroStats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAccountHeroStats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAccountHeroStats& from) {
    CMsgAccountHeroStats::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgAccountHeroStats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAccountHeroStats";
  }
  protected:
  explicit CMsgAccountHeroStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatIdFieldNumber = 2,
    kTotalValueFieldNumber = 3,
    kMedalsBronzeFieldNumber = 4,
    kMedalsSilverFieldNumber = 5,
    kMedalsGoldFieldNumber = 6,
    kHeroIdFieldNumber = 1,
  };
  // repeated uint32 stat_id = 2;
  int stat_id_size() const;
  private:
  int _internal_stat_id_size() const;
  public:
  void clear_stat_id();
  private:
  uint32_t _internal_stat_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_stat_id() const;
  void _internal_add_stat_id(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_stat_id();
  public:
  uint32_t stat_id(int index) const;
  void set_stat_id(int index, uint32_t value);
  void add_stat_id(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      stat_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_stat_id();

  // repeated uint64 total_value = 3;
  int total_value_size() const;
  private:
  int _internal_total_value_size() const;
  public:
  void clear_total_value();
  private:
  uint64_t _internal_total_value(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_total_value() const;
  void _internal_add_total_value(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_total_value();
  public:
  uint64_t total_value(int index) const;
  void set_total_value(int index, uint64_t value);
  void add_total_value(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      total_value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_total_value();

  // repeated uint32 medals_bronze = 4;
  int medals_bronze_size() const;
  private:
  int _internal_medals_bronze_size() const;
  public:
  void clear_medals_bronze();
  private:
  uint32_t _internal_medals_bronze(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_medals_bronze() const;
  void _internal_add_medals_bronze(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_medals_bronze();
  public:
  uint32_t medals_bronze(int index) const;
  void set_medals_bronze(int index, uint32_t value);
  void add_medals_bronze(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      medals_bronze() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_medals_bronze();

  // repeated uint32 medals_silver = 5;
  int medals_silver_size() const;
  private:
  int _internal_medals_silver_size() const;
  public:
  void clear_medals_silver();
  private:
  uint32_t _internal_medals_silver(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_medals_silver() const;
  void _internal_add_medals_silver(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_medals_silver();
  public:
  uint32_t medals_silver(int index) const;
  void set_medals_silver(int index, uint32_t value);
  void add_medals_silver(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      medals_silver() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_medals_silver();

  // repeated uint32 medals_gold = 6;
  int medals_gold_size() const;
  private:
  int _internal_medals_gold_size() const;
  public:
  void clear_medals_gold();
  private:
  uint32_t _internal_medals_gold(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_medals_gold() const;
  void _internal_add_medals_gold(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_medals_gold();
  public:
  uint32_t medals_gold(int index) const;
  void set_medals_gold(int index, uint32_t value);
  void add_medals_gold(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      medals_gold() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_medals_gold();

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  uint32_t hero_id() const;
  void set_hero_id(uint32_t value);
  private:
  uint32_t _internal_hero_id() const;
  void _internal_set_hero_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAccountHeroStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > stat_id_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > total_value_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > medals_bronze_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > medals_silver_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > medals_gold_;
    uint32_t hero_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgAccountBookStats /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAccountBookStats) */ {
 public:
  inline CMsgAccountBookStats() : CMsgAccountBookStats(nullptr) {}
  ~CMsgAccountBookStats() override;
  explicit PROTOBUF_CONSTEXPR CMsgAccountBookStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAccountBookStats(const CMsgAccountBookStats& from);
  CMsgAccountBookStats(CMsgAccountBookStats&& from) noexcept
    : CMsgAccountBookStats() {
    *this = ::std::move(from);
  }

  inline CMsgAccountBookStats& operator=(const CMsgAccountBookStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAccountBookStats& operator=(CMsgAccountBookStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAccountBookStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAccountBookStats* internal_default_instance() {
    return reinterpret_cast<const CMsgAccountBookStats*>(
               &_CMsgAccountBookStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CMsgAccountBookStats& a, CMsgAccountBookStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAccountBookStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAccountBookStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAccountBookStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgAccountBookStats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAccountBookStats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAccountBookStats& from) {
    CMsgAccountBookStats::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgAccountBookStats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAccountBookStats";
  }
  protected:
  explicit CMsgAccountBookStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBookIdFieldNumber = 1,
    kBookXpFieldNumber = 2,
    kBookMaxXpFieldNumber = 3,
  };
  // optional uint32 book_id = 1;
  bool has_book_id() const;
  private:
  bool _internal_has_book_id() const;
  public:
  void clear_book_id();
  uint32_t book_id() const;
  void set_book_id(uint32_t value);
  private:
  uint32_t _internal_book_id() const;
  void _internal_set_book_id(uint32_t value);
  public:

  // optional uint32 book_xp = 2;
  bool has_book_xp() const;
  private:
  bool _internal_has_book_xp() const;
  public:
  void clear_book_xp();
  uint32_t book_xp() const;
  void set_book_xp(uint32_t value);
  private:
  uint32_t _internal_book_xp() const;
  void _internal_set_book_xp(uint32_t value);
  public:

  // optional uint32 book_max_xp = 3;
  bool has_book_max_xp() const;
  private:
  bool _internal_has_book_max_xp() const;
  public:
  void clear_book_max_xp();
  uint32_t book_max_xp() const;
  void set_book_max_xp(uint32_t value);
  private:
  uint32_t _internal_book_max_xp() const;
  void _internal_set_book_max_xp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAccountBookStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t book_id_;
    uint32_t book_xp_;
    uint32_t book_max_xp_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class CMsgAccountStats /*final*/ :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAccountStats) */ {
 public:
  inline CMsgAccountStats() : CMsgAccountStats(nullptr) {}
  ~CMsgAccountStats() override;
  explicit PROTOBUF_CONSTEXPR CMsgAccountStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAccountStats(const CMsgAccountStats& from);
  CMsgAccountStats(CMsgAccountStats&& from) noexcept
    : CMsgAccountStats() {
    *this = ::std::move(from);
  }

  inline CMsgAccountStats& operator=(const CMsgAccountStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAccountStats& operator=(CMsgAccountStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgAccountStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAccountStats* internal_default_instance() {
    return reinterpret_cast<const CMsgAccountStats*>(
               &_CMsgAccountStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CMsgAccountStats& a, CMsgAccountStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAccountStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAccountStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgAccountStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const /*final*/ {
    return CreateMaybeMessage<CMsgAccountStats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgAccountStats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgAccountStats& from) {
    CMsgAccountStats::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() /*final*/;
  bool IsInitialized() const /*final*/;

  size_t ByteSizeLong() const /*final*/;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) /*final*/;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const /*final*/;
  int GetCachedSize() const /*final*/ { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const /*final*/;
  void InternalSwap(CMsgAccountStats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAccountStats";
  }
  protected:
  explicit CMsgAccountStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const /*final*/;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const /*final*/;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 2,
    kAccountIdFieldNumber = 1,
  };
  // repeated .CMsgAccountHeroStats stats = 2;
  int stats_size() const;
  private:
  int _internal_stats_size() const;
  public:
  void clear_stats();
  ::CMsgAccountHeroStats* mutable_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountHeroStats >*
      mutable_stats();
  private:
  const ::CMsgAccountHeroStats& _internal_stats(int index) const;
  ::CMsgAccountHeroStats* _internal_add_stats();
  public:
  const ::CMsgAccountHeroStats& stats(int index) const;
  ::CMsgAccountHeroStats* add_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountHeroStats >&
      stats() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  uint32_t account_id() const;
  void set_account_id(uint32_t value);
  private:
  uint32_t _internal_account_id() const;
  void _internal_set_account_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAccountStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountHeroStats > stats_;
    uint32_t account_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgcmessages_5fcommon_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CSOCitadelLobby

// optional uint64 lobby_id = 1;
inline bool CSOCitadelLobby::_internal_has_lobby_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_lobby_id() const {
  return _internal_has_lobby_id();
}
inline void CSOCitadelLobby::clear_lobby_id() {
  _impl_.lobby_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CSOCitadelLobby::_internal_lobby_id() const {
  return _impl_.lobby_id_;
}
inline uint64_t CSOCitadelLobby::lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.lobby_id)
  return _internal_lobby_id();
}
inline void CSOCitadelLobby::_internal_set_lobby_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.lobby_id_ = value;
}
inline void CSOCitadelLobby::set_lobby_id(uint64_t value) {
  _internal_set_lobby_id(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.lobby_id)
}

// optional uint64 match_id = 2;
inline bool CSOCitadelLobby::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_match_id() const {
  return _internal_has_match_id();
}
inline void CSOCitadelLobby::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CSOCitadelLobby::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CSOCitadelLobby::match_id() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.match_id)
  return _internal_match_id();
}
inline void CSOCitadelLobby::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.match_id_ = value;
}
inline void CSOCitadelLobby::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.match_id)
}

// optional .ECitadelMatchMode match_mode = 3 [default = k_ECitadelMatchMode_Invalid];
inline bool CSOCitadelLobby::_internal_has_match_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_match_mode() const {
  return _internal_has_match_mode();
}
inline void CSOCitadelLobby::clear_match_mode() {
  _impl_.match_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::ECitadelMatchMode CSOCitadelLobby::_internal_match_mode() const {
  return static_cast< ::ECitadelMatchMode >(_impl_.match_mode_);
}
inline ::ECitadelMatchMode CSOCitadelLobby::match_mode() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.match_mode)
  return _internal_match_mode();
}
inline void CSOCitadelLobby::_internal_set_match_mode(::ECitadelMatchMode value) {
  assert(::ECitadelMatchMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.match_mode_ = value;
}
inline void CSOCitadelLobby::set_match_mode(::ECitadelMatchMode value) {
  _internal_set_match_mode(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.match_mode)
}

// optional .ECitadelGameMode game_mode = 4 [default = k_ECitadelGameMode_Invalid];
inline bool CSOCitadelLobby::_internal_has_game_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_game_mode() const {
  return _internal_has_game_mode();
}
inline void CSOCitadelLobby::clear_game_mode() {
  _impl_.game_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::ECitadelGameMode CSOCitadelLobby::_internal_game_mode() const {
  return static_cast< ::ECitadelGameMode >(_impl_.game_mode_);
}
inline ::ECitadelGameMode CSOCitadelLobby::game_mode() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.game_mode)
  return _internal_game_mode();
}
inline void CSOCitadelLobby::_internal_set_game_mode(::ECitadelGameMode value) {
  assert(::ECitadelGameMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.game_mode_ = value;
}
inline void CSOCitadelLobby::set_game_mode(::ECitadelGameMode value) {
  _internal_set_game_mode(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.game_mode)
}

// optional uint32 compatibility_version = 5;
inline bool CSOCitadelLobby::_internal_has_compatibility_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_compatibility_version() const {
  return _internal_has_compatibility_version();
}
inline void CSOCitadelLobby::clear_compatibility_version() {
  _impl_.compatibility_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CSOCitadelLobby::_internal_compatibility_version() const {
  return _impl_.compatibility_version_;
}
inline uint32_t CSOCitadelLobby::compatibility_version() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.compatibility_version)
  return _internal_compatibility_version();
}
inline void CSOCitadelLobby::_internal_set_compatibility_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.compatibility_version_ = value;
}
inline void CSOCitadelLobby::set_compatibility_version(uint32_t value) {
  _internal_set_compatibility_version(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.compatibility_version)
}

// repeated .CExtraMsgBlock extra_messages = 6;
inline int CSOCitadelLobby::_internal_extra_messages_size() const {
  return _impl_.extra_messages_.size();
}
inline int CSOCitadelLobby::extra_messages_size() const {
  return _internal_extra_messages_size();
}
inline ::CExtraMsgBlock* CSOCitadelLobby::mutable_extra_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CSOCitadelLobby.extra_messages)
  return _impl_.extra_messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >*
CSOCitadelLobby::mutable_extra_messages() {
  // @@protoc_insertion_point(field_mutable_list:CSOCitadelLobby.extra_messages)
  return &_impl_.extra_messages_;
}
inline const ::CExtraMsgBlock& CSOCitadelLobby::_internal_extra_messages(int index) const {
  return _impl_.extra_messages_.Get(index);
}
inline const ::CExtraMsgBlock& CSOCitadelLobby::extra_messages(int index) const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.extra_messages)
  return _internal_extra_messages(index);
}
inline ::CExtraMsgBlock* CSOCitadelLobby::_internal_add_extra_messages() {
  return _impl_.extra_messages_.Add();
}
inline ::CExtraMsgBlock* CSOCitadelLobby::add_extra_messages() {
  ::CExtraMsgBlock* _add = _internal_add_extra_messages();
  // @@protoc_insertion_point(field_add:CSOCitadelLobby.extra_messages)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CExtraMsgBlock >&
CSOCitadelLobby::extra_messages() const {
  // @@protoc_insertion_point(field_list:CSOCitadelLobby.extra_messages)
  return _impl_.extra_messages_;
}

// optional fixed64 server_steam_id = 7;
inline bool CSOCitadelLobby::_internal_has_server_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_server_steam_id() const {
  return _internal_has_server_steam_id();
}
inline void CSOCitadelLobby::clear_server_steam_id() {
  _impl_.server_steam_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint64_t CSOCitadelLobby::_internal_server_steam_id() const {
  return _impl_.server_steam_id_;
}
inline uint64_t CSOCitadelLobby::server_steam_id() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.server_steam_id)
  return _internal_server_steam_id();
}
inline void CSOCitadelLobby::_internal_set_server_steam_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.server_steam_id_ = value;
}
inline void CSOCitadelLobby::set_server_steam_id(uint64_t value) {
  _internal_set_server_steam_id(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.server_steam_id)
}

// optional .ELobbyServerState server_state = 8 [default = k_eLobbyServerState_Assign];
inline bool CSOCitadelLobby::_internal_has_server_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_server_state() const {
  return _internal_has_server_state();
}
inline void CSOCitadelLobby::clear_server_state() {
  _impl_.server_state_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::ELobbyServerState CSOCitadelLobby::_internal_server_state() const {
  return static_cast< ::ELobbyServerState >(_impl_.server_state_);
}
inline ::ELobbyServerState CSOCitadelLobby::server_state() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.server_state)
  return _internal_server_state();
}
inline void CSOCitadelLobby::_internal_set_server_state(::ELobbyServerState value) {
  assert(::ELobbyServerState_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.server_state_ = value;
}
inline void CSOCitadelLobby::set_server_state(::ELobbyServerState value) {
  _internal_set_server_state(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.server_state)
}

// optional uint32 udp_connect_ip = 9;
inline bool CSOCitadelLobby::_internal_has_udp_connect_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_udp_connect_ip() const {
  return _internal_has_udp_connect_ip();
}
inline void CSOCitadelLobby::clear_udp_connect_ip() {
  _impl_.udp_connect_ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint32_t CSOCitadelLobby::_internal_udp_connect_ip() const {
  return _impl_.udp_connect_ip_;
}
inline uint32_t CSOCitadelLobby::udp_connect_ip() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.udp_connect_ip)
  return _internal_udp_connect_ip();
}
inline void CSOCitadelLobby::_internal_set_udp_connect_ip(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.udp_connect_ip_ = value;
}
inline void CSOCitadelLobby::set_udp_connect_ip(uint32_t value) {
  _internal_set_udp_connect_ip(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.udp_connect_ip)
}

// optional uint32 udp_connect_port = 10;
inline bool CSOCitadelLobby::_internal_has_udp_connect_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_udp_connect_port() const {
  return _internal_has_udp_connect_port();
}
inline void CSOCitadelLobby::clear_udp_connect_port() {
  _impl_.udp_connect_port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CSOCitadelLobby::_internal_udp_connect_port() const {
  return _impl_.udp_connect_port_;
}
inline uint32_t CSOCitadelLobby::udp_connect_port() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.udp_connect_port)
  return _internal_udp_connect_port();
}
inline void CSOCitadelLobby::_internal_set_udp_connect_port(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.udp_connect_port_ = value;
}
inline void CSOCitadelLobby::set_udp_connect_port(uint32_t value) {
  _internal_set_udp_connect_port(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.udp_connect_port)
}

// optional bytes sdr_address = 12;
inline bool CSOCitadelLobby::_internal_has_sdr_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_sdr_address() const {
  return _internal_has_sdr_address();
}
inline void CSOCitadelLobby::clear_sdr_address() {
  _impl_.sdr_address_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOCitadelLobby::sdr_address() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.sdr_address)
  return _internal_sdr_address();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOCitadelLobby::set_sdr_address(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.sdr_address_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.sdr_address)
}
inline std::string* CSOCitadelLobby::mutable_sdr_address() {
  std::string* _s = _internal_mutable_sdr_address();
  // @@protoc_insertion_point(field_mutable:CSOCitadelLobby.sdr_address)
  return _s;
}
inline const std::string& CSOCitadelLobby::_internal_sdr_address() const {
  return _impl_.sdr_address_.Get();
}
inline void CSOCitadelLobby::_internal_set_sdr_address(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.sdr_address_.Set(value, GetArenaForAllocation());
}
inline std::string* CSOCitadelLobby::_internal_mutable_sdr_address() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.sdr_address_.Mutable(GetArenaForAllocation());
}
inline std::string* CSOCitadelLobby::release_sdr_address() {
  // @@protoc_insertion_point(field_release:CSOCitadelLobby.sdr_address)
  if (!_internal_has_sdr_address()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.sdr_address_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sdr_address_.IsDefault()) {
    _impl_.sdr_address_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CSOCitadelLobby::set_allocated_sdr_address(std::string* sdr_address) {
  if (sdr_address != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.sdr_address_.SetAllocated(sdr_address, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sdr_address_.IsDefault()) {
    _impl_.sdr_address_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSOCitadelLobby.sdr_address)
}

// optional uint32 server_version = 13;
inline bool CSOCitadelLobby::_internal_has_server_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_server_version() const {
  return _internal_has_server_version();
}
inline void CSOCitadelLobby::clear_server_version() {
  _impl_.server_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline uint32_t CSOCitadelLobby::_internal_server_version() const {
  return _impl_.server_version_;
}
inline uint32_t CSOCitadelLobby::server_version() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.server_version)
  return _internal_server_version();
}
inline void CSOCitadelLobby::_internal_set_server_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.server_version_ = value;
}
inline void CSOCitadelLobby::set_server_version(uint32_t value) {
  _internal_set_server_version(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.server_version)
}

// optional bool safe_to_abandon = 14;
inline bool CSOCitadelLobby::_internal_has_safe_to_abandon() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CSOCitadelLobby::has_safe_to_abandon() const {
  return _internal_has_safe_to_abandon();
}
inline void CSOCitadelLobby::clear_safe_to_abandon() {
  _impl_.safe_to_abandon_ = false;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline bool CSOCitadelLobby::_internal_safe_to_abandon() const {
  return _impl_.safe_to_abandon_;
}
inline bool CSOCitadelLobby::safe_to_abandon() const {
  // @@protoc_insertion_point(field_get:CSOCitadelLobby.safe_to_abandon)
  return _internal_safe_to_abandon();
}
inline void CSOCitadelLobby::_internal_set_safe_to_abandon(bool value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.safe_to_abandon_ = value;
}
inline void CSOCitadelLobby::set_safe_to_abandon(bool value) {
  _internal_set_safe_to_abandon(value);
  // @@protoc_insertion_point(field_set:CSOCitadelLobby.safe_to_abandon)
}

// -------------------------------------------------------------------

// CLobbyData_PostMatchSurvey_PlayerSurvey

// optional uint32 account_id = 1;
inline bool CLobbyData_PostMatchSurvey_PlayerSurvey::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CLobbyData_PostMatchSurvey_PlayerSurvey::has_account_id() const {
  return _internal_has_account_id();
}
inline void CLobbyData_PostMatchSurvey_PlayerSurvey::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CLobbyData_PostMatchSurvey_PlayerSurvey::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CLobbyData_PostMatchSurvey_PlayerSurvey::account_id() const {
  // @@protoc_insertion_point(field_get:CLobbyData_PostMatchSurvey.PlayerSurvey.account_id)
  return _internal_account_id();
}
inline void CLobbyData_PostMatchSurvey_PlayerSurvey::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CLobbyData_PostMatchSurvey_PlayerSurvey::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CLobbyData_PostMatchSurvey.PlayerSurvey.account_id)
}

// optional uint32 question_id = 2;
inline bool CLobbyData_PostMatchSurvey_PlayerSurvey::_internal_has_question_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CLobbyData_PostMatchSurvey_PlayerSurvey::has_question_id() const {
  return _internal_has_question_id();
}
inline void CLobbyData_PostMatchSurvey_PlayerSurvey::clear_question_id() {
  _impl_.question_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CLobbyData_PostMatchSurvey_PlayerSurvey::_internal_question_id() const {
  return _impl_.question_id_;
}
inline uint32_t CLobbyData_PostMatchSurvey_PlayerSurvey::question_id() const {
  // @@protoc_insertion_point(field_get:CLobbyData_PostMatchSurvey.PlayerSurvey.question_id)
  return _internal_question_id();
}
inline void CLobbyData_PostMatchSurvey_PlayerSurvey::_internal_set_question_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.question_id_ = value;
}
inline void CLobbyData_PostMatchSurvey_PlayerSurvey::set_question_id(uint32_t value) {
  _internal_set_question_id(value);
  // @@protoc_insertion_point(field_set:CLobbyData_PostMatchSurvey.PlayerSurvey.question_id)
}

// -------------------------------------------------------------------

// CLobbyData_PostMatchSurvey

// repeated .CLobbyData_PostMatchSurvey.PlayerSurvey surveys = 1;
inline int CLobbyData_PostMatchSurvey::_internal_surveys_size() const {
  return _impl_.surveys_.size();
}
inline int CLobbyData_PostMatchSurvey::surveys_size() const {
  return _internal_surveys_size();
}
inline void CLobbyData_PostMatchSurvey::clear_surveys() {
  _impl_.surveys_.Clear();
}
inline ::CLobbyData_PostMatchSurvey_PlayerSurvey* CLobbyData_PostMatchSurvey::mutable_surveys(int index) {
  // @@protoc_insertion_point(field_mutable:CLobbyData_PostMatchSurvey.surveys)
  return _impl_.surveys_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CLobbyData_PostMatchSurvey_PlayerSurvey >*
CLobbyData_PostMatchSurvey::mutable_surveys() {
  // @@protoc_insertion_point(field_mutable_list:CLobbyData_PostMatchSurvey.surveys)
  return &_impl_.surveys_;
}
inline const ::CLobbyData_PostMatchSurvey_PlayerSurvey& CLobbyData_PostMatchSurvey::_internal_surveys(int index) const {
  return _impl_.surveys_.Get(index);
}
inline const ::CLobbyData_PostMatchSurvey_PlayerSurvey& CLobbyData_PostMatchSurvey::surveys(int index) const {
  // @@protoc_insertion_point(field_get:CLobbyData_PostMatchSurvey.surveys)
  return _internal_surveys(index);
}
inline ::CLobbyData_PostMatchSurvey_PlayerSurvey* CLobbyData_PostMatchSurvey::_internal_add_surveys() {
  return _impl_.surveys_.Add();
}
inline ::CLobbyData_PostMatchSurvey_PlayerSurvey* CLobbyData_PostMatchSurvey::add_surveys() {
  ::CLobbyData_PostMatchSurvey_PlayerSurvey* _add = _internal_add_surveys();
  // @@protoc_insertion_point(field_add:CLobbyData_PostMatchSurvey.surveys)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CLobbyData_PostMatchSurvey_PlayerSurvey >&
CLobbyData_PostMatchSurvey::surveys() const {
  // @@protoc_insertion_point(field_list:CLobbyData_PostMatchSurvey.surveys)
  return _impl_.surveys_;
}

// -------------------------------------------------------------------

// CMsgHeroSelectionMatchInfo_Hero

// optional uint32 hero_id = 1;
inline bool CMsgHeroSelectionMatchInfo_Hero::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgHeroSelectionMatchInfo_Hero::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgHeroSelectionMatchInfo_Hero::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgHeroSelectionMatchInfo_Hero::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgHeroSelectionMatchInfo_Hero::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgHeroSelectionMatchInfo.Hero.hero_id)
  return _internal_hero_id();
}
inline void CMsgHeroSelectionMatchInfo_Hero::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hero_id_ = value;
}
inline void CMsgHeroSelectionMatchInfo_Hero::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgHeroSelectionMatchInfo.Hero.hero_id)
}

// optional uint32 priority = 2;
inline bool CMsgHeroSelectionMatchInfo_Hero::_internal_has_priority() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgHeroSelectionMatchInfo_Hero::has_priority() const {
  return _internal_has_priority();
}
inline void CMsgHeroSelectionMatchInfo_Hero::clear_priority() {
  _impl_.priority_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgHeroSelectionMatchInfo_Hero::_internal_priority() const {
  return _impl_.priority_;
}
inline uint32_t CMsgHeroSelectionMatchInfo_Hero::priority() const {
  // @@protoc_insertion_point(field_get:CMsgHeroSelectionMatchInfo.Hero.priority)
  return _internal_priority();
}
inline void CMsgHeroSelectionMatchInfo_Hero::_internal_set_priority(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.priority_ = value;
}
inline void CMsgHeroSelectionMatchInfo_Hero::set_priority(uint32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:CMsgHeroSelectionMatchInfo.Hero.priority)
}

// -------------------------------------------------------------------

// CMsgHeroSelectionMatchInfo

// repeated .CMsgHeroSelectionMatchInfo.Hero hero_selections = 1;
inline int CMsgHeroSelectionMatchInfo::_internal_hero_selections_size() const {
  return _impl_.hero_selections_.size();
}
inline int CMsgHeroSelectionMatchInfo::hero_selections_size() const {
  return _internal_hero_selections_size();
}
inline void CMsgHeroSelectionMatchInfo::clear_hero_selections() {
  _impl_.hero_selections_.Clear();
}
inline ::CMsgHeroSelectionMatchInfo_Hero* CMsgHeroSelectionMatchInfo::mutable_hero_selections(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgHeroSelectionMatchInfo.hero_selections)
  return _impl_.hero_selections_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroSelectionMatchInfo_Hero >*
CMsgHeroSelectionMatchInfo::mutable_hero_selections() {
  // @@protoc_insertion_point(field_mutable_list:CMsgHeroSelectionMatchInfo.hero_selections)
  return &_impl_.hero_selections_;
}
inline const ::CMsgHeroSelectionMatchInfo_Hero& CMsgHeroSelectionMatchInfo::_internal_hero_selections(int index) const {
  return _impl_.hero_selections_.Get(index);
}
inline const ::CMsgHeroSelectionMatchInfo_Hero& CMsgHeroSelectionMatchInfo::hero_selections(int index) const {
  // @@protoc_insertion_point(field_get:CMsgHeroSelectionMatchInfo.hero_selections)
  return _internal_hero_selections(index);
}
inline ::CMsgHeroSelectionMatchInfo_Hero* CMsgHeroSelectionMatchInfo::_internal_add_hero_selections() {
  return _impl_.hero_selections_.Add();
}
inline ::CMsgHeroSelectionMatchInfo_Hero* CMsgHeroSelectionMatchInfo::add_hero_selections() {
  ::CMsgHeroSelectionMatchInfo_Hero* _add = _internal_add_hero_selections();
  // @@protoc_insertion_point(field_add:CMsgHeroSelectionMatchInfo.hero_selections)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroSelectionMatchInfo_Hero >&
CMsgHeroSelectionMatchInfo::hero_selections() const {
  // @@protoc_insertion_point(field_list:CMsgHeroSelectionMatchInfo.hero_selections)
  return _impl_.hero_selections_;
}

// -------------------------------------------------------------------

// CMsgStartFindingMatchInfo

// optional string server_search_key = 1;
inline bool CMsgStartFindingMatchInfo::_internal_has_server_search_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgStartFindingMatchInfo::has_server_search_key() const {
  return _internal_has_server_search_key();
}
inline void CMsgStartFindingMatchInfo::clear_server_search_key() {
  _impl_.server_search_key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgStartFindingMatchInfo::server_search_key() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatchInfo.server_search_key)
  return _internal_server_search_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgStartFindingMatchInfo::set_server_search_key(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.server_search_key_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatchInfo.server_search_key)
}
inline std::string* CMsgStartFindingMatchInfo::mutable_server_search_key() {
  std::string* _s = _internal_mutable_server_search_key();
  // @@protoc_insertion_point(field_mutable:CMsgStartFindingMatchInfo.server_search_key)
  return _s;
}
inline const std::string& CMsgStartFindingMatchInfo::_internal_server_search_key() const {
  return _impl_.server_search_key_.Get();
}
inline void CMsgStartFindingMatchInfo::_internal_set_server_search_key(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.server_search_key_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgStartFindingMatchInfo::_internal_mutable_server_search_key() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.server_search_key_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgStartFindingMatchInfo::release_server_search_key() {
  // @@protoc_insertion_point(field_release:CMsgStartFindingMatchInfo.server_search_key)
  if (!_internal_has_server_search_key()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.server_search_key_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.server_search_key_.IsDefault()) {
    _impl_.server_search_key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgStartFindingMatchInfo::set_allocated_server_search_key(std::string* server_search_key) {
  if (server_search_key != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.server_search_key_.SetAllocated(server_search_key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.server_search_key_.IsDefault()) {
    _impl_.server_search_key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgStartFindingMatchInfo.server_search_key)
}

// optional string server_command_string = 2;
inline bool CMsgStartFindingMatchInfo::_internal_has_server_command_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgStartFindingMatchInfo::has_server_command_string() const {
  return _internal_has_server_command_string();
}
inline void CMsgStartFindingMatchInfo::clear_server_command_string() {
  _impl_.server_command_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgStartFindingMatchInfo::server_command_string() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatchInfo.server_command_string)
  return _internal_server_command_string();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgStartFindingMatchInfo::set_server_command_string(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.server_command_string_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatchInfo.server_command_string)
}
inline std::string* CMsgStartFindingMatchInfo::mutable_server_command_string() {
  std::string* _s = _internal_mutable_server_command_string();
  // @@protoc_insertion_point(field_mutable:CMsgStartFindingMatchInfo.server_command_string)
  return _s;
}
inline const std::string& CMsgStartFindingMatchInfo::_internal_server_command_string() const {
  return _impl_.server_command_string_.Get();
}
inline void CMsgStartFindingMatchInfo::_internal_set_server_command_string(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.server_command_string_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgStartFindingMatchInfo::_internal_mutable_server_command_string() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.server_command_string_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgStartFindingMatchInfo::release_server_command_string() {
  // @@protoc_insertion_point(field_release:CMsgStartFindingMatchInfo.server_command_string)
  if (!_internal_has_server_command_string()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.server_command_string_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.server_command_string_.IsDefault()) {
    _impl_.server_command_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgStartFindingMatchInfo::set_allocated_server_command_string(std::string* server_command_string) {
  if (server_command_string != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.server_command_string_.SetAllocated(server_command_string, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.server_command_string_.IsDefault()) {
    _impl_.server_command_string_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgStartFindingMatchInfo.server_command_string)
}

// optional .ECitadelMatchMode match_mode = 3 [default = k_ECitadelMatchMode_Invalid];
inline bool CMsgStartFindingMatchInfo::_internal_has_match_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgStartFindingMatchInfo::has_match_mode() const {
  return _internal_has_match_mode();
}
inline void CMsgStartFindingMatchInfo::clear_match_mode() {
  _impl_.match_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::ECitadelMatchMode CMsgStartFindingMatchInfo::_internal_match_mode() const {
  return static_cast< ::ECitadelMatchMode >(_impl_.match_mode_);
}
inline ::ECitadelMatchMode CMsgStartFindingMatchInfo::match_mode() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatchInfo.match_mode)
  return _internal_match_mode();
}
inline void CMsgStartFindingMatchInfo::_internal_set_match_mode(::ECitadelMatchMode value) {
  assert(::ECitadelMatchMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.match_mode_ = value;
}
inline void CMsgStartFindingMatchInfo::set_match_mode(::ECitadelMatchMode value) {
  _internal_set_match_mode(value);
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatchInfo.match_mode)
}

// optional .ECitadelGameMode game_mode = 5 [default = k_ECitadelGameMode_Invalid];
inline bool CMsgStartFindingMatchInfo::_internal_has_game_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgStartFindingMatchInfo::has_game_mode() const {
  return _internal_has_game_mode();
}
inline void CMsgStartFindingMatchInfo::clear_game_mode() {
  _impl_.game_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::ECitadelGameMode CMsgStartFindingMatchInfo::_internal_game_mode() const {
  return static_cast< ::ECitadelGameMode >(_impl_.game_mode_);
}
inline ::ECitadelGameMode CMsgStartFindingMatchInfo::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatchInfo.game_mode)
  return _internal_game_mode();
}
inline void CMsgStartFindingMatchInfo::_internal_set_game_mode(::ECitadelGameMode value) {
  assert(::ECitadelGameMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.game_mode_ = value;
}
inline void CMsgStartFindingMatchInfo::set_game_mode(::ECitadelGameMode value) {
  _internal_set_game_mode(value);
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatchInfo.game_mode)
}

// optional bool solo_match = 6;
inline bool CMsgStartFindingMatchInfo::_internal_has_solo_match() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgStartFindingMatchInfo::has_solo_match() const {
  return _internal_has_solo_match();
}
inline void CMsgStartFindingMatchInfo::clear_solo_match() {
  _impl_.solo_match_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgStartFindingMatchInfo::_internal_solo_match() const {
  return _impl_.solo_match_;
}
inline bool CMsgStartFindingMatchInfo::solo_match() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatchInfo.solo_match)
  return _internal_solo_match();
}
inline void CMsgStartFindingMatchInfo::_internal_set_solo_match(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.solo_match_ = value;
}
inline void CMsgStartFindingMatchInfo::set_solo_match(bool value) {
  _internal_set_solo_match(value);
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatchInfo.solo_match)
}

// optional .ECitadelBotDifficulty bot_difficulty = 7 [default = k_ECitadelBotDifficulty_None];
inline bool CMsgStartFindingMatchInfo::_internal_has_bot_difficulty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgStartFindingMatchInfo::has_bot_difficulty() const {
  return _internal_has_bot_difficulty();
}
inline void CMsgStartFindingMatchInfo::clear_bot_difficulty() {
  _impl_.bot_difficulty_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::ECitadelBotDifficulty CMsgStartFindingMatchInfo::_internal_bot_difficulty() const {
  return static_cast< ::ECitadelBotDifficulty >(_impl_.bot_difficulty_);
}
inline ::ECitadelBotDifficulty CMsgStartFindingMatchInfo::bot_difficulty() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatchInfo.bot_difficulty)
  return _internal_bot_difficulty();
}
inline void CMsgStartFindingMatchInfo::_internal_set_bot_difficulty(::ECitadelBotDifficulty value) {
  assert(::ECitadelBotDifficulty_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.bot_difficulty_ = value;
}
inline void CMsgStartFindingMatchInfo::set_bot_difficulty(::ECitadelBotDifficulty value) {
  _internal_set_bot_difficulty(value);
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatchInfo.bot_difficulty)
}

// optional .ECitadelRegionMode region_mode = 8 [default = k_ECitadelRegionMode_ROW];
inline bool CMsgStartFindingMatchInfo::_internal_has_region_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgStartFindingMatchInfo::has_region_mode() const {
  return _internal_has_region_mode();
}
inline void CMsgStartFindingMatchInfo::clear_region_mode() {
  _impl_.region_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::ECitadelRegionMode CMsgStartFindingMatchInfo::_internal_region_mode() const {
  return static_cast< ::ECitadelRegionMode >(_impl_.region_mode_);
}
inline ::ECitadelRegionMode CMsgStartFindingMatchInfo::region_mode() const {
  // @@protoc_insertion_point(field_get:CMsgStartFindingMatchInfo.region_mode)
  return _internal_region_mode();
}
inline void CMsgStartFindingMatchInfo::_internal_set_region_mode(::ECitadelRegionMode value) {
  assert(::ECitadelRegionMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.region_mode_ = value;
}
inline void CMsgStartFindingMatchInfo::set_region_mode(::ECitadelRegionMode value) {
  _internal_set_region_mode(value);
  // @@protoc_insertion_point(field_set:CMsgStartFindingMatchInfo.region_mode)
}

// -------------------------------------------------------------------

// CMsgAnyToGCReportAsserts_TrackedAssert

// optional string filename = 1;
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::_internal_has_filename() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::has_filename() const {
  return _internal_has_filename();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::clear_filename() {
  _impl_.filename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgAnyToGCReportAsserts_TrackedAssert::filename() const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAsserts.TrackedAssert.filename)
  return _internal_filename();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgAnyToGCReportAsserts_TrackedAssert::set_filename(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.filename_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgAnyToGCReportAsserts.TrackedAssert.filename)
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::mutable_filename() {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:CMsgAnyToGCReportAsserts.TrackedAssert.filename)
  return _s;
}
inline const std::string& CMsgAnyToGCReportAsserts_TrackedAssert::_internal_filename() const {
  return _impl_.filename_.Get();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::_internal_set_filename(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.filename_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::_internal_mutable_filename() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.filename_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::release_filename() {
  // @@protoc_insertion_point(field_release:CMsgAnyToGCReportAsserts.TrackedAssert.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.filename_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.filename_.IsDefault()) {
    _impl_.filename_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.filename_.SetAllocated(filename, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.filename_.IsDefault()) {
    _impl_.filename_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgAnyToGCReportAsserts.TrackedAssert.filename)
}

// optional uint32 line_number = 2;
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::_internal_has_line_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::has_line_number() const {
  return _internal_has_line_number();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::clear_line_number() {
  _impl_.line_number_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgAnyToGCReportAsserts_TrackedAssert::_internal_line_number() const {
  return _impl_.line_number_;
}
inline uint32_t CMsgAnyToGCReportAsserts_TrackedAssert::line_number() const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAsserts.TrackedAssert.line_number)
  return _internal_line_number();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::_internal_set_line_number(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.line_number_ = value;
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::set_line_number(uint32_t value) {
  _internal_set_line_number(value);
  // @@protoc_insertion_point(field_set:CMsgAnyToGCReportAsserts.TrackedAssert.line_number)
}

// optional string sample_msg = 3;
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::_internal_has_sample_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::has_sample_msg() const {
  return _internal_has_sample_msg();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::clear_sample_msg() {
  _impl_.sample_msg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgAnyToGCReportAsserts_TrackedAssert::sample_msg() const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAsserts.TrackedAssert.sample_msg)
  return _internal_sample_msg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgAnyToGCReportAsserts_TrackedAssert::set_sample_msg(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.sample_msg_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgAnyToGCReportAsserts.TrackedAssert.sample_msg)
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::mutable_sample_msg() {
  std::string* _s = _internal_mutable_sample_msg();
  // @@protoc_insertion_point(field_mutable:CMsgAnyToGCReportAsserts.TrackedAssert.sample_msg)
  return _s;
}
inline const std::string& CMsgAnyToGCReportAsserts_TrackedAssert::_internal_sample_msg() const {
  return _impl_.sample_msg_.Get();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::_internal_set_sample_msg(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sample_msg_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::_internal_mutable_sample_msg() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.sample_msg_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::release_sample_msg() {
  // @@protoc_insertion_point(field_release:CMsgAnyToGCReportAsserts.TrackedAssert.sample_msg)
  if (!_internal_has_sample_msg()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.sample_msg_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sample_msg_.IsDefault()) {
    _impl_.sample_msg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::set_allocated_sample_msg(std::string* sample_msg) {
  if (sample_msg != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.sample_msg_.SetAllocated(sample_msg, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sample_msg_.IsDefault()) {
    _impl_.sample_msg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgAnyToGCReportAsserts.TrackedAssert.sample_msg)
}

// optional string sample_stack = 4;
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::_internal_has_sample_stack() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::has_sample_stack() const {
  return _internal_has_sample_stack();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::clear_sample_stack() {
  _impl_.sample_stack_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgAnyToGCReportAsserts_TrackedAssert::sample_stack() const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAsserts.TrackedAssert.sample_stack)
  return _internal_sample_stack();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgAnyToGCReportAsserts_TrackedAssert::set_sample_stack(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000004u;
 _impl_.sample_stack_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgAnyToGCReportAsserts.TrackedAssert.sample_stack)
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::mutable_sample_stack() {
  std::string* _s = _internal_mutable_sample_stack();
  // @@protoc_insertion_point(field_mutable:CMsgAnyToGCReportAsserts.TrackedAssert.sample_stack)
  return _s;
}
inline const std::string& CMsgAnyToGCReportAsserts_TrackedAssert::_internal_sample_stack() const {
  return _impl_.sample_stack_.Get();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::_internal_set_sample_stack(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.sample_stack_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::_internal_mutable_sample_stack() {
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.sample_stack_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::release_sample_stack() {
  // @@protoc_insertion_point(field_release:CMsgAnyToGCReportAsserts.TrackedAssert.sample_stack)
  if (!_internal_has_sample_stack()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* p = _impl_.sample_stack_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sample_stack_.IsDefault()) {
    _impl_.sample_stack_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::set_allocated_sample_stack(std::string* sample_stack) {
  if (sample_stack != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.sample_stack_.SetAllocated(sample_stack, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sample_stack_.IsDefault()) {
    _impl_.sample_stack_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgAnyToGCReportAsserts.TrackedAssert.sample_stack)
}

// optional uint32 times_fired = 5;
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::_internal_has_times_fired() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::has_times_fired() const {
  return _internal_has_times_fired();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::clear_times_fired() {
  _impl_.times_fired_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgAnyToGCReportAsserts_TrackedAssert::_internal_times_fired() const {
  return _impl_.times_fired_;
}
inline uint32_t CMsgAnyToGCReportAsserts_TrackedAssert::times_fired() const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAsserts.TrackedAssert.times_fired)
  return _internal_times_fired();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::_internal_set_times_fired(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.times_fired_ = value;
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::set_times_fired(uint32_t value) {
  _internal_set_times_fired(value);
  // @@protoc_insertion_point(field_set:CMsgAnyToGCReportAsserts.TrackedAssert.times_fired)
}

// optional string function_name = 6;
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::_internal_has_function_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::has_function_name() const {
  return _internal_has_function_name();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::clear_function_name() {
  _impl_.function_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgAnyToGCReportAsserts_TrackedAssert::function_name() const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAsserts.TrackedAssert.function_name)
  return _internal_function_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgAnyToGCReportAsserts_TrackedAssert::set_function_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000008u;
 _impl_.function_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgAnyToGCReportAsserts.TrackedAssert.function_name)
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::mutable_function_name() {
  std::string* _s = _internal_mutable_function_name();
  // @@protoc_insertion_point(field_mutable:CMsgAnyToGCReportAsserts.TrackedAssert.function_name)
  return _s;
}
inline const std::string& CMsgAnyToGCReportAsserts_TrackedAssert::_internal_function_name() const {
  return _impl_.function_name_.Get();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::_internal_set_function_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.function_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::_internal_mutable_function_name() {
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.function_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::release_function_name() {
  // @@protoc_insertion_point(field_release:CMsgAnyToGCReportAsserts.TrackedAssert.function_name)
  if (!_internal_has_function_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* p = _impl_.function_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.function_name_.IsDefault()) {
    _impl_.function_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::set_allocated_function_name(std::string* function_name) {
  if (function_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.function_name_.SetAllocated(function_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.function_name_.IsDefault()) {
    _impl_.function_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgAnyToGCReportAsserts.TrackedAssert.function_name)
}

// optional string condition = 7;
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::_internal_has_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::has_condition() const {
  return _internal_has_condition();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::clear_condition() {
  _impl_.condition_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CMsgAnyToGCReportAsserts_TrackedAssert::condition() const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAsserts.TrackedAssert.condition)
  return _internal_condition();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgAnyToGCReportAsserts_TrackedAssert::set_condition(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000010u;
 _impl_.condition_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgAnyToGCReportAsserts.TrackedAssert.condition)
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::mutable_condition() {
  std::string* _s = _internal_mutable_condition();
  // @@protoc_insertion_point(field_mutable:CMsgAnyToGCReportAsserts.TrackedAssert.condition)
  return _s;
}
inline const std::string& CMsgAnyToGCReportAsserts_TrackedAssert::_internal_condition() const {
  return _impl_.condition_.Get();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::_internal_set_condition(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.condition_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::_internal_mutable_condition() {
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.condition_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgAnyToGCReportAsserts_TrackedAssert::release_condition() {
  // @@protoc_insertion_point(field_release:CMsgAnyToGCReportAsserts.TrackedAssert.condition)
  if (!_internal_has_condition()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* p = _impl_.condition_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.condition_.IsDefault()) {
    _impl_.condition_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::set_allocated_condition(std::string* condition) {
  if (condition != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.condition_.SetAllocated(condition, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.condition_.IsDefault()) {
    _impl_.condition_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgAnyToGCReportAsserts.TrackedAssert.condition)
}

// optional uint32 total_times_fired = 8;
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::_internal_has_total_times_fired() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgAnyToGCReportAsserts_TrackedAssert::has_total_times_fired() const {
  return _internal_has_total_times_fired();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::clear_total_times_fired() {
  _impl_.total_times_fired_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CMsgAnyToGCReportAsserts_TrackedAssert::_internal_total_times_fired() const {
  return _impl_.total_times_fired_;
}
inline uint32_t CMsgAnyToGCReportAsserts_TrackedAssert::total_times_fired() const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAsserts.TrackedAssert.total_times_fired)
  return _internal_total_times_fired();
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::_internal_set_total_times_fired(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.total_times_fired_ = value;
}
inline void CMsgAnyToGCReportAsserts_TrackedAssert::set_total_times_fired(uint32_t value) {
  _internal_set_total_times_fired(value);
  // @@protoc_insertion_point(field_set:CMsgAnyToGCReportAsserts.TrackedAssert.total_times_fired)
}

// -------------------------------------------------------------------

// CMsgAnyToGCReportAsserts

// optional uint32 version = 1;
inline bool CMsgAnyToGCReportAsserts::_internal_has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAnyToGCReportAsserts::has_version() const {
  return _internal_has_version();
}
inline void CMsgAnyToGCReportAsserts::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgAnyToGCReportAsserts::_internal_version() const {
  return _impl_.version_;
}
inline uint32_t CMsgAnyToGCReportAsserts::version() const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAsserts.version)
  return _internal_version();
}
inline void CMsgAnyToGCReportAsserts::_internal_set_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.version_ = value;
}
inline void CMsgAnyToGCReportAsserts::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgAnyToGCReportAsserts.version)
}

// repeated .CMsgAnyToGCReportAsserts.TrackedAssert asserts = 2;
inline int CMsgAnyToGCReportAsserts::_internal_asserts_size() const {
  return _impl_.asserts_.size();
}
inline int CMsgAnyToGCReportAsserts::asserts_size() const {
  return _internal_asserts_size();
}
inline void CMsgAnyToGCReportAsserts::clear_asserts() {
  _impl_.asserts_.Clear();
}
inline ::CMsgAnyToGCReportAsserts_TrackedAssert* CMsgAnyToGCReportAsserts::mutable_asserts(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAnyToGCReportAsserts.asserts)
  return _impl_.asserts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAnyToGCReportAsserts_TrackedAssert >*
CMsgAnyToGCReportAsserts::mutable_asserts() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAnyToGCReportAsserts.asserts)
  return &_impl_.asserts_;
}
inline const ::CMsgAnyToGCReportAsserts_TrackedAssert& CMsgAnyToGCReportAsserts::_internal_asserts(int index) const {
  return _impl_.asserts_.Get(index);
}
inline const ::CMsgAnyToGCReportAsserts_TrackedAssert& CMsgAnyToGCReportAsserts::asserts(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAsserts.asserts)
  return _internal_asserts(index);
}
inline ::CMsgAnyToGCReportAsserts_TrackedAssert* CMsgAnyToGCReportAsserts::_internal_add_asserts() {
  return _impl_.asserts_.Add();
}
inline ::CMsgAnyToGCReportAsserts_TrackedAssert* CMsgAnyToGCReportAsserts::add_asserts() {
  ::CMsgAnyToGCReportAsserts_TrackedAssert* _add = _internal_add_asserts();
  // @@protoc_insertion_point(field_add:CMsgAnyToGCReportAsserts.asserts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAnyToGCReportAsserts_TrackedAssert >&
CMsgAnyToGCReportAsserts::asserts() const {
  // @@protoc_insertion_point(field_list:CMsgAnyToGCReportAsserts.asserts)
  return _impl_.asserts_;
}

// -------------------------------------------------------------------

// CMsgAnyToGCReportAssertsResponse

// optional bool success = 1;
inline bool CMsgAnyToGCReportAssertsResponse::_internal_has_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAnyToGCReportAssertsResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgAnyToGCReportAssertsResponse::clear_success() {
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgAnyToGCReportAssertsResponse::_internal_success() const {
  return _impl_.success_;
}
inline bool CMsgAnyToGCReportAssertsResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgAnyToGCReportAssertsResponse.success)
  return _internal_success();
}
inline void CMsgAnyToGCReportAssertsResponse::_internal_set_success(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.success_ = value;
}
inline void CMsgAnyToGCReportAssertsResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgAnyToGCReportAssertsResponse.success)
}

// -------------------------------------------------------------------

// CMsgRegionPingTimesClient

// repeated fixed32 data_center_codes = 1 [packed = true];
inline int CMsgRegionPingTimesClient::_internal_data_center_codes_size() const {
  return _impl_.data_center_codes_.size();
}
inline int CMsgRegionPingTimesClient::data_center_codes_size() const {
  return _internal_data_center_codes_size();
}
inline void CMsgRegionPingTimesClient::clear_data_center_codes() {
  _impl_.data_center_codes_.Clear();
}
inline uint32_t CMsgRegionPingTimesClient::_internal_data_center_codes(int index) const {
  return _impl_.data_center_codes_.Get(index);
}
inline uint32_t CMsgRegionPingTimesClient::data_center_codes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgRegionPingTimesClient.data_center_codes)
  return _internal_data_center_codes(index);
}
inline void CMsgRegionPingTimesClient::set_data_center_codes(int index, uint32_t value) {
  _impl_.data_center_codes_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgRegionPingTimesClient.data_center_codes)
}
inline void CMsgRegionPingTimesClient::_internal_add_data_center_codes(uint32_t value) {
  _impl_.data_center_codes_.Add(value);
}
inline void CMsgRegionPingTimesClient::add_data_center_codes(uint32_t value) {
  _internal_add_data_center_codes(value);
  // @@protoc_insertion_point(field_add:CMsgRegionPingTimesClient.data_center_codes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgRegionPingTimesClient::_internal_data_center_codes() const {
  return _impl_.data_center_codes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgRegionPingTimesClient::data_center_codes() const {
  // @@protoc_insertion_point(field_list:CMsgRegionPingTimesClient.data_center_codes)
  return _internal_data_center_codes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgRegionPingTimesClient::_internal_mutable_data_center_codes() {
  return &_impl_.data_center_codes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgRegionPingTimesClient::mutable_data_center_codes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgRegionPingTimesClient.data_center_codes)
  return _internal_mutable_data_center_codes();
}

// repeated uint32 ping_times = 2 [packed = true];
inline int CMsgRegionPingTimesClient::_internal_ping_times_size() const {
  return _impl_.ping_times_.size();
}
inline int CMsgRegionPingTimesClient::ping_times_size() const {
  return _internal_ping_times_size();
}
inline void CMsgRegionPingTimesClient::clear_ping_times() {
  _impl_.ping_times_.Clear();
}
inline uint32_t CMsgRegionPingTimesClient::_internal_ping_times(int index) const {
  return _impl_.ping_times_.Get(index);
}
inline uint32_t CMsgRegionPingTimesClient::ping_times(int index) const {
  // @@protoc_insertion_point(field_get:CMsgRegionPingTimesClient.ping_times)
  return _internal_ping_times(index);
}
inline void CMsgRegionPingTimesClient::set_ping_times(int index, uint32_t value) {
  _impl_.ping_times_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgRegionPingTimesClient.ping_times)
}
inline void CMsgRegionPingTimesClient::_internal_add_ping_times(uint32_t value) {
  _impl_.ping_times_.Add(value);
}
inline void CMsgRegionPingTimesClient::add_ping_times(uint32_t value) {
  _internal_add_ping_times(value);
  // @@protoc_insertion_point(field_add:CMsgRegionPingTimesClient.ping_times)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgRegionPingTimesClient::_internal_ping_times() const {
  return _impl_.ping_times_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgRegionPingTimesClient::ping_times() const {
  // @@protoc_insertion_point(field_list:CMsgRegionPingTimesClient.ping_times)
  return _internal_ping_times();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgRegionPingTimesClient::_internal_mutable_ping_times() {
  return &_impl_.ping_times_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgRegionPingTimesClient::mutable_ping_times() {
  // @@protoc_insertion_point(field_mutable_list:CMsgRegionPingTimesClient.ping_times)
  return _internal_mutable_ping_times();
}

// -------------------------------------------------------------------

// CSOCitadelParty_Member

// optional uint32 account_id = 1;
inline bool CSOCitadelParty_Member::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOCitadelParty_Member::has_account_id() const {
  return _internal_has_account_id();
}
inline void CSOCitadelParty_Member::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CSOCitadelParty_Member::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CSOCitadelParty_Member::account_id() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.account_id)
  return _internal_account_id();
}
inline void CSOCitadelParty_Member::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.account_id_ = value;
}
inline void CSOCitadelParty_Member::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.account_id)
}

// optional string persona_name = 2;
inline bool CSOCitadelParty_Member::_internal_has_persona_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOCitadelParty_Member::has_persona_name() const {
  return _internal_has_persona_name();
}
inline void CSOCitadelParty_Member::clear_persona_name() {
  _impl_.persona_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOCitadelParty_Member::persona_name() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.persona_name)
  return _internal_persona_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOCitadelParty_Member::set_persona_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.persona_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.persona_name)
}
inline std::string* CSOCitadelParty_Member::mutable_persona_name() {
  std::string* _s = _internal_mutable_persona_name();
  // @@protoc_insertion_point(field_mutable:CSOCitadelParty.Member.persona_name)
  return _s;
}
inline const std::string& CSOCitadelParty_Member::_internal_persona_name() const {
  return _impl_.persona_name_.Get();
}
inline void CSOCitadelParty_Member::_internal_set_persona_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.persona_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CSOCitadelParty_Member::_internal_mutable_persona_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.persona_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CSOCitadelParty_Member::release_persona_name() {
  // @@protoc_insertion_point(field_release:CSOCitadelParty.Member.persona_name)
  if (!_internal_has_persona_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.persona_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.persona_name_.IsDefault()) {
    _impl_.persona_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CSOCitadelParty_Member::set_allocated_persona_name(std::string* persona_name) {
  if (persona_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.persona_name_.SetAllocated(persona_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.persona_name_.IsDefault()) {
    _impl_.persona_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSOCitadelParty.Member.persona_name)
}

// optional uint32 rights_flags = 3;
inline bool CSOCitadelParty_Member::_internal_has_rights_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOCitadelParty_Member::has_rights_flags() const {
  return _internal_has_rights_flags();
}
inline void CSOCitadelParty_Member::clear_rights_flags() {
  _impl_.rights_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CSOCitadelParty_Member::_internal_rights_flags() const {
  return _impl_.rights_flags_;
}
inline uint32_t CSOCitadelParty_Member::rights_flags() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.rights_flags)
  return _internal_rights_flags();
}
inline void CSOCitadelParty_Member::_internal_set_rights_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.rights_flags_ = value;
}
inline void CSOCitadelParty_Member::set_rights_flags(uint32_t value) {
  _internal_set_rights_flags(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.rights_flags)
}

// optional bool is_ready = 4;
inline bool CSOCitadelParty_Member::_internal_has_is_ready() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOCitadelParty_Member::has_is_ready() const {
  return _internal_has_is_ready();
}
inline void CSOCitadelParty_Member::clear_is_ready() {
  _impl_.is_ready_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CSOCitadelParty_Member::_internal_is_ready() const {
  return _impl_.is_ready_;
}
inline bool CSOCitadelParty_Member::is_ready() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.is_ready)
  return _internal_is_ready();
}
inline void CSOCitadelParty_Member::_internal_set_is_ready(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.is_ready_ = value;
}
inline void CSOCitadelParty_Member::set_is_ready(bool value) {
  _internal_set_is_ready(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.is_ready)
}

// optional .CSOCitadelParty.EPlayerType player_type = 5 [default = k_ePlayerType_Player];
inline bool CSOCitadelParty_Member::_internal_has_player_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CSOCitadelParty_Member::has_player_type() const {
  return _internal_has_player_type();
}
inline void CSOCitadelParty_Member::clear_player_type() {
  _impl_.player_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::CSOCitadelParty_EPlayerType CSOCitadelParty_Member::_internal_player_type() const {
  return static_cast< ::CSOCitadelParty_EPlayerType >(_impl_.player_type_);
}
inline ::CSOCitadelParty_EPlayerType CSOCitadelParty_Member::player_type() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.player_type)
  return _internal_player_type();
}
inline void CSOCitadelParty_Member::_internal_set_player_type(::CSOCitadelParty_EPlayerType value) {
  assert(::CSOCitadelParty_EPlayerType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.player_type_ = value;
}
inline void CSOCitadelParty_Member::set_player_type(::CSOCitadelParty_EPlayerType value) {
  _internal_set_player_type(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.player_type)
}

// optional uint32 compatibility_version = 6;
inline bool CSOCitadelParty_Member::_internal_has_compatibility_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CSOCitadelParty_Member::has_compatibility_version() const {
  return _internal_has_compatibility_version();
}
inline void CSOCitadelParty_Member::clear_compatibility_version() {
  _impl_.compatibility_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CSOCitadelParty_Member::_internal_compatibility_version() const {
  return _impl_.compatibility_version_;
}
inline uint32_t CSOCitadelParty_Member::compatibility_version() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.compatibility_version)
  return _internal_compatibility_version();
}
inline void CSOCitadelParty_Member::_internal_set_compatibility_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.compatibility_version_ = value;
}
inline void CSOCitadelParty_Member::set_compatibility_version(uint32_t value) {
  _internal_set_compatibility_version(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.compatibility_version)
}

// optional .EGCPlatform platform = 7 [default = k_eGCPlatform_None];
inline bool CSOCitadelParty_Member::_internal_has_platform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CSOCitadelParty_Member::has_platform() const {
  return _internal_has_platform();
}
inline void CSOCitadelParty_Member::clear_platform() {
  _impl_.platform_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::EGCPlatform CSOCitadelParty_Member::_internal_platform() const {
  return static_cast< ::EGCPlatform >(_impl_.platform_);
}
inline ::EGCPlatform CSOCitadelParty_Member::platform() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.platform)
  return _internal_platform();
}
inline void CSOCitadelParty_Member::_internal_set_platform(::EGCPlatform value) {
  assert(::EGCPlatform_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.platform_ = value;
}
inline void CSOCitadelParty_Member::set_platform(::EGCPlatform value) {
  _internal_set_platform(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.platform)
}

// optional uint32 team = 8;
inline bool CSOCitadelParty_Member::_internal_has_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CSOCitadelParty_Member::has_team() const {
  return _internal_has_team();
}
inline void CSOCitadelParty_Member::clear_team() {
  _impl_.team_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline uint32_t CSOCitadelParty_Member::_internal_team() const {
  return _impl_.team_;
}
inline uint32_t CSOCitadelParty_Member::team() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.team)
  return _internal_team();
}
inline void CSOCitadelParty_Member::_internal_set_team(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.team_ = value;
}
inline void CSOCitadelParty_Member::set_team(uint32_t value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.team)
}

// optional .CMsgHeroSelectionMatchInfo hero_roster = 9;
inline bool CSOCitadelParty_Member::_internal_has_hero_roster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hero_roster_ != nullptr);
  return value;
}
inline bool CSOCitadelParty_Member::has_hero_roster() const {
  return _internal_has_hero_roster();
}
inline void CSOCitadelParty_Member::clear_hero_roster() {
  if (_impl_.hero_roster_ != nullptr) _impl_.hero_roster_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgHeroSelectionMatchInfo& CSOCitadelParty_Member::_internal_hero_roster() const {
  const ::CMsgHeroSelectionMatchInfo* p = _impl_.hero_roster_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgHeroSelectionMatchInfo&>(
      ::_CMsgHeroSelectionMatchInfo_default_instance_);
}
inline const ::CMsgHeroSelectionMatchInfo& CSOCitadelParty_Member::hero_roster() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.hero_roster)
  return _internal_hero_roster();
}
inline void CSOCitadelParty_Member::unsafe_arena_set_allocated_hero_roster(
    ::CMsgHeroSelectionMatchInfo* hero_roster) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hero_roster_);
  }
  _impl_.hero_roster_ = hero_roster;
  if (hero_roster) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CSOCitadelParty.Member.hero_roster)
}
inline ::CMsgHeroSelectionMatchInfo* CSOCitadelParty_Member::release_hero_roster() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgHeroSelectionMatchInfo* temp = _impl_.hero_roster_;
  _impl_.hero_roster_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgHeroSelectionMatchInfo* CSOCitadelParty_Member::unsafe_arena_release_hero_roster() {
  // @@protoc_insertion_point(field_release:CSOCitadelParty.Member.hero_roster)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgHeroSelectionMatchInfo* temp = _impl_.hero_roster_;
  _impl_.hero_roster_ = nullptr;
  return temp;
}
inline ::CMsgHeroSelectionMatchInfo* CSOCitadelParty_Member::_internal_mutable_hero_roster() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.hero_roster_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgHeroSelectionMatchInfo>(GetArenaForAllocation());
    _impl_.hero_roster_ = p;
  }
  return _impl_.hero_roster_;
}
inline ::CMsgHeroSelectionMatchInfo* CSOCitadelParty_Member::mutable_hero_roster() {
  ::CMsgHeroSelectionMatchInfo* _msg = _internal_mutable_hero_roster();
  // @@protoc_insertion_point(field_mutable:CSOCitadelParty.Member.hero_roster)
  return _msg;
}
inline void CSOCitadelParty_Member::set_allocated_hero_roster(::CMsgHeroSelectionMatchInfo* hero_roster) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.hero_roster_;
  }
  if (hero_roster) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(hero_roster);
    if (message_arena != submessage_arena) {
      hero_roster = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hero_roster, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.hero_roster_ = hero_roster;
  // @@protoc_insertion_point(field_set_allocated:CSOCitadelParty.Member.hero_roster)
}

// optional uint64 permissions = 10;
inline bool CSOCitadelParty_Member::_internal_has_permissions() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CSOCitadelParty_Member::has_permissions() const {
  return _internal_has_permissions();
}
inline void CSOCitadelParty_Member::clear_permissions() {
  _impl_.permissions_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint64_t CSOCitadelParty_Member::_internal_permissions() const {
  return _impl_.permissions_;
}
inline uint64_t CSOCitadelParty_Member::permissions() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.permissions)
  return _internal_permissions();
}
inline void CSOCitadelParty_Member::_internal_set_permissions(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.permissions_ = value;
}
inline void CSOCitadelParty_Member::set_permissions(uint64_t value) {
  _internal_set_permissions(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.permissions)
}

// optional uint64 new_player_progress = 11;
inline bool CSOCitadelParty_Member::_internal_has_new_player_progress() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CSOCitadelParty_Member::has_new_player_progress() const {
  return _internal_has_new_player_progress();
}
inline void CSOCitadelParty_Member::clear_new_player_progress() {
  _impl_.new_player_progress_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint64_t CSOCitadelParty_Member::_internal_new_player_progress() const {
  return _impl_.new_player_progress_;
}
inline uint64_t CSOCitadelParty_Member::new_player_progress() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.new_player_progress)
  return _internal_new_player_progress();
}
inline void CSOCitadelParty_Member::_internal_set_new_player_progress(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.new_player_progress_ = value;
}
inline void CSOCitadelParty_Member::set_new_player_progress(uint64_t value) {
  _internal_set_new_player_progress(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.new_player_progress)
}

// repeated uint32 owned_heroes = 12 [packed = true];
inline int CSOCitadelParty_Member::_internal_owned_heroes_size() const {
  return _impl_.owned_heroes_.size();
}
inline int CSOCitadelParty_Member::owned_heroes_size() const {
  return _internal_owned_heroes_size();
}
inline void CSOCitadelParty_Member::clear_owned_heroes() {
  _impl_.owned_heroes_.Clear();
}
inline uint32_t CSOCitadelParty_Member::_internal_owned_heroes(int index) const {
  return _impl_.owned_heroes_.Get(index);
}
inline uint32_t CSOCitadelParty_Member::owned_heroes(int index) const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Member.owned_heroes)
  return _internal_owned_heroes(index);
}
inline void CSOCitadelParty_Member::set_owned_heroes(int index, uint32_t value) {
  _impl_.owned_heroes_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Member.owned_heroes)
}
inline void CSOCitadelParty_Member::_internal_add_owned_heroes(uint32_t value) {
  _impl_.owned_heroes_.Add(value);
}
inline void CSOCitadelParty_Member::add_owned_heroes(uint32_t value) {
  _internal_add_owned_heroes(value);
  // @@protoc_insertion_point(field_add:CSOCitadelParty.Member.owned_heroes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CSOCitadelParty_Member::_internal_owned_heroes() const {
  return _impl_.owned_heroes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CSOCitadelParty_Member::owned_heroes() const {
  // @@protoc_insertion_point(field_list:CSOCitadelParty.Member.owned_heroes)
  return _internal_owned_heroes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CSOCitadelParty_Member::_internal_mutable_owned_heroes() {
  return &_impl_.owned_heroes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CSOCitadelParty_Member::mutable_owned_heroes() {
  // @@protoc_insertion_point(field_mutable_list:CSOCitadelParty.Member.owned_heroes)
  return _internal_mutable_owned_heroes();
}

// -------------------------------------------------------------------

// CSOCitadelParty_LeftMember

// optional uint32 account_id = 1;
inline bool CSOCitadelParty_LeftMember::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOCitadelParty_LeftMember::has_account_id() const {
  return _internal_has_account_id();
}
inline void CSOCitadelParty_LeftMember::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CSOCitadelParty_LeftMember::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CSOCitadelParty_LeftMember::account_id() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.LeftMember.account_id)
  return _internal_account_id();
}
inline void CSOCitadelParty_LeftMember::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CSOCitadelParty_LeftMember::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.LeftMember.account_id)
}

// optional uint32 rights_flags = 2;
inline bool CSOCitadelParty_LeftMember::_internal_has_rights_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOCitadelParty_LeftMember::has_rights_flags() const {
  return _internal_has_rights_flags();
}
inline void CSOCitadelParty_LeftMember::clear_rights_flags() {
  _impl_.rights_flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CSOCitadelParty_LeftMember::_internal_rights_flags() const {
  return _impl_.rights_flags_;
}
inline uint32_t CSOCitadelParty_LeftMember::rights_flags() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.LeftMember.rights_flags)
  return _internal_rights_flags();
}
inline void CSOCitadelParty_LeftMember::_internal_set_rights_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.rights_flags_ = value;
}
inline void CSOCitadelParty_LeftMember::set_rights_flags(uint32_t value) {
  _internal_set_rights_flags(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.LeftMember.rights_flags)
}

// optional .CSOCitadelParty.EPlayerType player_type = 3 [default = k_ePlayerType_Player];
inline bool CSOCitadelParty_LeftMember::_internal_has_player_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOCitadelParty_LeftMember::has_player_type() const {
  return _internal_has_player_type();
}
inline void CSOCitadelParty_LeftMember::clear_player_type() {
  _impl_.player_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSOCitadelParty_EPlayerType CSOCitadelParty_LeftMember::_internal_player_type() const {
  return static_cast< ::CSOCitadelParty_EPlayerType >(_impl_.player_type_);
}
inline ::CSOCitadelParty_EPlayerType CSOCitadelParty_LeftMember::player_type() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.LeftMember.player_type)
  return _internal_player_type();
}
inline void CSOCitadelParty_LeftMember::_internal_set_player_type(::CSOCitadelParty_EPlayerType value) {
  assert(::CSOCitadelParty_EPlayerType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.player_type_ = value;
}
inline void CSOCitadelParty_LeftMember::set_player_type(::CSOCitadelParty_EPlayerType value) {
  _internal_set_player_type(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.LeftMember.player_type)
}

// -------------------------------------------------------------------

// CSOCitadelParty_Invite

// optional uint32 account_id = 1;
inline bool CSOCitadelParty_Invite::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOCitadelParty_Invite::has_account_id() const {
  return _internal_has_account_id();
}
inline void CSOCitadelParty_Invite::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CSOCitadelParty_Invite::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CSOCitadelParty_Invite::account_id() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Invite.account_id)
  return _internal_account_id();
}
inline void CSOCitadelParty_Invite::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.account_id_ = value;
}
inline void CSOCitadelParty_Invite::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Invite.account_id)
}

// optional string persona_name = 2;
inline bool CSOCitadelParty_Invite::_internal_has_persona_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOCitadelParty_Invite::has_persona_name() const {
  return _internal_has_persona_name();
}
inline void CSOCitadelParty_Invite::clear_persona_name() {
  _impl_.persona_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOCitadelParty_Invite::persona_name() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Invite.persona_name)
  return _internal_persona_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOCitadelParty_Invite::set_persona_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.persona_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Invite.persona_name)
}
inline std::string* CSOCitadelParty_Invite::mutable_persona_name() {
  std::string* _s = _internal_mutable_persona_name();
  // @@protoc_insertion_point(field_mutable:CSOCitadelParty.Invite.persona_name)
  return _s;
}
inline const std::string& CSOCitadelParty_Invite::_internal_persona_name() const {
  return _impl_.persona_name_.Get();
}
inline void CSOCitadelParty_Invite::_internal_set_persona_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.persona_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CSOCitadelParty_Invite::_internal_mutable_persona_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.persona_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CSOCitadelParty_Invite::release_persona_name() {
  // @@protoc_insertion_point(field_release:CSOCitadelParty.Invite.persona_name)
  if (!_internal_has_persona_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.persona_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.persona_name_.IsDefault()) {
    _impl_.persona_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CSOCitadelParty_Invite::set_allocated_persona_name(std::string* persona_name) {
  if (persona_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.persona_name_.SetAllocated(persona_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.persona_name_.IsDefault()) {
    _impl_.persona_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSOCitadelParty.Invite.persona_name)
}

// optional uint32 invited_by = 3;
inline bool CSOCitadelParty_Invite::_internal_has_invited_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOCitadelParty_Invite::has_invited_by() const {
  return _internal_has_invited_by();
}
inline void CSOCitadelParty_Invite::clear_invited_by() {
  _impl_.invited_by_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CSOCitadelParty_Invite::_internal_invited_by() const {
  return _impl_.invited_by_;
}
inline uint32_t CSOCitadelParty_Invite::invited_by() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.Invite.invited_by)
  return _internal_invited_by();
}
inline void CSOCitadelParty_Invite::_internal_set_invited_by(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.invited_by_ = value;
}
inline void CSOCitadelParty_Invite::set_invited_by(uint32_t value) {
  _internal_set_invited_by(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.Invite.invited_by)
}

// -------------------------------------------------------------------

// CSOCitadelParty

// optional uint64 party_id = 1;
inline bool CSOCitadelParty::_internal_has_party_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_party_id() const {
  return _internal_has_party_id();
}
inline void CSOCitadelParty::clear_party_id() {
  _impl_.party_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CSOCitadelParty::_internal_party_id() const {
  return _impl_.party_id_;
}
inline uint64_t CSOCitadelParty::party_id() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.party_id)
  return _internal_party_id();
}
inline void CSOCitadelParty::_internal_set_party_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.party_id_ = value;
}
inline void CSOCitadelParty::set_party_id(uint64_t value) {
  _internal_set_party_id(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.party_id)
}

// repeated .CSOCitadelParty.Member members = 2;
inline int CSOCitadelParty::_internal_members_size() const {
  return _impl_.members_.size();
}
inline int CSOCitadelParty::members_size() const {
  return _internal_members_size();
}
inline void CSOCitadelParty::clear_members() {
  _impl_.members_.Clear();
}
inline ::CSOCitadelParty_Member* CSOCitadelParty::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOCitadelParty.members)
  return _impl_.members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_Member >*
CSOCitadelParty::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOCitadelParty.members)
  return &_impl_.members_;
}
inline const ::CSOCitadelParty_Member& CSOCitadelParty::_internal_members(int index) const {
  return _impl_.members_.Get(index);
}
inline const ::CSOCitadelParty_Member& CSOCitadelParty::members(int index) const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.members)
  return _internal_members(index);
}
inline ::CSOCitadelParty_Member* CSOCitadelParty::_internal_add_members() {
  return _impl_.members_.Add();
}
inline ::CSOCitadelParty_Member* CSOCitadelParty::add_members() {
  ::CSOCitadelParty_Member* _add = _internal_add_members();
  // @@protoc_insertion_point(field_add:CSOCitadelParty.members)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_Member >&
CSOCitadelParty::members() const {
  // @@protoc_insertion_point(field_list:CSOCitadelParty.members)
  return _impl_.members_;
}

// repeated .CSOCitadelParty.Invite invites = 3;
inline int CSOCitadelParty::_internal_invites_size() const {
  return _impl_.invites_.size();
}
inline int CSOCitadelParty::invites_size() const {
  return _internal_invites_size();
}
inline void CSOCitadelParty::clear_invites() {
  _impl_.invites_.Clear();
}
inline ::CSOCitadelParty_Invite* CSOCitadelParty::mutable_invites(int index) {
  // @@protoc_insertion_point(field_mutable:CSOCitadelParty.invites)
  return _impl_.invites_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_Invite >*
CSOCitadelParty::mutable_invites() {
  // @@protoc_insertion_point(field_mutable_list:CSOCitadelParty.invites)
  return &_impl_.invites_;
}
inline const ::CSOCitadelParty_Invite& CSOCitadelParty::_internal_invites(int index) const {
  return _impl_.invites_.Get(index);
}
inline const ::CSOCitadelParty_Invite& CSOCitadelParty::invites(int index) const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.invites)
  return _internal_invites(index);
}
inline ::CSOCitadelParty_Invite* CSOCitadelParty::_internal_add_invites() {
  return _impl_.invites_.Add();
}
inline ::CSOCitadelParty_Invite* CSOCitadelParty::add_invites() {
  ::CSOCitadelParty_Invite* _add = _internal_add_invites();
  // @@protoc_insertion_point(field_add:CSOCitadelParty.invites)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_Invite >&
CSOCitadelParty::invites() const {
  // @@protoc_insertion_point(field_list:CSOCitadelParty.invites)
  return _impl_.invites_;
}

// optional string dev_server_command = 4;
inline bool CSOCitadelParty::_internal_has_dev_server_command() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_dev_server_command() const {
  return _internal_has_dev_server_command();
}
inline void CSOCitadelParty::clear_dev_server_command() {
  _impl_.dev_server_command_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CSOCitadelParty::dev_server_command() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.dev_server_command)
  return _internal_dev_server_command();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOCitadelParty::set_dev_server_command(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.dev_server_command_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOCitadelParty.dev_server_command)
}
inline std::string* CSOCitadelParty::mutable_dev_server_command() {
  std::string* _s = _internal_mutable_dev_server_command();
  // @@protoc_insertion_point(field_mutable:CSOCitadelParty.dev_server_command)
  return _s;
}
inline const std::string& CSOCitadelParty::_internal_dev_server_command() const {
  return _impl_.dev_server_command_.Get();
}
inline void CSOCitadelParty::_internal_set_dev_server_command(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.dev_server_command_.Set(value, GetArenaForAllocation());
}
inline std::string* CSOCitadelParty::_internal_mutable_dev_server_command() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.dev_server_command_.Mutable(GetArenaForAllocation());
}
inline std::string* CSOCitadelParty::release_dev_server_command() {
  // @@protoc_insertion_point(field_release:CSOCitadelParty.dev_server_command)
  if (!_internal_has_dev_server_command()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.dev_server_command_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dev_server_command_.IsDefault()) {
    _impl_.dev_server_command_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CSOCitadelParty::set_allocated_dev_server_command(std::string* dev_server_command) {
  if (dev_server_command != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.dev_server_command_.SetAllocated(dev_server_command, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dev_server_command_.IsDefault()) {
    _impl_.dev_server_command_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSOCitadelParty.dev_server_command)
}

// repeated .CSOCitadelParty.LeftMember left_members = 5;
inline int CSOCitadelParty::_internal_left_members_size() const {
  return _impl_.left_members_.size();
}
inline int CSOCitadelParty::left_members_size() const {
  return _internal_left_members_size();
}
inline void CSOCitadelParty::clear_left_members() {
  _impl_.left_members_.Clear();
}
inline ::CSOCitadelParty_LeftMember* CSOCitadelParty::mutable_left_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOCitadelParty.left_members)
  return _impl_.left_members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_LeftMember >*
CSOCitadelParty::mutable_left_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOCitadelParty.left_members)
  return &_impl_.left_members_;
}
inline const ::CSOCitadelParty_LeftMember& CSOCitadelParty::_internal_left_members(int index) const {
  return _impl_.left_members_.Get(index);
}
inline const ::CSOCitadelParty_LeftMember& CSOCitadelParty::left_members(int index) const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.left_members)
  return _internal_left_members(index);
}
inline ::CSOCitadelParty_LeftMember* CSOCitadelParty::_internal_add_left_members() {
  return _impl_.left_members_.Add();
}
inline ::CSOCitadelParty_LeftMember* CSOCitadelParty::add_left_members() {
  ::CSOCitadelParty_LeftMember* _add = _internal_add_left_members();
  // @@protoc_insertion_point(field_add:CSOCitadelParty.left_members)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CSOCitadelParty_LeftMember >&
CSOCitadelParty::left_members() const {
  // @@protoc_insertion_point(field_list:CSOCitadelParty.left_members)
  return _impl_.left_members_;
}

// optional uint64 join_code = 6;
inline bool CSOCitadelParty::_internal_has_join_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_join_code() const {
  return _internal_has_join_code();
}
inline void CSOCitadelParty::clear_join_code() {
  _impl_.join_code_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CSOCitadelParty::_internal_join_code() const {
  return _impl_.join_code_;
}
inline uint64_t CSOCitadelParty::join_code() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.join_code)
  return _internal_join_code();
}
inline void CSOCitadelParty::_internal_set_join_code(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.join_code_ = value;
}
inline void CSOCitadelParty::set_join_code(uint64_t value) {
  _internal_set_join_code(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.join_code)
}

// optional .ECitadelBotDifficulty bot_difficulty = 7 [default = k_ECitadelBotDifficulty_None];
inline bool CSOCitadelParty::_internal_has_bot_difficulty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_bot_difficulty() const {
  return _internal_has_bot_difficulty();
}
inline void CSOCitadelParty::clear_bot_difficulty() {
  _impl_.bot_difficulty_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::ECitadelBotDifficulty CSOCitadelParty::_internal_bot_difficulty() const {
  return static_cast< ::ECitadelBotDifficulty >(_impl_.bot_difficulty_);
}
inline ::ECitadelBotDifficulty CSOCitadelParty::bot_difficulty() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.bot_difficulty)
  return _internal_bot_difficulty();
}
inline void CSOCitadelParty::_internal_set_bot_difficulty(::ECitadelBotDifficulty value) {
  assert(::ECitadelBotDifficulty_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.bot_difficulty_ = value;
}
inline void CSOCitadelParty::set_bot_difficulty(::ECitadelBotDifficulty value) {
  _internal_set_bot_difficulty(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.bot_difficulty)
}

// optional .ECitadelMatchMode match_mode = 9 [default = k_ECitadelMatchMode_Invalid];
inline bool CSOCitadelParty::_internal_has_match_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_match_mode() const {
  return _internal_has_match_mode();
}
inline void CSOCitadelParty::clear_match_mode() {
  _impl_.match_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::ECitadelMatchMode CSOCitadelParty::_internal_match_mode() const {
  return static_cast< ::ECitadelMatchMode >(_impl_.match_mode_);
}
inline ::ECitadelMatchMode CSOCitadelParty::match_mode() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.match_mode)
  return _internal_match_mode();
}
inline void CSOCitadelParty::_internal_set_match_mode(::ECitadelMatchMode value) {
  assert(::ECitadelMatchMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.match_mode_ = value;
}
inline void CSOCitadelParty::set_match_mode(::ECitadelMatchMode value) {
  _internal_set_match_mode(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.match_mode)
}

// optional .ECitadelGameMode game_mode = 10 [default = k_ECitadelGameMode_Invalid];
inline bool CSOCitadelParty::_internal_has_game_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_game_mode() const {
  return _internal_has_game_mode();
}
inline void CSOCitadelParty::clear_game_mode() {
  _impl_.game_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::ECitadelGameMode CSOCitadelParty::_internal_game_mode() const {
  return static_cast< ::ECitadelGameMode >(_impl_.game_mode_);
}
inline ::ECitadelGameMode CSOCitadelParty::game_mode() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.game_mode)
  return _internal_game_mode();
}
inline void CSOCitadelParty::_internal_set_game_mode(::ECitadelGameMode value) {
  assert(::ECitadelGameMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.game_mode_ = value;
}
inline void CSOCitadelParty::set_game_mode(::ECitadelGameMode value) {
  _internal_set_game_mode(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.game_mode)
}

// optional uint32 match_making_start_time = 11;
inline bool CSOCitadelParty::_internal_has_match_making_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_match_making_start_time() const {
  return _internal_has_match_making_start_time();
}
inline void CSOCitadelParty::clear_match_making_start_time() {
  _impl_.match_making_start_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CSOCitadelParty::_internal_match_making_start_time() const {
  return _impl_.match_making_start_time_;
}
inline uint32_t CSOCitadelParty::match_making_start_time() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.match_making_start_time)
  return _internal_match_making_start_time();
}
inline void CSOCitadelParty::_internal_set_match_making_start_time(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.match_making_start_time_ = value;
}
inline void CSOCitadelParty::set_match_making_start_time(uint32_t value) {
  _internal_set_match_making_start_time(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.match_making_start_time)
}

// optional string server_search_key = 12;
inline bool CSOCitadelParty::_internal_has_server_search_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_server_search_key() const {
  return _internal_has_server_search_key();
}
inline void CSOCitadelParty::clear_server_search_key() {
  _impl_.server_search_key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CSOCitadelParty::server_search_key() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.server_search_key)
  return _internal_server_search_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CSOCitadelParty::set_server_search_key(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.server_search_key_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CSOCitadelParty.server_search_key)
}
inline std::string* CSOCitadelParty::mutable_server_search_key() {
  std::string* _s = _internal_mutable_server_search_key();
  // @@protoc_insertion_point(field_mutable:CSOCitadelParty.server_search_key)
  return _s;
}
inline const std::string& CSOCitadelParty::_internal_server_search_key() const {
  return _impl_.server_search_key_.Get();
}
inline void CSOCitadelParty::_internal_set_server_search_key(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.server_search_key_.Set(value, GetArenaForAllocation());
}
inline std::string* CSOCitadelParty::_internal_mutable_server_search_key() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.server_search_key_.Mutable(GetArenaForAllocation());
}
inline std::string* CSOCitadelParty::release_server_search_key() {
  // @@protoc_insertion_point(field_release:CSOCitadelParty.server_search_key)
  if (!_internal_has_server_search_key()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.server_search_key_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.server_search_key_.IsDefault()) {
    _impl_.server_search_key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CSOCitadelParty::set_allocated_server_search_key(std::string* server_search_key) {
  if (server_search_key != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.server_search_key_.SetAllocated(server_search_key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.server_search_key_.IsDefault()) {
    _impl_.server_search_key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSOCitadelParty.server_search_key)
}

// optional bool is_high_skill_range_party = 13;
inline bool CSOCitadelParty::_internal_has_is_high_skill_range_party() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_is_high_skill_range_party() const {
  return _internal_has_is_high_skill_range_party();
}
inline void CSOCitadelParty::clear_is_high_skill_range_party() {
  _impl_.is_high_skill_range_party_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool CSOCitadelParty::_internal_is_high_skill_range_party() const {
  return _impl_.is_high_skill_range_party_;
}
inline bool CSOCitadelParty::is_high_skill_range_party() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.is_high_skill_range_party)
  return _internal_is_high_skill_range_party();
}
inline void CSOCitadelParty::_internal_set_is_high_skill_range_party(bool value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.is_high_skill_range_party_ = value;
}
inline void CSOCitadelParty::set_is_high_skill_range_party(bool value) {
  _internal_set_is_high_skill_range_party(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.is_high_skill_range_party)
}

// optional .CSOCitadelParty.EChatMode chat_mode = 14 [default = k_eNone];
inline bool CSOCitadelParty::_internal_has_chat_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_chat_mode() const {
  return _internal_has_chat_mode();
}
inline void CSOCitadelParty::clear_chat_mode() {
  _impl_.chat_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::CSOCitadelParty_EChatMode CSOCitadelParty::_internal_chat_mode() const {
  return static_cast< ::CSOCitadelParty_EChatMode >(_impl_.chat_mode_);
}
inline ::CSOCitadelParty_EChatMode CSOCitadelParty::chat_mode() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.chat_mode)
  return _internal_chat_mode();
}
inline void CSOCitadelParty::_internal_set_chat_mode(::CSOCitadelParty_EChatMode value) {
  assert(::CSOCitadelParty_EChatMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.chat_mode_ = value;
}
inline void CSOCitadelParty::set_chat_mode(::CSOCitadelParty_EChatMode value) {
  _internal_set_chat_mode(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.chat_mode)
}

// optional .ECitadelRegionMode region_mode = 15 [default = k_ECitadelRegionMode_ROW];
inline bool CSOCitadelParty::_internal_has_region_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CSOCitadelParty::has_region_mode() const {
  return _internal_has_region_mode();
}
inline void CSOCitadelParty::clear_region_mode() {
  _impl_.region_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::ECitadelRegionMode CSOCitadelParty::_internal_region_mode() const {
  return static_cast< ::ECitadelRegionMode >(_impl_.region_mode_);
}
inline ::ECitadelRegionMode CSOCitadelParty::region_mode() const {
  // @@protoc_insertion_point(field_get:CSOCitadelParty.region_mode)
  return _internal_region_mode();
}
inline void CSOCitadelParty::_internal_set_region_mode(::ECitadelRegionMode value) {
  assert(::ECitadelRegionMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.region_mode_ = value;
}
inline void CSOCitadelParty::set_region_mode(::ECitadelRegionMode value) {
  _internal_set_region_mode(value);
  // @@protoc_insertion_point(field_set:CSOCitadelParty.region_mode)
}

// -------------------------------------------------------------------

// CMsgMatchPlayerPathsData_Path

// optional uint32 player_slot = 1;
inline bool CMsgMatchPlayerPathsData_Path::_internal_has_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchPlayerPathsData_Path::has_player_slot() const {
  return _internal_has_player_slot();
}
inline void CMsgMatchPlayerPathsData_Path::clear_player_slot() {
  _impl_.player_slot_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchPlayerPathsData_Path::_internal_player_slot() const {
  return _impl_.player_slot_;
}
inline uint32_t CMsgMatchPlayerPathsData_Path::player_slot() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.Path.player_slot)
  return _internal_player_slot();
}
inline void CMsgMatchPlayerPathsData_Path::_internal_set_player_slot(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.player_slot_ = value;
}
inline void CMsgMatchPlayerPathsData_Path::set_player_slot(uint32_t value) {
  _internal_set_player_slot(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.Path.player_slot)
}

// optional float x_min = 2;
inline bool CMsgMatchPlayerPathsData_Path::_internal_has_x_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchPlayerPathsData_Path::has_x_min() const {
  return _internal_has_x_min();
}
inline void CMsgMatchPlayerPathsData_Path::clear_x_min() {
  _impl_.x_min_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CMsgMatchPlayerPathsData_Path::_internal_x_min() const {
  return _impl_.x_min_;
}
inline float CMsgMatchPlayerPathsData_Path::x_min() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.Path.x_min)
  return _internal_x_min();
}
inline void CMsgMatchPlayerPathsData_Path::_internal_set_x_min(float value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.x_min_ = value;
}
inline void CMsgMatchPlayerPathsData_Path::set_x_min(float value) {
  _internal_set_x_min(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.Path.x_min)
}

// optional float y_min = 3;
inline bool CMsgMatchPlayerPathsData_Path::_internal_has_y_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchPlayerPathsData_Path::has_y_min() const {
  return _internal_has_y_min();
}
inline void CMsgMatchPlayerPathsData_Path::clear_y_min() {
  _impl_.y_min_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgMatchPlayerPathsData_Path::_internal_y_min() const {
  return _impl_.y_min_;
}
inline float CMsgMatchPlayerPathsData_Path::y_min() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.Path.y_min)
  return _internal_y_min();
}
inline void CMsgMatchPlayerPathsData_Path::_internal_set_y_min(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.y_min_ = value;
}
inline void CMsgMatchPlayerPathsData_Path::set_y_min(float value) {
  _internal_set_y_min(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.Path.y_min)
}

// optional float x_max = 4;
inline bool CMsgMatchPlayerPathsData_Path::_internal_has_x_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMatchPlayerPathsData_Path::has_x_max() const {
  return _internal_has_x_max();
}
inline void CMsgMatchPlayerPathsData_Path::clear_x_max() {
  _impl_.x_max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CMsgMatchPlayerPathsData_Path::_internal_x_max() const {
  return _impl_.x_max_;
}
inline float CMsgMatchPlayerPathsData_Path::x_max() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.Path.x_max)
  return _internal_x_max();
}
inline void CMsgMatchPlayerPathsData_Path::_internal_set_x_max(float value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.x_max_ = value;
}
inline void CMsgMatchPlayerPathsData_Path::set_x_max(float value) {
  _internal_set_x_max(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.Path.x_max)
}

// optional float y_max = 5;
inline bool CMsgMatchPlayerPathsData_Path::_internal_has_y_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgMatchPlayerPathsData_Path::has_y_max() const {
  return _internal_has_y_max();
}
inline void CMsgMatchPlayerPathsData_Path::clear_y_max() {
  _impl_.y_max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CMsgMatchPlayerPathsData_Path::_internal_y_max() const {
  return _impl_.y_max_;
}
inline float CMsgMatchPlayerPathsData_Path::y_max() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.Path.y_max)
  return _internal_y_max();
}
inline void CMsgMatchPlayerPathsData_Path::_internal_set_y_max(float value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.y_max_ = value;
}
inline void CMsgMatchPlayerPathsData_Path::set_y_max(float value) {
  _internal_set_y_max(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.Path.y_max)
}

// repeated uint32 x_pos = 6 [packed = true];
inline int CMsgMatchPlayerPathsData_Path::_internal_x_pos_size() const {
  return _impl_.x_pos_.size();
}
inline int CMsgMatchPlayerPathsData_Path::x_pos_size() const {
  return _internal_x_pos_size();
}
inline void CMsgMatchPlayerPathsData_Path::clear_x_pos() {
  _impl_.x_pos_.Clear();
}
inline uint32_t CMsgMatchPlayerPathsData_Path::_internal_x_pos(int index) const {
  return _impl_.x_pos_.Get(index);
}
inline uint32_t CMsgMatchPlayerPathsData_Path::x_pos(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.Path.x_pos)
  return _internal_x_pos(index);
}
inline void CMsgMatchPlayerPathsData_Path::set_x_pos(int index, uint32_t value) {
  _impl_.x_pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.Path.x_pos)
}
inline void CMsgMatchPlayerPathsData_Path::_internal_add_x_pos(uint32_t value) {
  _impl_.x_pos_.Add(value);
}
inline void CMsgMatchPlayerPathsData_Path::add_x_pos(uint32_t value) {
  _internal_add_x_pos(value);
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerPathsData.Path.x_pos)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMatchPlayerPathsData_Path::_internal_x_pos() const {
  return _impl_.x_pos_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMatchPlayerPathsData_Path::x_pos() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerPathsData.Path.x_pos)
  return _internal_x_pos();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMatchPlayerPathsData_Path::_internal_mutable_x_pos() {
  return &_impl_.x_pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMatchPlayerPathsData_Path::mutable_x_pos() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerPathsData.Path.x_pos)
  return _internal_mutable_x_pos();
}

// repeated uint32 y_pos = 7 [packed = true];
inline int CMsgMatchPlayerPathsData_Path::_internal_y_pos_size() const {
  return _impl_.y_pos_.size();
}
inline int CMsgMatchPlayerPathsData_Path::y_pos_size() const {
  return _internal_y_pos_size();
}
inline void CMsgMatchPlayerPathsData_Path::clear_y_pos() {
  _impl_.y_pos_.Clear();
}
inline uint32_t CMsgMatchPlayerPathsData_Path::_internal_y_pos(int index) const {
  return _impl_.y_pos_.Get(index);
}
inline uint32_t CMsgMatchPlayerPathsData_Path::y_pos(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.Path.y_pos)
  return _internal_y_pos(index);
}
inline void CMsgMatchPlayerPathsData_Path::set_y_pos(int index, uint32_t value) {
  _impl_.y_pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.Path.y_pos)
}
inline void CMsgMatchPlayerPathsData_Path::_internal_add_y_pos(uint32_t value) {
  _impl_.y_pos_.Add(value);
}
inline void CMsgMatchPlayerPathsData_Path::add_y_pos(uint32_t value) {
  _internal_add_y_pos(value);
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerPathsData.Path.y_pos)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMatchPlayerPathsData_Path::_internal_y_pos() const {
  return _impl_.y_pos_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMatchPlayerPathsData_Path::y_pos() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerPathsData.Path.y_pos)
  return _internal_y_pos();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMatchPlayerPathsData_Path::_internal_mutable_y_pos() {
  return &_impl_.y_pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMatchPlayerPathsData_Path::mutable_y_pos() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerPathsData.Path.y_pos)
  return _internal_mutable_y_pos();
}

// repeated bool alive = 8 [packed = true];
inline int CMsgMatchPlayerPathsData_Path::_internal_alive_size() const {
  return _impl_.alive_.size();
}
inline int CMsgMatchPlayerPathsData_Path::alive_size() const {
  return _internal_alive_size();
}
inline void CMsgMatchPlayerPathsData_Path::clear_alive() {
  _impl_.alive_.Clear();
}
inline bool CMsgMatchPlayerPathsData_Path::_internal_alive(int index) const {
  return _impl_.alive_.Get(index);
}
inline bool CMsgMatchPlayerPathsData_Path::alive(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.Path.alive)
  return _internal_alive(index);
}
inline void CMsgMatchPlayerPathsData_Path::set_alive(int index, bool value) {
  _impl_.alive_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.Path.alive)
}
inline void CMsgMatchPlayerPathsData_Path::_internal_add_alive(bool value) {
  _impl_.alive_.Add(value);
}
inline void CMsgMatchPlayerPathsData_Path::add_alive(bool value) {
  _internal_add_alive(value);
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerPathsData.Path.alive)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
CMsgMatchPlayerPathsData_Path::_internal_alive() const {
  return _impl_.alive_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
CMsgMatchPlayerPathsData_Path::alive() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerPathsData.Path.alive)
  return _internal_alive();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
CMsgMatchPlayerPathsData_Path::_internal_mutable_alive() {
  return &_impl_.alive_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
CMsgMatchPlayerPathsData_Path::mutable_alive() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerPathsData.Path.alive)
  return _internal_mutable_alive();
}

// repeated uint32 health = 9 [packed = true];
inline int CMsgMatchPlayerPathsData_Path::_internal_health_size() const {
  return _impl_.health_.size();
}
inline int CMsgMatchPlayerPathsData_Path::health_size() const {
  return _internal_health_size();
}
inline void CMsgMatchPlayerPathsData_Path::clear_health() {
  _impl_.health_.Clear();
}
inline uint32_t CMsgMatchPlayerPathsData_Path::_internal_health(int index) const {
  return _impl_.health_.Get(index);
}
inline uint32_t CMsgMatchPlayerPathsData_Path::health(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.Path.health)
  return _internal_health(index);
}
inline void CMsgMatchPlayerPathsData_Path::set_health(int index, uint32_t value) {
  _impl_.health_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.Path.health)
}
inline void CMsgMatchPlayerPathsData_Path::_internal_add_health(uint32_t value) {
  _impl_.health_.Add(value);
}
inline void CMsgMatchPlayerPathsData_Path::add_health(uint32_t value) {
  _internal_add_health(value);
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerPathsData.Path.health)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMatchPlayerPathsData_Path::_internal_health() const {
  return _impl_.health_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMatchPlayerPathsData_Path::health() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerPathsData.Path.health)
  return _internal_health();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMatchPlayerPathsData_Path::_internal_mutable_health() {
  return &_impl_.health_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMatchPlayerPathsData_Path::mutable_health() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerPathsData.Path.health)
  return _internal_mutable_health();
}

// -------------------------------------------------------------------

// CMsgMatchPlayerPathsData

// optional uint32 version = 1;
inline bool CMsgMatchPlayerPathsData::_internal_has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchPlayerPathsData::has_version() const {
  return _internal_has_version();
}
inline void CMsgMatchPlayerPathsData::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchPlayerPathsData::_internal_version() const {
  return _impl_.version_;
}
inline uint32_t CMsgMatchPlayerPathsData::version() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.version)
  return _internal_version();
}
inline void CMsgMatchPlayerPathsData::_internal_set_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.version_ = value;
}
inline void CMsgMatchPlayerPathsData::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.version)
}

// optional float interval_s = 2;
inline bool CMsgMatchPlayerPathsData::_internal_has_interval_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchPlayerPathsData::has_interval_s() const {
  return _internal_has_interval_s();
}
inline void CMsgMatchPlayerPathsData::clear_interval_s() {
  _impl_.interval_s_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CMsgMatchPlayerPathsData::_internal_interval_s() const {
  return _impl_.interval_s_;
}
inline float CMsgMatchPlayerPathsData::interval_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.interval_s)
  return _internal_interval_s();
}
inline void CMsgMatchPlayerPathsData::_internal_set_interval_s(float value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.interval_s_ = value;
}
inline void CMsgMatchPlayerPathsData::set_interval_s(float value) {
  _internal_set_interval_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.interval_s)
}

// optional uint32 x_resolution = 3;
inline bool CMsgMatchPlayerPathsData::_internal_has_x_resolution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchPlayerPathsData::has_x_resolution() const {
  return _internal_has_x_resolution();
}
inline void CMsgMatchPlayerPathsData::clear_x_resolution() {
  _impl_.x_resolution_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchPlayerPathsData::_internal_x_resolution() const {
  return _impl_.x_resolution_;
}
inline uint32_t CMsgMatchPlayerPathsData::x_resolution() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.x_resolution)
  return _internal_x_resolution();
}
inline void CMsgMatchPlayerPathsData::_internal_set_x_resolution(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.x_resolution_ = value;
}
inline void CMsgMatchPlayerPathsData::set_x_resolution(uint32_t value) {
  _internal_set_x_resolution(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.x_resolution)
}

// optional uint32 y_resolution = 4;
inline bool CMsgMatchPlayerPathsData::_internal_has_y_resolution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMatchPlayerPathsData::has_y_resolution() const {
  return _internal_has_y_resolution();
}
inline void CMsgMatchPlayerPathsData::clear_y_resolution() {
  _impl_.y_resolution_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgMatchPlayerPathsData::_internal_y_resolution() const {
  return _impl_.y_resolution_;
}
inline uint32_t CMsgMatchPlayerPathsData::y_resolution() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.y_resolution)
  return _internal_y_resolution();
}
inline void CMsgMatchPlayerPathsData::_internal_set_y_resolution(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.y_resolution_ = value;
}
inline void CMsgMatchPlayerPathsData::set_y_resolution(uint32_t value) {
  _internal_set_y_resolution(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerPathsData.y_resolution)
}

// repeated .CMsgMatchPlayerPathsData.Path paths = 5;
inline int CMsgMatchPlayerPathsData::_internal_paths_size() const {
  return _impl_.paths_.size();
}
inline int CMsgMatchPlayerPathsData::paths_size() const {
  return _internal_paths_size();
}
inline void CMsgMatchPlayerPathsData::clear_paths() {
  _impl_.paths_.Clear();
}
inline ::CMsgMatchPlayerPathsData_Path* CMsgMatchPlayerPathsData::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchPlayerPathsData.paths)
  return _impl_.paths_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerPathsData_Path >*
CMsgMatchPlayerPathsData::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerPathsData.paths)
  return &_impl_.paths_;
}
inline const ::CMsgMatchPlayerPathsData_Path& CMsgMatchPlayerPathsData::_internal_paths(int index) const {
  return _impl_.paths_.Get(index);
}
inline const ::CMsgMatchPlayerPathsData_Path& CMsgMatchPlayerPathsData::paths(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerPathsData.paths)
  return _internal_paths(index);
}
inline ::CMsgMatchPlayerPathsData_Path* CMsgMatchPlayerPathsData::_internal_add_paths() {
  return _impl_.paths_.Add();
}
inline ::CMsgMatchPlayerPathsData_Path* CMsgMatchPlayerPathsData::add_paths() {
  ::CMsgMatchPlayerPathsData_Path* _add = _internal_add_paths();
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerPathsData.paths)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerPathsData_Path >&
CMsgMatchPlayerPathsData::paths() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerPathsData.paths)
  return _impl_.paths_;
}

// -------------------------------------------------------------------

// CMsgMatchPlayerDamageMatrix_DamageToPlayer

// optional uint32 target_player_slot = 1;
inline bool CMsgMatchPlayerDamageMatrix_DamageToPlayer::_internal_has_target_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchPlayerDamageMatrix_DamageToPlayer::has_target_player_slot() const {
  return _internal_has_target_player_slot();
}
inline void CMsgMatchPlayerDamageMatrix_DamageToPlayer::clear_target_player_slot() {
  _impl_.target_player_slot_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchPlayerDamageMatrix_DamageToPlayer::_internal_target_player_slot() const {
  return _impl_.target_player_slot_;
}
inline uint32_t CMsgMatchPlayerDamageMatrix_DamageToPlayer::target_player_slot() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.DamageToPlayer.target_player_slot)
  return _internal_target_player_slot();
}
inline void CMsgMatchPlayerDamageMatrix_DamageToPlayer::_internal_set_target_player_slot(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.target_player_slot_ = value;
}
inline void CMsgMatchPlayerDamageMatrix_DamageToPlayer::set_target_player_slot(uint32_t value) {
  _internal_set_target_player_slot(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerDamageMatrix.DamageToPlayer.target_player_slot)
}

// repeated uint32 damage = 2 [packed = true];
inline int CMsgMatchPlayerDamageMatrix_DamageToPlayer::_internal_damage_size() const {
  return _impl_.damage_.size();
}
inline int CMsgMatchPlayerDamageMatrix_DamageToPlayer::damage_size() const {
  return _internal_damage_size();
}
inline void CMsgMatchPlayerDamageMatrix_DamageToPlayer::clear_damage() {
  _impl_.damage_.Clear();
}
inline uint32_t CMsgMatchPlayerDamageMatrix_DamageToPlayer::_internal_damage(int index) const {
  return _impl_.damage_.Get(index);
}
inline uint32_t CMsgMatchPlayerDamageMatrix_DamageToPlayer::damage(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.DamageToPlayer.damage)
  return _internal_damage(index);
}
inline void CMsgMatchPlayerDamageMatrix_DamageToPlayer::set_damage(int index, uint32_t value) {
  _impl_.damage_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerDamageMatrix.DamageToPlayer.damage)
}
inline void CMsgMatchPlayerDamageMatrix_DamageToPlayer::_internal_add_damage(uint32_t value) {
  _impl_.damage_.Add(value);
}
inline void CMsgMatchPlayerDamageMatrix_DamageToPlayer::add_damage(uint32_t value) {
  _internal_add_damage(value);
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerDamageMatrix.DamageToPlayer.damage)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMatchPlayerDamageMatrix_DamageToPlayer::_internal_damage() const {
  return _impl_.damage_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMatchPlayerDamageMatrix_DamageToPlayer::damage() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerDamageMatrix.DamageToPlayer.damage)
  return _internal_damage();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMatchPlayerDamageMatrix_DamageToPlayer::_internal_mutable_damage() {
  return &_impl_.damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMatchPlayerDamageMatrix_DamageToPlayer::mutable_damage() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerDamageMatrix.DamageToPlayer.damage)
  return _internal_mutable_damage();
}

// -------------------------------------------------------------------

// CMsgMatchPlayerDamageMatrix_DamageSource

// repeated .CMsgMatchPlayerDamageMatrix.DamageToPlayer damage_to_players = 2;
inline int CMsgMatchPlayerDamageMatrix_DamageSource::_internal_damage_to_players_size() const {
  return _impl_.damage_to_players_.size();
}
inline int CMsgMatchPlayerDamageMatrix_DamageSource::damage_to_players_size() const {
  return _internal_damage_to_players_size();
}
inline void CMsgMatchPlayerDamageMatrix_DamageSource::clear_damage_to_players() {
  _impl_.damage_to_players_.Clear();
}
inline ::CMsgMatchPlayerDamageMatrix_DamageToPlayer* CMsgMatchPlayerDamageMatrix_DamageSource::mutable_damage_to_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchPlayerDamageMatrix.DamageSource.damage_to_players)
  return _impl_.damage_to_players_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageToPlayer >*
CMsgMatchPlayerDamageMatrix_DamageSource::mutable_damage_to_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerDamageMatrix.DamageSource.damage_to_players)
  return &_impl_.damage_to_players_;
}
inline const ::CMsgMatchPlayerDamageMatrix_DamageToPlayer& CMsgMatchPlayerDamageMatrix_DamageSource::_internal_damage_to_players(int index) const {
  return _impl_.damage_to_players_.Get(index);
}
inline const ::CMsgMatchPlayerDamageMatrix_DamageToPlayer& CMsgMatchPlayerDamageMatrix_DamageSource::damage_to_players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.DamageSource.damage_to_players)
  return _internal_damage_to_players(index);
}
inline ::CMsgMatchPlayerDamageMatrix_DamageToPlayer* CMsgMatchPlayerDamageMatrix_DamageSource::_internal_add_damage_to_players() {
  return _impl_.damage_to_players_.Add();
}
inline ::CMsgMatchPlayerDamageMatrix_DamageToPlayer* CMsgMatchPlayerDamageMatrix_DamageSource::add_damage_to_players() {
  ::CMsgMatchPlayerDamageMatrix_DamageToPlayer* _add = _internal_add_damage_to_players();
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerDamageMatrix.DamageSource.damage_to_players)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageToPlayer >&
CMsgMatchPlayerDamageMatrix_DamageSource::damage_to_players() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerDamageMatrix.DamageSource.damage_to_players)
  return _impl_.damage_to_players_;
}

// optional uint32 source_details_index = 4;
inline bool CMsgMatchPlayerDamageMatrix_DamageSource::_internal_has_source_details_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchPlayerDamageMatrix_DamageSource::has_source_details_index() const {
  return _internal_has_source_details_index();
}
inline void CMsgMatchPlayerDamageMatrix_DamageSource::clear_source_details_index() {
  _impl_.source_details_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchPlayerDamageMatrix_DamageSource::_internal_source_details_index() const {
  return _impl_.source_details_index_;
}
inline uint32_t CMsgMatchPlayerDamageMatrix_DamageSource::source_details_index() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.DamageSource.source_details_index)
  return _internal_source_details_index();
}
inline void CMsgMatchPlayerDamageMatrix_DamageSource::_internal_set_source_details_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.source_details_index_ = value;
}
inline void CMsgMatchPlayerDamageMatrix_DamageSource::set_source_details_index(uint32_t value) {
  _internal_set_source_details_index(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerDamageMatrix.DamageSource.source_details_index)
}

// -------------------------------------------------------------------

// CMsgMatchPlayerDamageMatrix_DamageDealer

// optional uint32 dealer_player_slot = 1;
inline bool CMsgMatchPlayerDamageMatrix_DamageDealer::_internal_has_dealer_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchPlayerDamageMatrix_DamageDealer::has_dealer_player_slot() const {
  return _internal_has_dealer_player_slot();
}
inline void CMsgMatchPlayerDamageMatrix_DamageDealer::clear_dealer_player_slot() {
  _impl_.dealer_player_slot_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchPlayerDamageMatrix_DamageDealer::_internal_dealer_player_slot() const {
  return _impl_.dealer_player_slot_;
}
inline uint32_t CMsgMatchPlayerDamageMatrix_DamageDealer::dealer_player_slot() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.DamageDealer.dealer_player_slot)
  return _internal_dealer_player_slot();
}
inline void CMsgMatchPlayerDamageMatrix_DamageDealer::_internal_set_dealer_player_slot(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.dealer_player_slot_ = value;
}
inline void CMsgMatchPlayerDamageMatrix_DamageDealer::set_dealer_player_slot(uint32_t value) {
  _internal_set_dealer_player_slot(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerDamageMatrix.DamageDealer.dealer_player_slot)
}

// repeated .CMsgMatchPlayerDamageMatrix.DamageSource damage_sources = 2;
inline int CMsgMatchPlayerDamageMatrix_DamageDealer::_internal_damage_sources_size() const {
  return _impl_.damage_sources_.size();
}
inline int CMsgMatchPlayerDamageMatrix_DamageDealer::damage_sources_size() const {
  return _internal_damage_sources_size();
}
inline void CMsgMatchPlayerDamageMatrix_DamageDealer::clear_damage_sources() {
  _impl_.damage_sources_.Clear();
}
inline ::CMsgMatchPlayerDamageMatrix_DamageSource* CMsgMatchPlayerDamageMatrix_DamageDealer::mutable_damage_sources(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchPlayerDamageMatrix.DamageDealer.damage_sources)
  return _impl_.damage_sources_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageSource >*
CMsgMatchPlayerDamageMatrix_DamageDealer::mutable_damage_sources() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerDamageMatrix.DamageDealer.damage_sources)
  return &_impl_.damage_sources_;
}
inline const ::CMsgMatchPlayerDamageMatrix_DamageSource& CMsgMatchPlayerDamageMatrix_DamageDealer::_internal_damage_sources(int index) const {
  return _impl_.damage_sources_.Get(index);
}
inline const ::CMsgMatchPlayerDamageMatrix_DamageSource& CMsgMatchPlayerDamageMatrix_DamageDealer::damage_sources(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.DamageDealer.damage_sources)
  return _internal_damage_sources(index);
}
inline ::CMsgMatchPlayerDamageMatrix_DamageSource* CMsgMatchPlayerDamageMatrix_DamageDealer::_internal_add_damage_sources() {
  return _impl_.damage_sources_.Add();
}
inline ::CMsgMatchPlayerDamageMatrix_DamageSource* CMsgMatchPlayerDamageMatrix_DamageDealer::add_damage_sources() {
  ::CMsgMatchPlayerDamageMatrix_DamageSource* _add = _internal_add_damage_sources();
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerDamageMatrix.DamageDealer.damage_sources)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageSource >&
CMsgMatchPlayerDamageMatrix_DamageDealer::damage_sources() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerDamageMatrix.DamageDealer.damage_sources)
  return _impl_.damage_sources_;
}

// -------------------------------------------------------------------

// CMsgMatchPlayerDamageMatrix_SourceDetails

// repeated .CMsgMatchPlayerDamageMatrix.EStatType stat_type = 1 [packed = true];
inline int CMsgMatchPlayerDamageMatrix_SourceDetails::_internal_stat_type_size() const {
  return _impl_.stat_type_.size();
}
inline int CMsgMatchPlayerDamageMatrix_SourceDetails::stat_type_size() const {
  return _internal_stat_type_size();
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::clear_stat_type() {
  _impl_.stat_type_.Clear();
}
inline ::CMsgMatchPlayerDamageMatrix_EStatType CMsgMatchPlayerDamageMatrix_SourceDetails::_internal_stat_type(int index) const {
  return static_cast< ::CMsgMatchPlayerDamageMatrix_EStatType >(_impl_.stat_type_.Get(index));
}
inline ::CMsgMatchPlayerDamageMatrix_EStatType CMsgMatchPlayerDamageMatrix_SourceDetails::stat_type(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.SourceDetails.stat_type)
  return _internal_stat_type(index);
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::set_stat_type(int index, ::CMsgMatchPlayerDamageMatrix_EStatType value) {
  assert(::CMsgMatchPlayerDamageMatrix_EStatType_IsValid(value));
  _impl_.stat_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerDamageMatrix.SourceDetails.stat_type)
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::_internal_add_stat_type(::CMsgMatchPlayerDamageMatrix_EStatType value) {
  assert(::CMsgMatchPlayerDamageMatrix_EStatType_IsValid(value));
  _impl_.stat_type_.Add(value);
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::add_stat_type(::CMsgMatchPlayerDamageMatrix_EStatType value) {
  _internal_add_stat_type(value);
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerDamageMatrix.SourceDetails.stat_type)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
CMsgMatchPlayerDamageMatrix_SourceDetails::stat_type() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerDamageMatrix.SourceDetails.stat_type)
  return _impl_.stat_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
CMsgMatchPlayerDamageMatrix_SourceDetails::_internal_mutable_stat_type() {
  return &_impl_.stat_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
CMsgMatchPlayerDamageMatrix_SourceDetails::mutable_stat_type() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerDamageMatrix.SourceDetails.stat_type)
  return _internal_mutable_stat_type();
}

// repeated string source_name = 2;
inline int CMsgMatchPlayerDamageMatrix_SourceDetails::_internal_source_name_size() const {
  return _impl_.source_name_.size();
}
inline int CMsgMatchPlayerDamageMatrix_SourceDetails::source_name_size() const {
  return _internal_source_name_size();
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::clear_source_name() {
  _impl_.source_name_.Clear();
}
inline std::string* CMsgMatchPlayerDamageMatrix_SourceDetails::add_source_name() {
  std::string* _s = _internal_add_source_name();
  // @@protoc_insertion_point(field_add_mutable:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
  return _s;
}
inline const std::string& CMsgMatchPlayerDamageMatrix_SourceDetails::_internal_source_name(int index) const {
  return _impl_.source_name_.Get(index);
}
inline const std::string& CMsgMatchPlayerDamageMatrix_SourceDetails::source_name(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
  return _internal_source_name(index);
}
inline std::string* CMsgMatchPlayerDamageMatrix_SourceDetails::mutable_source_name(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
  return _impl_.source_name_.Mutable(index);
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::set_source_name(int index, const std::string& value) {
  _impl_.source_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::set_source_name(int index, std::string&& value) {
  _impl_.source_name_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::set_source_name(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.source_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::set_source_name(int index, const char* value, size_t size) {
  _impl_.source_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
}
inline std::string* CMsgMatchPlayerDamageMatrix_SourceDetails::_internal_add_source_name() {
  return _impl_.source_name_.Add();
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::add_source_name(const std::string& value) {
  _impl_.source_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::add_source_name(std::string&& value) {
  _impl_.source_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::add_source_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.source_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
}
inline void CMsgMatchPlayerDamageMatrix_SourceDetails::add_source_name(const char* value, size_t size) {
  _impl_.source_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgMatchPlayerDamageMatrix_SourceDetails::source_name() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
  return _impl_.source_name_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgMatchPlayerDamageMatrix_SourceDetails::mutable_source_name() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerDamageMatrix.SourceDetails.source_name)
  return &_impl_.source_name_;
}

// -------------------------------------------------------------------

// CMsgMatchPlayerDamageMatrix

// repeated .CMsgMatchPlayerDamageMatrix.DamageDealer damage_dealers = 1;
inline int CMsgMatchPlayerDamageMatrix::_internal_damage_dealers_size() const {
  return _impl_.damage_dealers_.size();
}
inline int CMsgMatchPlayerDamageMatrix::damage_dealers_size() const {
  return _internal_damage_dealers_size();
}
inline void CMsgMatchPlayerDamageMatrix::clear_damage_dealers() {
  _impl_.damage_dealers_.Clear();
}
inline ::CMsgMatchPlayerDamageMatrix_DamageDealer* CMsgMatchPlayerDamageMatrix::mutable_damage_dealers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchPlayerDamageMatrix.damage_dealers)
  return _impl_.damage_dealers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageDealer >*
CMsgMatchPlayerDamageMatrix::mutable_damage_dealers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerDamageMatrix.damage_dealers)
  return &_impl_.damage_dealers_;
}
inline const ::CMsgMatchPlayerDamageMatrix_DamageDealer& CMsgMatchPlayerDamageMatrix::_internal_damage_dealers(int index) const {
  return _impl_.damage_dealers_.Get(index);
}
inline const ::CMsgMatchPlayerDamageMatrix_DamageDealer& CMsgMatchPlayerDamageMatrix::damage_dealers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.damage_dealers)
  return _internal_damage_dealers(index);
}
inline ::CMsgMatchPlayerDamageMatrix_DamageDealer* CMsgMatchPlayerDamageMatrix::_internal_add_damage_dealers() {
  return _impl_.damage_dealers_.Add();
}
inline ::CMsgMatchPlayerDamageMatrix_DamageDealer* CMsgMatchPlayerDamageMatrix::add_damage_dealers() {
  ::CMsgMatchPlayerDamageMatrix_DamageDealer* _add = _internal_add_damage_dealers();
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerDamageMatrix.damage_dealers)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchPlayerDamageMatrix_DamageDealer >&
CMsgMatchPlayerDamageMatrix::damage_dealers() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerDamageMatrix.damage_dealers)
  return _impl_.damage_dealers_;
}

// repeated uint32 sample_time_s = 2 [packed = true];
inline int CMsgMatchPlayerDamageMatrix::_internal_sample_time_s_size() const {
  return _impl_.sample_time_s_.size();
}
inline int CMsgMatchPlayerDamageMatrix::sample_time_s_size() const {
  return _internal_sample_time_s_size();
}
inline void CMsgMatchPlayerDamageMatrix::clear_sample_time_s() {
  _impl_.sample_time_s_.Clear();
}
inline uint32_t CMsgMatchPlayerDamageMatrix::_internal_sample_time_s(int index) const {
  return _impl_.sample_time_s_.Get(index);
}
inline uint32_t CMsgMatchPlayerDamageMatrix::sample_time_s(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.sample_time_s)
  return _internal_sample_time_s(index);
}
inline void CMsgMatchPlayerDamageMatrix::set_sample_time_s(int index, uint32_t value) {
  _impl_.sample_time_s_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchPlayerDamageMatrix.sample_time_s)
}
inline void CMsgMatchPlayerDamageMatrix::_internal_add_sample_time_s(uint32_t value) {
  _impl_.sample_time_s_.Add(value);
}
inline void CMsgMatchPlayerDamageMatrix::add_sample_time_s(uint32_t value) {
  _internal_add_sample_time_s(value);
  // @@protoc_insertion_point(field_add:CMsgMatchPlayerDamageMatrix.sample_time_s)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMatchPlayerDamageMatrix::_internal_sample_time_s() const {
  return _impl_.sample_time_s_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgMatchPlayerDamageMatrix::sample_time_s() const {
  // @@protoc_insertion_point(field_list:CMsgMatchPlayerDamageMatrix.sample_time_s)
  return _internal_sample_time_s();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMatchPlayerDamageMatrix::_internal_mutable_sample_time_s() {
  return &_impl_.sample_time_s_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgMatchPlayerDamageMatrix::mutable_sample_time_s() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchPlayerDamageMatrix.sample_time_s)
  return _internal_mutable_sample_time_s();
}

// optional .CMsgMatchPlayerDamageMatrix.SourceDetails source_details = 3;
inline bool CMsgMatchPlayerDamageMatrix::_internal_has_source_details() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_details_ != nullptr);
  return value;
}
inline bool CMsgMatchPlayerDamageMatrix::has_source_details() const {
  return _internal_has_source_details();
}
inline void CMsgMatchPlayerDamageMatrix::clear_source_details() {
  if (_impl_.source_details_ != nullptr) _impl_.source_details_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgMatchPlayerDamageMatrix_SourceDetails& CMsgMatchPlayerDamageMatrix::_internal_source_details() const {
  const ::CMsgMatchPlayerDamageMatrix_SourceDetails* p = _impl_.source_details_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgMatchPlayerDamageMatrix_SourceDetails&>(
      ::_CMsgMatchPlayerDamageMatrix_SourceDetails_default_instance_);
}
inline const ::CMsgMatchPlayerDamageMatrix_SourceDetails& CMsgMatchPlayerDamageMatrix::source_details() const {
  // @@protoc_insertion_point(field_get:CMsgMatchPlayerDamageMatrix.source_details)
  return _internal_source_details();
}
inline void CMsgMatchPlayerDamageMatrix::unsafe_arena_set_allocated_source_details(
    ::CMsgMatchPlayerDamageMatrix_SourceDetails* source_details) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.source_details_);
  }
  _impl_.source_details_ = source_details;
  if (source_details) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgMatchPlayerDamageMatrix.source_details)
}
inline ::CMsgMatchPlayerDamageMatrix_SourceDetails* CMsgMatchPlayerDamageMatrix::release_source_details() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgMatchPlayerDamageMatrix_SourceDetails* temp = _impl_.source_details_;
  _impl_.source_details_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgMatchPlayerDamageMatrix_SourceDetails* CMsgMatchPlayerDamageMatrix::unsafe_arena_release_source_details() {
  // @@protoc_insertion_point(field_release:CMsgMatchPlayerDamageMatrix.source_details)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgMatchPlayerDamageMatrix_SourceDetails* temp = _impl_.source_details_;
  _impl_.source_details_ = nullptr;
  return temp;
}
inline ::CMsgMatchPlayerDamageMatrix_SourceDetails* CMsgMatchPlayerDamageMatrix::_internal_mutable_source_details() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.source_details_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgMatchPlayerDamageMatrix_SourceDetails>(GetArenaForAllocation());
    _impl_.source_details_ = p;
  }
  return _impl_.source_details_;
}
inline ::CMsgMatchPlayerDamageMatrix_SourceDetails* CMsgMatchPlayerDamageMatrix::mutable_source_details() {
  ::CMsgMatchPlayerDamageMatrix_SourceDetails* _msg = _internal_mutable_source_details();
  // @@protoc_insertion_point(field_mutable:CMsgMatchPlayerDamageMatrix.source_details)
  return _msg;
}
inline void CMsgMatchPlayerDamageMatrix::set_allocated_source_details(::CMsgMatchPlayerDamageMatrix_SourceDetails* source_details) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.source_details_;
  }
  if (source_details) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(source_details);
    if (message_arena != submessage_arena) {
      source_details = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, source_details, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.source_details_ = source_details;
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchPlayerDamageMatrix.source_details)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_Position

// optional float x = 1;
inline bool CMsgMatchMetaDataContents_Position::_internal_has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Position::has_x() const {
  return _internal_has_x();
}
inline void CMsgMatchMetaDataContents_Position::clear_x() {
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float CMsgMatchMetaDataContents_Position::_internal_x() const {
  return _impl_.x_;
}
inline float CMsgMatchMetaDataContents_Position::x() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Position.x)
  return _internal_x();
}
inline void CMsgMatchMetaDataContents_Position::_internal_set_x(float value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.x_ = value;
}
inline void CMsgMatchMetaDataContents_Position::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Position.x)
}

// optional float y = 2;
inline bool CMsgMatchMetaDataContents_Position::_internal_has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Position::has_y() const {
  return _internal_has_y();
}
inline void CMsgMatchMetaDataContents_Position::clear_y() {
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CMsgMatchMetaDataContents_Position::_internal_y() const {
  return _impl_.y_;
}
inline float CMsgMatchMetaDataContents_Position::y() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Position.y)
  return _internal_y();
}
inline void CMsgMatchMetaDataContents_Position::_internal_set_y(float value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.y_ = value;
}
inline void CMsgMatchMetaDataContents_Position::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Position.y)
}

// optional float z = 3;
inline bool CMsgMatchMetaDataContents_Position::_internal_has_z() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Position::has_z() const {
  return _internal_has_z();
}
inline void CMsgMatchMetaDataContents_Position::clear_z() {
  _impl_.z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgMatchMetaDataContents_Position::_internal_z() const {
  return _impl_.z_;
}
inline float CMsgMatchMetaDataContents_Position::z() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Position.z)
  return _internal_z();
}
inline void CMsgMatchMetaDataContents_Position::_internal_set_z(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.z_ = value;
}
inline void CMsgMatchMetaDataContents_Position::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Position.z)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_Deaths

// optional uint32 game_time_s = 1;
inline bool CMsgMatchMetaDataContents_Deaths::_internal_has_game_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Deaths::has_game_time_s() const {
  return _internal_has_game_time_s();
}
inline void CMsgMatchMetaDataContents_Deaths::clear_game_time_s() {
  _impl_.game_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_Deaths::_internal_game_time_s() const {
  return _impl_.game_time_s_;
}
inline uint32_t CMsgMatchMetaDataContents_Deaths::game_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Deaths.game_time_s)
  return _internal_game_time_s();
}
inline void CMsgMatchMetaDataContents_Deaths::_internal_set_game_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.game_time_s_ = value;
}
inline void CMsgMatchMetaDataContents_Deaths::set_game_time_s(uint32_t value) {
  _internal_set_game_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Deaths.game_time_s)
}

// optional uint32 killer_player_slot = 9;
inline bool CMsgMatchMetaDataContents_Deaths::_internal_has_killer_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Deaths::has_killer_player_slot() const {
  return _internal_has_killer_player_slot();
}
inline void CMsgMatchMetaDataContents_Deaths::clear_killer_player_slot() {
  _impl_.killer_player_slot_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgMatchMetaDataContents_Deaths::_internal_killer_player_slot() const {
  return _impl_.killer_player_slot_;
}
inline uint32_t CMsgMatchMetaDataContents_Deaths::killer_player_slot() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Deaths.killer_player_slot)
  return _internal_killer_player_slot();
}
inline void CMsgMatchMetaDataContents_Deaths::_internal_set_killer_player_slot(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.killer_player_slot_ = value;
}
inline void CMsgMatchMetaDataContents_Deaths::set_killer_player_slot(uint32_t value) {
  _internal_set_killer_player_slot(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Deaths.killer_player_slot)
}

// optional .CMsgMatchMetaDataContents.Position death_pos = 10;
inline bool CMsgMatchMetaDataContents_Deaths::_internal_has_death_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.death_pos_ != nullptr);
  return value;
}
inline bool CMsgMatchMetaDataContents_Deaths::has_death_pos() const {
  return _internal_has_death_pos();
}
inline void CMsgMatchMetaDataContents_Deaths::clear_death_pos() {
  if (_impl_.death_pos_ != nullptr) _impl_.death_pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgMatchMetaDataContents_Position& CMsgMatchMetaDataContents_Deaths::_internal_death_pos() const {
  const ::CMsgMatchMetaDataContents_Position* p = _impl_.death_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgMatchMetaDataContents_Position&>(
      ::_CMsgMatchMetaDataContents_Position_default_instance_);
}
inline const ::CMsgMatchMetaDataContents_Position& CMsgMatchMetaDataContents_Deaths::death_pos() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Deaths.death_pos)
  return _internal_death_pos();
}
inline void CMsgMatchMetaDataContents_Deaths::unsafe_arena_set_allocated_death_pos(
    ::CMsgMatchMetaDataContents_Position* death_pos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.death_pos_);
  }
  _impl_.death_pos_ = death_pos;
  if (death_pos) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgMatchMetaDataContents.Deaths.death_pos)
}
inline ::CMsgMatchMetaDataContents_Position* CMsgMatchMetaDataContents_Deaths::release_death_pos() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgMatchMetaDataContents_Position* temp = _impl_.death_pos_;
  _impl_.death_pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgMatchMetaDataContents_Position* CMsgMatchMetaDataContents_Deaths::unsafe_arena_release_death_pos() {
  // @@protoc_insertion_point(field_release:CMsgMatchMetaDataContents.Deaths.death_pos)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgMatchMetaDataContents_Position* temp = _impl_.death_pos_;
  _impl_.death_pos_ = nullptr;
  return temp;
}
inline ::CMsgMatchMetaDataContents_Position* CMsgMatchMetaDataContents_Deaths::_internal_mutable_death_pos() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.death_pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgMatchMetaDataContents_Position>(GetArenaForAllocation());
    _impl_.death_pos_ = p;
  }
  return _impl_.death_pos_;
}
inline ::CMsgMatchMetaDataContents_Position* CMsgMatchMetaDataContents_Deaths::mutable_death_pos() {
  ::CMsgMatchMetaDataContents_Position* _msg = _internal_mutable_death_pos();
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.Deaths.death_pos)
  return _msg;
}
inline void CMsgMatchMetaDataContents_Deaths::set_allocated_death_pos(::CMsgMatchMetaDataContents_Position* death_pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.death_pos_;
  }
  if (death_pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(death_pos);
    if (message_arena != submessage_arena) {
      death_pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, death_pos, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.death_pos_ = death_pos;
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchMetaDataContents.Deaths.death_pos)
}

// optional .CMsgMatchMetaDataContents.Position killer_pos = 11;
inline bool CMsgMatchMetaDataContents_Deaths::_internal_has_killer_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.killer_pos_ != nullptr);
  return value;
}
inline bool CMsgMatchMetaDataContents_Deaths::has_killer_pos() const {
  return _internal_has_killer_pos();
}
inline void CMsgMatchMetaDataContents_Deaths::clear_killer_pos() {
  if (_impl_.killer_pos_ != nullptr) _impl_.killer_pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgMatchMetaDataContents_Position& CMsgMatchMetaDataContents_Deaths::_internal_killer_pos() const {
  const ::CMsgMatchMetaDataContents_Position* p = _impl_.killer_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgMatchMetaDataContents_Position&>(
      ::_CMsgMatchMetaDataContents_Position_default_instance_);
}
inline const ::CMsgMatchMetaDataContents_Position& CMsgMatchMetaDataContents_Deaths::killer_pos() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Deaths.killer_pos)
  return _internal_killer_pos();
}
inline void CMsgMatchMetaDataContents_Deaths::unsafe_arena_set_allocated_killer_pos(
    ::CMsgMatchMetaDataContents_Position* killer_pos) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.killer_pos_);
  }
  _impl_.killer_pos_ = killer_pos;
  if (killer_pos) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgMatchMetaDataContents.Deaths.killer_pos)
}
inline ::CMsgMatchMetaDataContents_Position* CMsgMatchMetaDataContents_Deaths::release_killer_pos() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgMatchMetaDataContents_Position* temp = _impl_.killer_pos_;
  _impl_.killer_pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgMatchMetaDataContents_Position* CMsgMatchMetaDataContents_Deaths::unsafe_arena_release_killer_pos() {
  // @@protoc_insertion_point(field_release:CMsgMatchMetaDataContents.Deaths.killer_pos)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgMatchMetaDataContents_Position* temp = _impl_.killer_pos_;
  _impl_.killer_pos_ = nullptr;
  return temp;
}
inline ::CMsgMatchMetaDataContents_Position* CMsgMatchMetaDataContents_Deaths::_internal_mutable_killer_pos() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.killer_pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgMatchMetaDataContents_Position>(GetArenaForAllocation());
    _impl_.killer_pos_ = p;
  }
  return _impl_.killer_pos_;
}
inline ::CMsgMatchMetaDataContents_Position* CMsgMatchMetaDataContents_Deaths::mutable_killer_pos() {
  ::CMsgMatchMetaDataContents_Position* _msg = _internal_mutable_killer_pos();
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.Deaths.killer_pos)
  return _msg;
}
inline void CMsgMatchMetaDataContents_Deaths::set_allocated_killer_pos(::CMsgMatchMetaDataContents_Position* killer_pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.killer_pos_;
  }
  if (killer_pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(killer_pos);
    if (message_arena != submessage_arena) {
      killer_pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, killer_pos, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.killer_pos_ = killer_pos;
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchMetaDataContents.Deaths.killer_pos)
}

// optional uint32 death_duration_s = 12;
inline bool CMsgMatchMetaDataContents_Deaths::_internal_has_death_duration_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Deaths::has_death_duration_s() const {
  return _internal_has_death_duration_s();
}
inline void CMsgMatchMetaDataContents_Deaths::clear_death_duration_s() {
  _impl_.death_duration_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgMatchMetaDataContents_Deaths::_internal_death_duration_s() const {
  return _impl_.death_duration_s_;
}
inline uint32_t CMsgMatchMetaDataContents_Deaths::death_duration_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Deaths.death_duration_s)
  return _internal_death_duration_s();
}
inline void CMsgMatchMetaDataContents_Deaths::_internal_set_death_duration_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.death_duration_s_ = value;
}
inline void CMsgMatchMetaDataContents_Deaths::set_death_duration_s(uint32_t value) {
  _internal_set_death_duration_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Deaths.death_duration_s)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_Items

// optional uint32 game_time_s = 1;
inline bool CMsgMatchMetaDataContents_Items::_internal_has_game_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Items::has_game_time_s() const {
  return _internal_has_game_time_s();
}
inline void CMsgMatchMetaDataContents_Items::clear_game_time_s() {
  _impl_.game_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_Items::_internal_game_time_s() const {
  return _impl_.game_time_s_;
}
inline uint32_t CMsgMatchMetaDataContents_Items::game_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Items.game_time_s)
  return _internal_game_time_s();
}
inline void CMsgMatchMetaDataContents_Items::_internal_set_game_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.game_time_s_ = value;
}
inline void CMsgMatchMetaDataContents_Items::set_game_time_s(uint32_t value) {
  _internal_set_game_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Items.game_time_s)
}

// optional uint32 item_id = 2;
inline bool CMsgMatchMetaDataContents_Items::_internal_has_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Items::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgMatchMetaDataContents_Items::clear_item_id() {
  _impl_.item_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_Items::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint32_t CMsgMatchMetaDataContents_Items::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Items.item_id)
  return _internal_item_id();
}
inline void CMsgMatchMetaDataContents_Items::_internal_set_item_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.item_id_ = value;
}
inline void CMsgMatchMetaDataContents_Items::set_item_id(uint32_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Items.item_id)
}

// optional uint32 upgrade_id = 3;
inline bool CMsgMatchMetaDataContents_Items::_internal_has_upgrade_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Items::has_upgrade_id() const {
  return _internal_has_upgrade_id();
}
inline void CMsgMatchMetaDataContents_Items::clear_upgrade_id() {
  _impl_.upgrade_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_Items::_internal_upgrade_id() const {
  return _impl_.upgrade_id_;
}
inline uint32_t CMsgMatchMetaDataContents_Items::upgrade_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Items.upgrade_id)
  return _internal_upgrade_id();
}
inline void CMsgMatchMetaDataContents_Items::_internal_set_upgrade_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.upgrade_id_ = value;
}
inline void CMsgMatchMetaDataContents_Items::set_upgrade_id(uint32_t value) {
  _internal_set_upgrade_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Items.upgrade_id)
}

// optional uint32 sold_time_s = 4;
inline bool CMsgMatchMetaDataContents_Items::_internal_has_sold_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Items::has_sold_time_s() const {
  return _internal_has_sold_time_s();
}
inline void CMsgMatchMetaDataContents_Items::clear_sold_time_s() {
  _impl_.sold_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgMatchMetaDataContents_Items::_internal_sold_time_s() const {
  return _impl_.sold_time_s_;
}
inline uint32_t CMsgMatchMetaDataContents_Items::sold_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Items.sold_time_s)
  return _internal_sold_time_s();
}
inline void CMsgMatchMetaDataContents_Items::_internal_set_sold_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.sold_time_s_ = value;
}
inline void CMsgMatchMetaDataContents_Items::set_sold_time_s(uint32_t value) {
  _internal_set_sold_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Items.sold_time_s)
}

// optional uint32 flags = 5;
inline bool CMsgMatchMetaDataContents_Items::_internal_has_flags() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Items::has_flags() const {
  return _internal_has_flags();
}
inline void CMsgMatchMetaDataContents_Items::clear_flags() {
  _impl_.flags_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgMatchMetaDataContents_Items::_internal_flags() const {
  return _impl_.flags_;
}
inline uint32_t CMsgMatchMetaDataContents_Items::flags() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Items.flags)
  return _internal_flags();
}
inline void CMsgMatchMetaDataContents_Items::_internal_set_flags(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.flags_ = value;
}
inline void CMsgMatchMetaDataContents_Items::set_flags(uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Items.flags)
}

// optional uint32 imbued_ability_id = 6;
inline bool CMsgMatchMetaDataContents_Items::_internal_has_imbued_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Items::has_imbued_ability_id() const {
  return _internal_has_imbued_ability_id();
}
inline void CMsgMatchMetaDataContents_Items::clear_imbued_ability_id() {
  _impl_.imbued_ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgMatchMetaDataContents_Items::_internal_imbued_ability_id() const {
  return _impl_.imbued_ability_id_;
}
inline uint32_t CMsgMatchMetaDataContents_Items::imbued_ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Items.imbued_ability_id)
  return _internal_imbued_ability_id();
}
inline void CMsgMatchMetaDataContents_Items::_internal_set_imbued_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.imbued_ability_id_ = value;
}
inline void CMsgMatchMetaDataContents_Items::set_imbued_ability_id(uint32_t value) {
  _internal_set_imbued_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Items.imbued_ability_id)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_Ping

// optional uint32 ping_type = 1;
inline bool CMsgMatchMetaDataContents_Ping::_internal_has_ping_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Ping::has_ping_type() const {
  return _internal_has_ping_type();
}
inline void CMsgMatchMetaDataContents_Ping::clear_ping_type() {
  _impl_.ping_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_Ping::_internal_ping_type() const {
  return _impl_.ping_type_;
}
inline uint32_t CMsgMatchMetaDataContents_Ping::ping_type() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Ping.ping_type)
  return _internal_ping_type();
}
inline void CMsgMatchMetaDataContents_Ping::_internal_set_ping_type(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ping_type_ = value;
}
inline void CMsgMatchMetaDataContents_Ping::set_ping_type(uint32_t value) {
  _internal_set_ping_type(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Ping.ping_type)
}

// optional uint32 ping_data = 2;
inline bool CMsgMatchMetaDataContents_Ping::_internal_has_ping_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Ping::has_ping_data() const {
  return _internal_has_ping_data();
}
inline void CMsgMatchMetaDataContents_Ping::clear_ping_data() {
  _impl_.ping_data_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_Ping::_internal_ping_data() const {
  return _impl_.ping_data_;
}
inline uint32_t CMsgMatchMetaDataContents_Ping::ping_data() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Ping.ping_data)
  return _internal_ping_data();
}
inline void CMsgMatchMetaDataContents_Ping::_internal_set_ping_data(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ping_data_ = value;
}
inline void CMsgMatchMetaDataContents_Ping::set_ping_data(uint32_t value) {
  _internal_set_ping_data(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Ping.ping_data)
}

// optional uint32 game_time_s = 3;
inline bool CMsgMatchMetaDataContents_Ping::_internal_has_game_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Ping::has_game_time_s() const {
  return _internal_has_game_time_s();
}
inline void CMsgMatchMetaDataContents_Ping::clear_game_time_s() {
  _impl_.game_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_Ping::_internal_game_time_s() const {
  return _impl_.game_time_s_;
}
inline uint32_t CMsgMatchMetaDataContents_Ping::game_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Ping.game_time_s)
  return _internal_game_time_s();
}
inline void CMsgMatchMetaDataContents_Ping::_internal_set_game_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.game_time_s_ = value;
}
inline void CMsgMatchMetaDataContents_Ping::set_game_time_s(uint32_t value) {
  _internal_set_game_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Ping.game_time_s)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_GoldSource

// optional .CMsgMatchMetaDataContents.EGoldSource source = 1 [default = k_ePlayers];
inline bool CMsgMatchMetaDataContents_GoldSource::_internal_has_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_GoldSource::has_source() const {
  return _internal_has_source();
}
inline void CMsgMatchMetaDataContents_GoldSource::clear_source() {
  _impl_.source_ = 1;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::CMsgMatchMetaDataContents_EGoldSource CMsgMatchMetaDataContents_GoldSource::_internal_source() const {
  return static_cast< ::CMsgMatchMetaDataContents_EGoldSource >(_impl_.source_);
}
inline ::CMsgMatchMetaDataContents_EGoldSource CMsgMatchMetaDataContents_GoldSource::source() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.GoldSource.source)
  return _internal_source();
}
inline void CMsgMatchMetaDataContents_GoldSource::_internal_set_source(::CMsgMatchMetaDataContents_EGoldSource value) {
  assert(::CMsgMatchMetaDataContents_EGoldSource_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.source_ = value;
}
inline void CMsgMatchMetaDataContents_GoldSource::set_source(::CMsgMatchMetaDataContents_EGoldSource value) {
  _internal_set_source(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.GoldSource.source)
}

// optional uint32 kills = 2;
inline bool CMsgMatchMetaDataContents_GoldSource::_internal_has_kills() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_GoldSource::has_kills() const {
  return _internal_has_kills();
}
inline void CMsgMatchMetaDataContents_GoldSource::clear_kills() {
  _impl_.kills_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_GoldSource::_internal_kills() const {
  return _impl_.kills_;
}
inline uint32_t CMsgMatchMetaDataContents_GoldSource::kills() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.GoldSource.kills)
  return _internal_kills();
}
inline void CMsgMatchMetaDataContents_GoldSource::_internal_set_kills(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.kills_ = value;
}
inline void CMsgMatchMetaDataContents_GoldSource::set_kills(uint32_t value) {
  _internal_set_kills(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.GoldSource.kills)
}

// optional uint32 damage = 3;
inline bool CMsgMatchMetaDataContents_GoldSource::_internal_has_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_GoldSource::has_damage() const {
  return _internal_has_damage();
}
inline void CMsgMatchMetaDataContents_GoldSource::clear_damage() {
  _impl_.damage_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_GoldSource::_internal_damage() const {
  return _impl_.damage_;
}
inline uint32_t CMsgMatchMetaDataContents_GoldSource::damage() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.GoldSource.damage)
  return _internal_damage();
}
inline void CMsgMatchMetaDataContents_GoldSource::_internal_set_damage(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.damage_ = value;
}
inline void CMsgMatchMetaDataContents_GoldSource::set_damage(uint32_t value) {
  _internal_set_damage(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.GoldSource.damage)
}

// optional uint32 gold = 4;
inline bool CMsgMatchMetaDataContents_GoldSource::_internal_has_gold() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_GoldSource::has_gold() const {
  return _internal_has_gold();
}
inline void CMsgMatchMetaDataContents_GoldSource::clear_gold() {
  _impl_.gold_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_GoldSource::_internal_gold() const {
  return _impl_.gold_;
}
inline uint32_t CMsgMatchMetaDataContents_GoldSource::gold() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.GoldSource.gold)
  return _internal_gold();
}
inline void CMsgMatchMetaDataContents_GoldSource::_internal_set_gold(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.gold_ = value;
}
inline void CMsgMatchMetaDataContents_GoldSource::set_gold(uint32_t value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.GoldSource.gold)
}

// optional uint32 gold_orbs = 5;
inline bool CMsgMatchMetaDataContents_GoldSource::_internal_has_gold_orbs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_GoldSource::has_gold_orbs() const {
  return _internal_has_gold_orbs();
}
inline void CMsgMatchMetaDataContents_GoldSource::clear_gold_orbs() {
  _impl_.gold_orbs_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgMatchMetaDataContents_GoldSource::_internal_gold_orbs() const {
  return _impl_.gold_orbs_;
}
inline uint32_t CMsgMatchMetaDataContents_GoldSource::gold_orbs() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.GoldSource.gold_orbs)
  return _internal_gold_orbs();
}
inline void CMsgMatchMetaDataContents_GoldSource::_internal_set_gold_orbs(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.gold_orbs_ = value;
}
inline void CMsgMatchMetaDataContents_GoldSource::set_gold_orbs(uint32_t value) {
  _internal_set_gold_orbs(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.GoldSource.gold_orbs)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_CustomUserStatInfo

// optional string name = 1;
inline bool CMsgMatchMetaDataContents_CustomUserStatInfo::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_CustomUserStatInfo::has_name() const {
  return _internal_has_name();
}
inline void CMsgMatchMetaDataContents_CustomUserStatInfo::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgMatchMetaDataContents_CustomUserStatInfo::name() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.CustomUserStatInfo.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgMatchMetaDataContents_CustomUserStatInfo::set_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.CustomUserStatInfo.name)
}
inline std::string* CMsgMatchMetaDataContents_CustomUserStatInfo::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.CustomUserStatInfo.name)
  return _s;
}
inline const std::string& CMsgMatchMetaDataContents_CustomUserStatInfo::_internal_name() const {
  return _impl_.name_.Get();
}
inline void CMsgMatchMetaDataContents_CustomUserStatInfo::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgMatchMetaDataContents_CustomUserStatInfo::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgMatchMetaDataContents_CustomUserStatInfo::release_name() {
  // @@protoc_insertion_point(field_release:CMsgMatchMetaDataContents.CustomUserStatInfo.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgMatchMetaDataContents_CustomUserStatInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchMetaDataContents.CustomUserStatInfo.name)
}

// optional uint32 id = 2;
inline bool CMsgMatchMetaDataContents_CustomUserStatInfo::_internal_has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_CustomUserStatInfo::has_id() const {
  return _internal_has_id();
}
inline void CMsgMatchMetaDataContents_CustomUserStatInfo::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_CustomUserStatInfo::_internal_id() const {
  return _impl_.id_;
}
inline uint32_t CMsgMatchMetaDataContents_CustomUserStatInfo::id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.CustomUserStatInfo.id)
  return _internal_id();
}
inline void CMsgMatchMetaDataContents_CustomUserStatInfo::_internal_set_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.id_ = value;
}
inline void CMsgMatchMetaDataContents_CustomUserStatInfo::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.CustomUserStatInfo.id)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_CustomUserStat

// optional uint32 value = 2;
inline bool CMsgMatchMetaDataContents_CustomUserStat::_internal_has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_CustomUserStat::has_value() const {
  return _internal_has_value();
}
inline void CMsgMatchMetaDataContents_CustomUserStat::clear_value() {
  _impl_.value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_CustomUserStat::_internal_value() const {
  return _impl_.value_;
}
inline uint32_t CMsgMatchMetaDataContents_CustomUserStat::value() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.CustomUserStat.value)
  return _internal_value();
}
inline void CMsgMatchMetaDataContents_CustomUserStat::_internal_set_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.value_ = value;
}
inline void CMsgMatchMetaDataContents_CustomUserStat::set_value(uint32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.CustomUserStat.value)
}

// optional uint32 id = 3;
inline bool CMsgMatchMetaDataContents_CustomUserStat::_internal_has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_CustomUserStat::has_id() const {
  return _internal_has_id();
}
inline void CMsgMatchMetaDataContents_CustomUserStat::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_CustomUserStat::_internal_id() const {
  return _impl_.id_;
}
inline uint32_t CMsgMatchMetaDataContents_CustomUserStat::id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.CustomUserStat.id)
  return _internal_id();
}
inline void CMsgMatchMetaDataContents_CustomUserStat::_internal_set_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.id_ = value;
}
inline void CMsgMatchMetaDataContents_CustomUserStat::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.CustomUserStat.id)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_PlayerStats

// optional uint32 time_stamp_s = 1;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_time_stamp_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_time_stamp_s() const {
  return _internal_has_time_stamp_s();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_time_stamp_s() {
  _impl_.time_stamp_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_time_stamp_s() const {
  return _impl_.time_stamp_s_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::time_stamp_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.time_stamp_s)
  return _internal_time_stamp_s();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_time_stamp_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.time_stamp_s_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_time_stamp_s(uint32_t value) {
  _internal_set_time_stamp_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.time_stamp_s)
}

// optional uint32 net_worth = 2;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_net_worth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_net_worth() const {
  return _internal_has_net_worth();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_net_worth() {
  _impl_.net_worth_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_net_worth() const {
  return _impl_.net_worth_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::net_worth() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.net_worth)
  return _internal_net_worth();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_net_worth(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.net_worth_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_net_worth(uint32_t value) {
  _internal_set_net_worth(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.net_worth)
}

// optional uint32 gold_player = 3;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_player() const {
  return _internal_has_gold_player();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_player() {
  _impl_.gold_player_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_player() const {
  return _impl_.gold_player_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_player() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_player)
  return _internal_gold_player();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_player(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.gold_player_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_player(uint32_t value) {
  _internal_set_gold_player(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_player)
}

// optional uint32 gold_player_orbs = 4;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_player_orbs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_player_orbs() const {
  return _internal_has_gold_player_orbs();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_player_orbs() {
  _impl_.gold_player_orbs_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_player_orbs() const {
  return _impl_.gold_player_orbs_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_player_orbs() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_player_orbs)
  return _internal_gold_player_orbs();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_player_orbs(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.gold_player_orbs_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_player_orbs(uint32_t value) {
  _internal_set_gold_player_orbs(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_player_orbs)
}

// optional uint32 gold_lane_creep_orbs = 5;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_lane_creep_orbs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_lane_creep_orbs() const {
  return _internal_has_gold_lane_creep_orbs();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_lane_creep_orbs() {
  _impl_.gold_lane_creep_orbs_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_lane_creep_orbs() const {
  return _impl_.gold_lane_creep_orbs_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_lane_creep_orbs() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_lane_creep_orbs)
  return _internal_gold_lane_creep_orbs();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_lane_creep_orbs(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.gold_lane_creep_orbs_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_lane_creep_orbs(uint32_t value) {
  _internal_set_gold_lane_creep_orbs(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_lane_creep_orbs)
}

// optional uint32 gold_neutral_creep_orbs = 6;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_neutral_creep_orbs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_neutral_creep_orbs() const {
  return _internal_has_gold_neutral_creep_orbs();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_neutral_creep_orbs() {
  _impl_.gold_neutral_creep_orbs_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_neutral_creep_orbs() const {
  return _impl_.gold_neutral_creep_orbs_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_neutral_creep_orbs() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_neutral_creep_orbs)
  return _internal_gold_neutral_creep_orbs();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_neutral_creep_orbs(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.gold_neutral_creep_orbs_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_neutral_creep_orbs(uint32_t value) {
  _internal_set_gold_neutral_creep_orbs(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_neutral_creep_orbs)
}

// optional uint32 gold_boss = 7;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_boss() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_boss() const {
  return _internal_has_gold_boss();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_boss() {
  _impl_.gold_boss_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_boss() const {
  return _impl_.gold_boss_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_boss() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_boss)
  return _internal_gold_boss();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_boss(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.gold_boss_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_boss(uint32_t value) {
  _internal_set_gold_boss(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_boss)
}

// optional uint32 gold_boss_orb = 8;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_boss_orb() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_boss_orb() const {
  return _internal_has_gold_boss_orb();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_boss_orb() {
  _impl_.gold_boss_orb_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_boss_orb() const {
  return _impl_.gold_boss_orb_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_boss_orb() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_boss_orb)
  return _internal_gold_boss_orb();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_boss_orb(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.gold_boss_orb_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_boss_orb(uint32_t value) {
  _internal_set_gold_boss_orb(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_boss_orb)
}

// optional uint32 gold_treasure = 9;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_treasure() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_treasure() const {
  return _internal_has_gold_treasure();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_treasure() {
  _impl_.gold_treasure_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_treasure() const {
  return _impl_.gold_treasure_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_treasure() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_treasure)
  return _internal_gold_treasure();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_treasure(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.gold_treasure_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_treasure(uint32_t value) {
  _internal_set_gold_treasure(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_treasure)
}

// optional uint32 gold_denied = 10;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_denied() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_denied() const {
  return _internal_has_gold_denied();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_denied() {
  _impl_.gold_denied_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_denied() const {
  return _impl_.gold_denied_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_denied() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_denied)
  return _internal_gold_denied();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_denied(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.gold_denied_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_denied(uint32_t value) {
  _internal_set_gold_denied(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_denied)
}

// optional uint32 gold_death_loss = 11;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_death_loss() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_death_loss() const {
  return _internal_has_gold_death_loss();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_death_loss() {
  _impl_.gold_death_loss_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_death_loss() const {
  return _impl_.gold_death_loss_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_death_loss() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_death_loss)
  return _internal_gold_death_loss();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_death_loss(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.gold_death_loss_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_death_loss(uint32_t value) {
  _internal_set_gold_death_loss(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_death_loss)
}

// optional uint32 gold_lane_creep = 12;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_lane_creep() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_lane_creep() const {
  return _internal_has_gold_lane_creep();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_lane_creep() {
  _impl_.gold_lane_creep_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_lane_creep() const {
  return _impl_.gold_lane_creep_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_lane_creep() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_lane_creep)
  return _internal_gold_lane_creep();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_lane_creep(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.gold_lane_creep_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_lane_creep(uint32_t value) {
  _internal_set_gold_lane_creep(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_lane_creep)
}

// optional uint32 gold_neutral_creep = 13;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_gold_neutral_creep() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_gold_neutral_creep() const {
  return _internal_has_gold_neutral_creep();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_neutral_creep() {
  _impl_.gold_neutral_creep_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_gold_neutral_creep() const {
  return _impl_.gold_neutral_creep_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::gold_neutral_creep() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_neutral_creep)
  return _internal_gold_neutral_creep();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_gold_neutral_creep(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.gold_neutral_creep_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_gold_neutral_creep(uint32_t value) {
  _internal_set_gold_neutral_creep(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.gold_neutral_creep)
}

// optional uint32 kills = 14;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_kills() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_kills() const {
  return _internal_has_kills();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_kills() {
  _impl_.kills_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_kills() const {
  return _impl_.kills_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::kills() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.kills)
  return _internal_kills();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_kills(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.kills_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_kills(uint32_t value) {
  _internal_set_kills(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.kills)
}

// optional uint32 deaths = 15;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_deaths() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_deaths() const {
  return _internal_has_deaths();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_deaths() {
  _impl_.deaths_ = 0u;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_deaths() const {
  return _impl_.deaths_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.deaths)
  return _internal_deaths();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_deaths(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.deaths_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_deaths(uint32_t value) {
  _internal_set_deaths(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.deaths)
}

// optional uint32 assists = 16;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_assists() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_assists() const {
  return _internal_has_assists();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_assists() {
  _impl_.assists_ = 0u;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_assists() const {
  return _impl_.assists_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::assists() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.assists)
  return _internal_assists();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_assists(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.assists_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_assists(uint32_t value) {
  _internal_set_assists(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.assists)
}

// optional uint32 creep_kills = 17;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_creep_kills() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_creep_kills() const {
  return _internal_has_creep_kills();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_creep_kills() {
  _impl_.creep_kills_ = 0u;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_creep_kills() const {
  return _impl_.creep_kills_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::creep_kills() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.creep_kills)
  return _internal_creep_kills();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_creep_kills(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.creep_kills_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_creep_kills(uint32_t value) {
  _internal_set_creep_kills(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.creep_kills)
}

// optional uint32 neutral_kills = 18;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_neutral_kills() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_neutral_kills() const {
  return _internal_has_neutral_kills();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_neutral_kills() {
  _impl_.neutral_kills_ = 0u;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_neutral_kills() const {
  return _impl_.neutral_kills_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::neutral_kills() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.neutral_kills)
  return _internal_neutral_kills();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_neutral_kills(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.neutral_kills_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_neutral_kills(uint32_t value) {
  _internal_set_neutral_kills(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.neutral_kills)
}

// optional uint32 possible_creeps = 19;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_possible_creeps() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_possible_creeps() const {
  return _internal_has_possible_creeps();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_possible_creeps() {
  _impl_.possible_creeps_ = 0u;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_possible_creeps() const {
  return _impl_.possible_creeps_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::possible_creeps() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.possible_creeps)
  return _internal_possible_creeps();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_possible_creeps(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00040000u;
  _impl_.possible_creeps_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_possible_creeps(uint32_t value) {
  _internal_set_possible_creeps(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.possible_creeps)
}

// optional uint32 creep_damage = 20;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_creep_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_creep_damage() const {
  return _internal_has_creep_damage();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_creep_damage() {
  _impl_.creep_damage_ = 0u;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_creep_damage() const {
  return _impl_.creep_damage_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::creep_damage() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.creep_damage)
  return _internal_creep_damage();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_creep_damage(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00080000u;
  _impl_.creep_damage_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_creep_damage(uint32_t value) {
  _internal_set_creep_damage(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.creep_damage)
}

// optional uint32 player_damage = 21;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_player_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_player_damage() const {
  return _internal_has_player_damage();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_player_damage() {
  _impl_.player_damage_ = 0u;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_player_damage() const {
  return _impl_.player_damage_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::player_damage() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.player_damage)
  return _internal_player_damage();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_player_damage(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00100000u;
  _impl_.player_damage_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_player_damage(uint32_t value) {
  _internal_set_player_damage(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.player_damage)
}

// optional uint32 neutral_damage = 22;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_neutral_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_neutral_damage() const {
  return _internal_has_neutral_damage();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_neutral_damage() {
  _impl_.neutral_damage_ = 0u;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_neutral_damage() const {
  return _impl_.neutral_damage_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::neutral_damage() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.neutral_damage)
  return _internal_neutral_damage();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_neutral_damage(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00200000u;
  _impl_.neutral_damage_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_neutral_damage(uint32_t value) {
  _internal_set_neutral_damage(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.neutral_damage)
}

// optional uint32 boss_damage = 23;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_boss_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_boss_damage() const {
  return _internal_has_boss_damage();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_boss_damage() {
  _impl_.boss_damage_ = 0u;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_boss_damage() const {
  return _impl_.boss_damage_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::boss_damage() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.boss_damage)
  return _internal_boss_damage();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_boss_damage(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00400000u;
  _impl_.boss_damage_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_boss_damage(uint32_t value) {
  _internal_set_boss_damage(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.boss_damage)
}

// optional uint32 denies = 24;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_denies() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_denies() const {
  return _internal_has_denies();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_denies() {
  _impl_.denies_ = 0u;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_denies() const {
  return _impl_.denies_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::denies() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.denies)
  return _internal_denies();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_denies(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00800000u;
  _impl_.denies_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_denies(uint32_t value) {
  _internal_set_denies(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.denies)
}

// optional uint32 player_healing = 25;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_player_healing() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_player_healing() const {
  return _internal_has_player_healing();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_player_healing() {
  _impl_.player_healing_ = 0u;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_player_healing() const {
  return _impl_.player_healing_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::player_healing() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.player_healing)
  return _internal_player_healing();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_player_healing(uint32_t value) {
  _impl_._has_bits_[0] |= 0x01000000u;
  _impl_.player_healing_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_player_healing(uint32_t value) {
  _internal_set_player_healing(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.player_healing)
}

// optional uint32 ability_points = 26;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_ability_points() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_ability_points() const {
  return _internal_has_ability_points();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_ability_points() {
  _impl_.ability_points_ = 0u;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_ability_points() const {
  return _impl_.ability_points_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::ability_points() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.ability_points)
  return _internal_ability_points();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_ability_points(uint32_t value) {
  _impl_._has_bits_[0] |= 0x02000000u;
  _impl_.ability_points_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_ability_points(uint32_t value) {
  _internal_set_ability_points(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.ability_points)
}

// optional uint32 self_healing = 27;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_self_healing() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_self_healing() const {
  return _internal_has_self_healing();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_self_healing() {
  _impl_.self_healing_ = 0u;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_self_healing() const {
  return _impl_.self_healing_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::self_healing() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.self_healing)
  return _internal_self_healing();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_self_healing(uint32_t value) {
  _impl_._has_bits_[0] |= 0x04000000u;
  _impl_.self_healing_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_self_healing(uint32_t value) {
  _internal_set_self_healing(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.self_healing)
}

// optional uint32 player_damage_taken = 28;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_player_damage_taken() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_player_damage_taken() const {
  return _internal_has_player_damage_taken();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_player_damage_taken() {
  _impl_.player_damage_taken_ = 0u;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_player_damage_taken() const {
  return _impl_.player_damage_taken_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::player_damage_taken() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.player_damage_taken)
  return _internal_player_damage_taken();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_player_damage_taken(uint32_t value) {
  _impl_._has_bits_[0] |= 0x08000000u;
  _impl_.player_damage_taken_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_player_damage_taken(uint32_t value) {
  _internal_set_player_damage_taken(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.player_damage_taken)
}

// optional uint32 max_health = 29;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_max_health() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_max_health() const {
  return _internal_has_max_health();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_max_health() {
  _impl_.max_health_ = 0u;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_max_health() const {
  return _impl_.max_health_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::max_health() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.max_health)
  return _internal_max_health();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_max_health(uint32_t value) {
  _impl_._has_bits_[0] |= 0x10000000u;
  _impl_.max_health_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_max_health(uint32_t value) {
  _internal_set_max_health(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.max_health)
}

// optional uint32 weapon_power = 30;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_weapon_power() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_weapon_power() const {
  return _internal_has_weapon_power();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_weapon_power() {
  _impl_.weapon_power_ = 0u;
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_weapon_power() const {
  return _impl_.weapon_power_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::weapon_power() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.weapon_power)
  return _internal_weapon_power();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_weapon_power(uint32_t value) {
  _impl_._has_bits_[0] |= 0x20000000u;
  _impl_.weapon_power_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_weapon_power(uint32_t value) {
  _internal_set_weapon_power(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.weapon_power)
}

// optional uint32 tech_power = 31;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_tech_power() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_tech_power() const {
  return _internal_has_tech_power();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_tech_power() {
  _impl_.tech_power_ = 0u;
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_tech_power() const {
  return _impl_.tech_power_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::tech_power() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.tech_power)
  return _internal_tech_power();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_tech_power(uint32_t value) {
  _impl_._has_bits_[0] |= 0x40000000u;
  _impl_.tech_power_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_tech_power(uint32_t value) {
  _internal_set_tech_power(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.tech_power)
}

// optional uint32 shots_hit = 32;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_shots_hit() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_shots_hit() const {
  return _internal_has_shots_hit();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_shots_hit() {
  _impl_.shots_hit_ = 0u;
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_shots_hit() const {
  return _impl_.shots_hit_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::shots_hit() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.shots_hit)
  return _internal_shots_hit();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_shots_hit(uint32_t value) {
  _impl_._has_bits_[0] |= 0x80000000u;
  _impl_.shots_hit_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_shots_hit(uint32_t value) {
  _internal_set_shots_hit(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.shots_hit)
}

// optional uint32 shots_missed = 33;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_shots_missed() const {
  bool value = (_impl_._has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_shots_missed() const {
  return _internal_has_shots_missed();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_shots_missed() {
  _impl_.shots_missed_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_shots_missed() const {
  return _impl_.shots_missed_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::shots_missed() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.shots_missed)
  return _internal_shots_missed();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_shots_missed(uint32_t value) {
  _impl_._has_bits_[1] |= 0x00000001u;
  _impl_.shots_missed_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_shots_missed(uint32_t value) {
  _internal_set_shots_missed(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.shots_missed)
}

// optional uint32 damage_absorbed = 34;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_damage_absorbed() const {
  bool value = (_impl_._has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_damage_absorbed() const {
  return _internal_has_damage_absorbed();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_damage_absorbed() {
  _impl_.damage_absorbed_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_damage_absorbed() const {
  return _impl_.damage_absorbed_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::damage_absorbed() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.damage_absorbed)
  return _internal_damage_absorbed();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_damage_absorbed(uint32_t value) {
  _impl_._has_bits_[1] |= 0x00000002u;
  _impl_.damage_absorbed_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_damage_absorbed(uint32_t value) {
  _internal_set_damage_absorbed(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.damage_absorbed)
}

// optional uint32 absorption_provided = 35;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_absorption_provided() const {
  bool value = (_impl_._has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_absorption_provided() const {
  return _internal_has_absorption_provided();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_absorption_provided() {
  _impl_.absorption_provided_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_absorption_provided() const {
  return _impl_.absorption_provided_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::absorption_provided() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.absorption_provided)
  return _internal_absorption_provided();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_absorption_provided(uint32_t value) {
  _impl_._has_bits_[1] |= 0x00000004u;
  _impl_.absorption_provided_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_absorption_provided(uint32_t value) {
  _internal_set_absorption_provided(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.absorption_provided)
}

// optional uint32 hero_bullets_hit = 36;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_hero_bullets_hit() const {
  bool value = (_impl_._has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_hero_bullets_hit() const {
  return _internal_has_hero_bullets_hit();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_hero_bullets_hit() {
  _impl_.hero_bullets_hit_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000008u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_hero_bullets_hit() const {
  return _impl_.hero_bullets_hit_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::hero_bullets_hit() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.hero_bullets_hit)
  return _internal_hero_bullets_hit();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_hero_bullets_hit(uint32_t value) {
  _impl_._has_bits_[1] |= 0x00000008u;
  _impl_.hero_bullets_hit_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_hero_bullets_hit(uint32_t value) {
  _internal_set_hero_bullets_hit(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.hero_bullets_hit)
}

// optional uint32 hero_bullets_hit_crit = 37;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_hero_bullets_hit_crit() const {
  bool value = (_impl_._has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_hero_bullets_hit_crit() const {
  return _internal_has_hero_bullets_hit_crit();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_hero_bullets_hit_crit() {
  _impl_.hero_bullets_hit_crit_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000010u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_hero_bullets_hit_crit() const {
  return _impl_.hero_bullets_hit_crit_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::hero_bullets_hit_crit() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.hero_bullets_hit_crit)
  return _internal_hero_bullets_hit_crit();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_hero_bullets_hit_crit(uint32_t value) {
  _impl_._has_bits_[1] |= 0x00000010u;
  _impl_.hero_bullets_hit_crit_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_hero_bullets_hit_crit(uint32_t value) {
  _internal_set_hero_bullets_hit_crit(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.hero_bullets_hit_crit)
}

// optional uint32 heal_prevented = 38;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_heal_prevented() const {
  bool value = (_impl_._has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_heal_prevented() const {
  return _internal_has_heal_prevented();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_heal_prevented() {
  _impl_.heal_prevented_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000020u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_heal_prevented() const {
  return _impl_.heal_prevented_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::heal_prevented() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.heal_prevented)
  return _internal_heal_prevented();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_heal_prevented(uint32_t value) {
  _impl_._has_bits_[1] |= 0x00000020u;
  _impl_.heal_prevented_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_heal_prevented(uint32_t value) {
  _internal_set_heal_prevented(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.heal_prevented)
}

// optional uint32 heal_lost = 39;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_heal_lost() const {
  bool value = (_impl_._has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_heal_lost() const {
  return _internal_has_heal_lost();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_heal_lost() {
  _impl_.heal_lost_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000040u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_heal_lost() const {
  return _impl_.heal_lost_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::heal_lost() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.heal_lost)
  return _internal_heal_lost();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_heal_lost(uint32_t value) {
  _impl_._has_bits_[1] |= 0x00000040u;
  _impl_.heal_lost_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_heal_lost(uint32_t value) {
  _internal_set_heal_lost(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.heal_lost)
}

// repeated .CMsgMatchMetaDataContents.GoldSource gold_sources = 40;
inline int CMsgMatchMetaDataContents_PlayerStats::_internal_gold_sources_size() const {
  return _impl_.gold_sources_.size();
}
inline int CMsgMatchMetaDataContents_PlayerStats::gold_sources_size() const {
  return _internal_gold_sources_size();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_gold_sources() {
  _impl_.gold_sources_.Clear();
}
inline ::CMsgMatchMetaDataContents_GoldSource* CMsgMatchMetaDataContents_PlayerStats::mutable_gold_sources(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.PlayerStats.gold_sources)
  return _impl_.gold_sources_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_GoldSource >*
CMsgMatchMetaDataContents_PlayerStats::mutable_gold_sources() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.PlayerStats.gold_sources)
  return &_impl_.gold_sources_;
}
inline const ::CMsgMatchMetaDataContents_GoldSource& CMsgMatchMetaDataContents_PlayerStats::_internal_gold_sources(int index) const {
  return _impl_.gold_sources_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_GoldSource& CMsgMatchMetaDataContents_PlayerStats::gold_sources(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.gold_sources)
  return _internal_gold_sources(index);
}
inline ::CMsgMatchMetaDataContents_GoldSource* CMsgMatchMetaDataContents_PlayerStats::_internal_add_gold_sources() {
  return _impl_.gold_sources_.Add();
}
inline ::CMsgMatchMetaDataContents_GoldSource* CMsgMatchMetaDataContents_PlayerStats::add_gold_sources() {
  ::CMsgMatchMetaDataContents_GoldSource* _add = _internal_add_gold_sources();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.PlayerStats.gold_sources)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_GoldSource >&
CMsgMatchMetaDataContents_PlayerStats::gold_sources() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.PlayerStats.gold_sources)
  return _impl_.gold_sources_;
}

// repeated .CMsgMatchMetaDataContents.CustomUserStat custom_user_stats = 41;
inline int CMsgMatchMetaDataContents_PlayerStats::_internal_custom_user_stats_size() const {
  return _impl_.custom_user_stats_.size();
}
inline int CMsgMatchMetaDataContents_PlayerStats::custom_user_stats_size() const {
  return _internal_custom_user_stats_size();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_custom_user_stats() {
  _impl_.custom_user_stats_.Clear();
}
inline ::CMsgMatchMetaDataContents_CustomUserStat* CMsgMatchMetaDataContents_PlayerStats::mutable_custom_user_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.PlayerStats.custom_user_stats)
  return _impl_.custom_user_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_CustomUserStat >*
CMsgMatchMetaDataContents_PlayerStats::mutable_custom_user_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.PlayerStats.custom_user_stats)
  return &_impl_.custom_user_stats_;
}
inline const ::CMsgMatchMetaDataContents_CustomUserStat& CMsgMatchMetaDataContents_PlayerStats::_internal_custom_user_stats(int index) const {
  return _impl_.custom_user_stats_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_CustomUserStat& CMsgMatchMetaDataContents_PlayerStats::custom_user_stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.custom_user_stats)
  return _internal_custom_user_stats(index);
}
inline ::CMsgMatchMetaDataContents_CustomUserStat* CMsgMatchMetaDataContents_PlayerStats::_internal_add_custom_user_stats() {
  return _impl_.custom_user_stats_.Add();
}
inline ::CMsgMatchMetaDataContents_CustomUserStat* CMsgMatchMetaDataContents_PlayerStats::add_custom_user_stats() {
  ::CMsgMatchMetaDataContents_CustomUserStat* _add = _internal_add_custom_user_stats();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.PlayerStats.custom_user_stats)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_CustomUserStat >&
CMsgMatchMetaDataContents_PlayerStats::custom_user_stats() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.PlayerStats.custom_user_stats)
  return _impl_.custom_user_stats_;
}

// optional uint32 damage_mitigated = 42;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_damage_mitigated() const {
  bool value = (_impl_._has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_damage_mitigated() const {
  return _internal_has_damage_mitigated();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_damage_mitigated() {
  _impl_.damage_mitigated_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000080u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_damage_mitigated() const {
  return _impl_.damage_mitigated_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::damage_mitigated() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.damage_mitigated)
  return _internal_damage_mitigated();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_damage_mitigated(uint32_t value) {
  _impl_._has_bits_[1] |= 0x00000080u;
  _impl_.damage_mitigated_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_damage_mitigated(uint32_t value) {
  _internal_set_damage_mitigated(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.damage_mitigated)
}

// optional uint32 level = 43;
inline bool CMsgMatchMetaDataContents_PlayerStats::_internal_has_level() const {
  bool value = (_impl_._has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_PlayerStats::has_level() const {
  return _internal_has_level();
}
inline void CMsgMatchMetaDataContents_PlayerStats::clear_level() {
  _impl_.level_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000100u;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::_internal_level() const {
  return _impl_.level_;
}
inline uint32_t CMsgMatchMetaDataContents_PlayerStats::level() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.PlayerStats.level)
  return _internal_level();
}
inline void CMsgMatchMetaDataContents_PlayerStats::_internal_set_level(uint32_t value) {
  _impl_._has_bits_[1] |= 0x00000100u;
  _impl_.level_ = value;
}
inline void CMsgMatchMetaDataContents_PlayerStats::set_level(uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.PlayerStats.level)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_AbilityStat

// optional uint32 ability_id = 1;
inline bool CMsgMatchMetaDataContents_AbilityStat::_internal_has_ability_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_AbilityStat::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CMsgMatchMetaDataContents_AbilityStat::clear_ability_id() {
  _impl_.ability_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_AbilityStat::_internal_ability_id() const {
  return _impl_.ability_id_;
}
inline uint32_t CMsgMatchMetaDataContents_AbilityStat::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.AbilityStat.ability_id)
  return _internal_ability_id();
}
inline void CMsgMatchMetaDataContents_AbilityStat::_internal_set_ability_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ability_id_ = value;
}
inline void CMsgMatchMetaDataContents_AbilityStat::set_ability_id(uint32_t value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.AbilityStat.ability_id)
}

// optional uint32 ability_value = 2;
inline bool CMsgMatchMetaDataContents_AbilityStat::_internal_has_ability_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_AbilityStat::has_ability_value() const {
  return _internal_has_ability_value();
}
inline void CMsgMatchMetaDataContents_AbilityStat::clear_ability_value() {
  _impl_.ability_value_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_AbilityStat::_internal_ability_value() const {
  return _impl_.ability_value_;
}
inline uint32_t CMsgMatchMetaDataContents_AbilityStat::ability_value() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.AbilityStat.ability_value)
  return _internal_ability_value();
}
inline void CMsgMatchMetaDataContents_AbilityStat::_internal_set_ability_value(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ability_value_ = value;
}
inline void CMsgMatchMetaDataContents_AbilityStat::set_ability_value(uint32_t value) {
  _internal_set_ability_value(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.AbilityStat.ability_value)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_BookReward

// optional uint32 book_id = 1;
inline bool CMsgMatchMetaDataContents_BookReward::_internal_has_book_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_BookReward::has_book_id() const {
  return _internal_has_book_id();
}
inline void CMsgMatchMetaDataContents_BookReward::clear_book_id() {
  _impl_.book_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_BookReward::_internal_book_id() const {
  return _impl_.book_id_;
}
inline uint32_t CMsgMatchMetaDataContents_BookReward::book_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.BookReward.book_id)
  return _internal_book_id();
}
inline void CMsgMatchMetaDataContents_BookReward::_internal_set_book_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.book_id_ = value;
}
inline void CMsgMatchMetaDataContents_BookReward::set_book_id(uint32_t value) {
  _internal_set_book_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.BookReward.book_id)
}

// optional uint32 xp_amount = 2;
inline bool CMsgMatchMetaDataContents_BookReward::_internal_has_xp_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_BookReward::has_xp_amount() const {
  return _internal_has_xp_amount();
}
inline void CMsgMatchMetaDataContents_BookReward::clear_xp_amount() {
  _impl_.xp_amount_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_BookReward::_internal_xp_amount() const {
  return _impl_.xp_amount_;
}
inline uint32_t CMsgMatchMetaDataContents_BookReward::xp_amount() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.BookReward.xp_amount)
  return _internal_xp_amount();
}
inline void CMsgMatchMetaDataContents_BookReward::_internal_set_xp_amount(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.xp_amount_ = value;
}
inline void CMsgMatchMetaDataContents_BookReward::set_xp_amount(uint32_t value) {
  _internal_set_xp_amount(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.BookReward.xp_amount)
}

// optional uint32 starting_xp = 3;
inline bool CMsgMatchMetaDataContents_BookReward::_internal_has_starting_xp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_BookReward::has_starting_xp() const {
  return _internal_has_starting_xp();
}
inline void CMsgMatchMetaDataContents_BookReward::clear_starting_xp() {
  _impl_.starting_xp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_BookReward::_internal_starting_xp() const {
  return _impl_.starting_xp_;
}
inline uint32_t CMsgMatchMetaDataContents_BookReward::starting_xp() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.BookReward.starting_xp)
  return _internal_starting_xp();
}
inline void CMsgMatchMetaDataContents_BookReward::_internal_set_starting_xp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.starting_xp_ = value;
}
inline void CMsgMatchMetaDataContents_BookReward::set_starting_xp(uint32_t value) {
  _internal_set_starting_xp(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.BookReward.starting_xp)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_Players

// optional uint32 account_id = 1;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgMatchMetaDataContents_Players::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.account_id)
  return _internal_account_id();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.account_id)
}

// optional uint32 player_slot = 2;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_player_slot() const {
  return _internal_has_player_slot();
}
inline void CMsgMatchMetaDataContents_Players::clear_player_slot() {
  _impl_.player_slot_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_player_slot() const {
  return _impl_.player_slot_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::player_slot() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.player_slot)
  return _internal_player_slot();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_player_slot(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.player_slot_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_player_slot(uint32_t value) {
  _internal_set_player_slot(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.player_slot)
}

// repeated .CMsgMatchMetaDataContents.Deaths death_details = 3;
inline int CMsgMatchMetaDataContents_Players::_internal_death_details_size() const {
  return _impl_.death_details_.size();
}
inline int CMsgMatchMetaDataContents_Players::death_details_size() const {
  return _internal_death_details_size();
}
inline void CMsgMatchMetaDataContents_Players::clear_death_details() {
  _impl_.death_details_.Clear();
}
inline ::CMsgMatchMetaDataContents_Deaths* CMsgMatchMetaDataContents_Players::mutable_death_details(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.Players.death_details)
  return _impl_.death_details_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Deaths >*
CMsgMatchMetaDataContents_Players::mutable_death_details() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.Players.death_details)
  return &_impl_.death_details_;
}
inline const ::CMsgMatchMetaDataContents_Deaths& CMsgMatchMetaDataContents_Players::_internal_death_details(int index) const {
  return _impl_.death_details_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_Deaths& CMsgMatchMetaDataContents_Players::death_details(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.death_details)
  return _internal_death_details(index);
}
inline ::CMsgMatchMetaDataContents_Deaths* CMsgMatchMetaDataContents_Players::_internal_add_death_details() {
  return _impl_.death_details_.Add();
}
inline ::CMsgMatchMetaDataContents_Deaths* CMsgMatchMetaDataContents_Players::add_death_details() {
  ::CMsgMatchMetaDataContents_Deaths* _add = _internal_add_death_details();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.Players.death_details)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Deaths >&
CMsgMatchMetaDataContents_Players::death_details() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.Players.death_details)
  return _impl_.death_details_;
}

// repeated .CMsgMatchMetaDataContents.Items items = 4;
inline int CMsgMatchMetaDataContents_Players::_internal_items_size() const {
  return _impl_.items_.size();
}
inline int CMsgMatchMetaDataContents_Players::items_size() const {
  return _internal_items_size();
}
inline void CMsgMatchMetaDataContents_Players::clear_items() {
  _impl_.items_.Clear();
}
inline ::CMsgMatchMetaDataContents_Items* CMsgMatchMetaDataContents_Players::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.Players.items)
  return _impl_.items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Items >*
CMsgMatchMetaDataContents_Players::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.Players.items)
  return &_impl_.items_;
}
inline const ::CMsgMatchMetaDataContents_Items& CMsgMatchMetaDataContents_Players::_internal_items(int index) const {
  return _impl_.items_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_Items& CMsgMatchMetaDataContents_Players::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.items)
  return _internal_items(index);
}
inline ::CMsgMatchMetaDataContents_Items* CMsgMatchMetaDataContents_Players::_internal_add_items() {
  return _impl_.items_.Add();
}
inline ::CMsgMatchMetaDataContents_Items* CMsgMatchMetaDataContents_Players::add_items() {
  ::CMsgMatchMetaDataContents_Items* _add = _internal_add_items();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.Players.items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Items >&
CMsgMatchMetaDataContents_Players::items() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.Players.items)
  return _impl_.items_;
}

// repeated .CMsgMatchMetaDataContents.PlayerStats stats = 5;
inline int CMsgMatchMetaDataContents_Players::_internal_stats_size() const {
  return _impl_.stats_.size();
}
inline int CMsgMatchMetaDataContents_Players::stats_size() const {
  return _internal_stats_size();
}
inline void CMsgMatchMetaDataContents_Players::clear_stats() {
  _impl_.stats_.Clear();
}
inline ::CMsgMatchMetaDataContents_PlayerStats* CMsgMatchMetaDataContents_Players::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.Players.stats)
  return _impl_.stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_PlayerStats >*
CMsgMatchMetaDataContents_Players::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.Players.stats)
  return &_impl_.stats_;
}
inline const ::CMsgMatchMetaDataContents_PlayerStats& CMsgMatchMetaDataContents_Players::_internal_stats(int index) const {
  return _impl_.stats_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_PlayerStats& CMsgMatchMetaDataContents_Players::stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.stats)
  return _internal_stats(index);
}
inline ::CMsgMatchMetaDataContents_PlayerStats* CMsgMatchMetaDataContents_Players::_internal_add_stats() {
  return _impl_.stats_.Add();
}
inline ::CMsgMatchMetaDataContents_PlayerStats* CMsgMatchMetaDataContents_Players::add_stats() {
  ::CMsgMatchMetaDataContents_PlayerStats* _add = _internal_add_stats();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.Players.stats)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_PlayerStats >&
CMsgMatchMetaDataContents_Players::stats() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.Players.stats)
  return _impl_.stats_;
}

// optional .ECitadelLobbyTeam team = 6 [default = k_ECitadelLobbyTeam_Team0];
inline bool CMsgMatchMetaDataContents_Players::_internal_has_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_team() const {
  return _internal_has_team();
}
inline void CMsgMatchMetaDataContents_Players::clear_team() {
  _impl_.team_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::ECitadelLobbyTeam CMsgMatchMetaDataContents_Players::_internal_team() const {
  return static_cast< ::ECitadelLobbyTeam >(_impl_.team_);
}
inline ::ECitadelLobbyTeam CMsgMatchMetaDataContents_Players::team() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.team)
  return _internal_team();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_team(::ECitadelLobbyTeam value) {
  assert(::ECitadelLobbyTeam_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.team_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_team(::ECitadelLobbyTeam value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.team)
}

// optional uint32 kills = 8;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_kills() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_kills() const {
  return _internal_has_kills();
}
inline void CMsgMatchMetaDataContents_Players::clear_kills() {
  _impl_.kills_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_kills() const {
  return _impl_.kills_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::kills() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.kills)
  return _internal_kills();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_kills(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.kills_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_kills(uint32_t value) {
  _internal_set_kills(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.kills)
}

// optional uint32 deaths = 9;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_deaths() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_deaths() const {
  return _internal_has_deaths();
}
inline void CMsgMatchMetaDataContents_Players::clear_deaths() {
  _impl_.deaths_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_deaths() const {
  return _impl_.deaths_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.deaths)
  return _internal_deaths();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_deaths(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.deaths_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_deaths(uint32_t value) {
  _internal_set_deaths(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.deaths)
}

// optional uint32 assists = 10;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_assists() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_assists() const {
  return _internal_has_assists();
}
inline void CMsgMatchMetaDataContents_Players::clear_assists() {
  _impl_.assists_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_assists() const {
  return _impl_.assists_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::assists() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.assists)
  return _internal_assists();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_assists(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.assists_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_assists(uint32_t value) {
  _internal_set_assists(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.assists)
}

// optional uint32 net_worth = 11;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_net_worth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_net_worth() const {
  return _internal_has_net_worth();
}
inline void CMsgMatchMetaDataContents_Players::clear_net_worth() {
  _impl_.net_worth_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_net_worth() const {
  return _impl_.net_worth_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::net_worth() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.net_worth)
  return _internal_net_worth();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_net_worth(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.net_worth_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_net_worth(uint32_t value) {
  _internal_set_net_worth(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.net_worth)
}

// optional uint32 hero_id = 12;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgMatchMetaDataContents_Players::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.hero_id)
  return _internal_hero_id();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.hero_id_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.hero_id)
}

// optional uint32 last_hits = 13;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_last_hits() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_last_hits() const {
  return _internal_has_last_hits();
}
inline void CMsgMatchMetaDataContents_Players::clear_last_hits() {
  _impl_.last_hits_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_last_hits() const {
  return _impl_.last_hits_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::last_hits() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.last_hits)
  return _internal_last_hits();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_last_hits(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.last_hits_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_last_hits(uint32_t value) {
  _internal_set_last_hits(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.last_hits)
}

// optional uint32 denies = 14;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_denies() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_denies() const {
  return _internal_has_denies();
}
inline void CMsgMatchMetaDataContents_Players::clear_denies() {
  _impl_.denies_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_denies() const {
  return _impl_.denies_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::denies() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.denies)
  return _internal_denies();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_denies(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.denies_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_denies(uint32_t value) {
  _internal_set_denies(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.denies)
}

// optional uint32 ability_points = 15;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_ability_points() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_ability_points() const {
  return _internal_has_ability_points();
}
inline void CMsgMatchMetaDataContents_Players::clear_ability_points() {
  _impl_.ability_points_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_ability_points() const {
  return _impl_.ability_points_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::ability_points() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.ability_points)
  return _internal_ability_points();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_ability_points(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.ability_points_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_ability_points(uint32_t value) {
  _internal_set_ability_points(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.ability_points)
}

// optional uint32 party = 16;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_party() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_party() const {
  return _internal_has_party();
}
inline void CMsgMatchMetaDataContents_Players::clear_party() {
  _impl_.party_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_party() const {
  return _impl_.party_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::party() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.party)
  return _internal_party();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_party(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.party_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_party(uint32_t value) {
  _internal_set_party(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.party)
}

// optional uint32 assigned_lane = 17;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_assigned_lane() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_assigned_lane() const {
  return _internal_has_assigned_lane();
}
inline void CMsgMatchMetaDataContents_Players::clear_assigned_lane() {
  _impl_.assigned_lane_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_assigned_lane() const {
  return _impl_.assigned_lane_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::assigned_lane() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.assigned_lane)
  return _internal_assigned_lane();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_assigned_lane(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.assigned_lane_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_assigned_lane(uint32_t value) {
  _internal_set_assigned_lane(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.assigned_lane)
}

// optional uint32 level = 18;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_level() const {
  return _internal_has_level();
}
inline void CMsgMatchMetaDataContents_Players::clear_level() {
  _impl_.level_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_level() const {
  return _impl_.level_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::level() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.level)
  return _internal_level();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_level(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.level_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_level(uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.level)
}

// repeated .CMsgMatchMetaDataContents.Ping pings = 19;
inline int CMsgMatchMetaDataContents_Players::_internal_pings_size() const {
  return _impl_.pings_.size();
}
inline int CMsgMatchMetaDataContents_Players::pings_size() const {
  return _internal_pings_size();
}
inline void CMsgMatchMetaDataContents_Players::clear_pings() {
  _impl_.pings_.Clear();
}
inline ::CMsgMatchMetaDataContents_Ping* CMsgMatchMetaDataContents_Players::mutable_pings(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.Players.pings)
  return _impl_.pings_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Ping >*
CMsgMatchMetaDataContents_Players::mutable_pings() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.Players.pings)
  return &_impl_.pings_;
}
inline const ::CMsgMatchMetaDataContents_Ping& CMsgMatchMetaDataContents_Players::_internal_pings(int index) const {
  return _impl_.pings_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_Ping& CMsgMatchMetaDataContents_Players::pings(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.pings)
  return _internal_pings(index);
}
inline ::CMsgMatchMetaDataContents_Ping* CMsgMatchMetaDataContents_Players::_internal_add_pings() {
  return _impl_.pings_.Add();
}
inline ::CMsgMatchMetaDataContents_Ping* CMsgMatchMetaDataContents_Players::add_pings() {
  ::CMsgMatchMetaDataContents_Ping* _add = _internal_add_pings();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.Players.pings)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Ping >&
CMsgMatchMetaDataContents_Players::pings() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.Players.pings)
  return _impl_.pings_;
}

// repeated .CMsgMatchMetaDataContents.AbilityStat ability_stats = 20;
inline int CMsgMatchMetaDataContents_Players::_internal_ability_stats_size() const {
  return _impl_.ability_stats_.size();
}
inline int CMsgMatchMetaDataContents_Players::ability_stats_size() const {
  return _internal_ability_stats_size();
}
inline void CMsgMatchMetaDataContents_Players::clear_ability_stats() {
  _impl_.ability_stats_.Clear();
}
inline ::CMsgMatchMetaDataContents_AbilityStat* CMsgMatchMetaDataContents_Players::mutable_ability_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.Players.ability_stats)
  return _impl_.ability_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_AbilityStat >*
CMsgMatchMetaDataContents_Players::mutable_ability_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.Players.ability_stats)
  return &_impl_.ability_stats_;
}
inline const ::CMsgMatchMetaDataContents_AbilityStat& CMsgMatchMetaDataContents_Players::_internal_ability_stats(int index) const {
  return _impl_.ability_stats_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_AbilityStat& CMsgMatchMetaDataContents_Players::ability_stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.ability_stats)
  return _internal_ability_stats(index);
}
inline ::CMsgMatchMetaDataContents_AbilityStat* CMsgMatchMetaDataContents_Players::_internal_add_ability_stats() {
  return _impl_.ability_stats_.Add();
}
inline ::CMsgMatchMetaDataContents_AbilityStat* CMsgMatchMetaDataContents_Players::add_ability_stats() {
  ::CMsgMatchMetaDataContents_AbilityStat* _add = _internal_add_ability_stats();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.Players.ability_stats)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_AbilityStat >&
CMsgMatchMetaDataContents_Players::ability_stats() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.Players.ability_stats)
  return _impl_.ability_stats_;
}

// repeated float stats_type_stat = 21 [packed = true];
inline int CMsgMatchMetaDataContents_Players::_internal_stats_type_stat_size() const {
  return _impl_.stats_type_stat_.size();
}
inline int CMsgMatchMetaDataContents_Players::stats_type_stat_size() const {
  return _internal_stats_type_stat_size();
}
inline void CMsgMatchMetaDataContents_Players::clear_stats_type_stat() {
  _impl_.stats_type_stat_.Clear();
}
inline float CMsgMatchMetaDataContents_Players::_internal_stats_type_stat(int index) const {
  return _impl_.stats_type_stat_.Get(index);
}
inline float CMsgMatchMetaDataContents_Players::stats_type_stat(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.stats_type_stat)
  return _internal_stats_type_stat(index);
}
inline void CMsgMatchMetaDataContents_Players::set_stats_type_stat(int index, float value) {
  _impl_.stats_type_stat_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.stats_type_stat)
}
inline void CMsgMatchMetaDataContents_Players::_internal_add_stats_type_stat(float value) {
  _impl_.stats_type_stat_.Add(value);
}
inline void CMsgMatchMetaDataContents_Players::add_stats_type_stat(float value) {
  _internal_add_stats_type_stat(value);
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.Players.stats_type_stat)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
CMsgMatchMetaDataContents_Players::_internal_stats_type_stat() const {
  return _impl_.stats_type_stat_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
CMsgMatchMetaDataContents_Players::stats_type_stat() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.Players.stats_type_stat)
  return _internal_stats_type_stat();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
CMsgMatchMetaDataContents_Players::_internal_mutable_stats_type_stat() {
  return &_impl_.stats_type_stat_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
CMsgMatchMetaDataContents_Players::mutable_stats_type_stat() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.Players.stats_type_stat)
  return _internal_mutable_stats_type_stat();
}

// repeated .CMsgMatchMetaDataContents.BookReward book_rewards = 22;
inline int CMsgMatchMetaDataContents_Players::_internal_book_rewards_size() const {
  return _impl_.book_rewards_.size();
}
inline int CMsgMatchMetaDataContents_Players::book_rewards_size() const {
  return _internal_book_rewards_size();
}
inline void CMsgMatchMetaDataContents_Players::clear_book_rewards() {
  _impl_.book_rewards_.Clear();
}
inline ::CMsgMatchMetaDataContents_BookReward* CMsgMatchMetaDataContents_Players::mutable_book_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.Players.book_rewards)
  return _impl_.book_rewards_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_BookReward >*
CMsgMatchMetaDataContents_Players::mutable_book_rewards() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.Players.book_rewards)
  return &_impl_.book_rewards_;
}
inline const ::CMsgMatchMetaDataContents_BookReward& CMsgMatchMetaDataContents_Players::_internal_book_rewards(int index) const {
  return _impl_.book_rewards_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_BookReward& CMsgMatchMetaDataContents_Players::book_rewards(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.book_rewards)
  return _internal_book_rewards(index);
}
inline ::CMsgMatchMetaDataContents_BookReward* CMsgMatchMetaDataContents_Players::_internal_add_book_rewards() {
  return _impl_.book_rewards_.Add();
}
inline ::CMsgMatchMetaDataContents_BookReward* CMsgMatchMetaDataContents_Players::add_book_rewards() {
  ::CMsgMatchMetaDataContents_BookReward* _add = _internal_add_book_rewards();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.Players.book_rewards)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_BookReward >&
CMsgMatchMetaDataContents_Players::book_rewards() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.Players.book_rewards)
  return _impl_.book_rewards_;
}

// optional uint32 abandon_match_time_s = 23;
inline bool CMsgMatchMetaDataContents_Players::_internal_has_abandon_match_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Players::has_abandon_match_time_s() const {
  return _internal_has_abandon_match_time_s();
}
inline void CMsgMatchMetaDataContents_Players::clear_abandon_match_time_s() {
  _impl_.abandon_match_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline uint32_t CMsgMatchMetaDataContents_Players::_internal_abandon_match_time_s() const {
  return _impl_.abandon_match_time_s_;
}
inline uint32_t CMsgMatchMetaDataContents_Players::abandon_match_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Players.abandon_match_time_s)
  return _internal_abandon_match_time_s();
}
inline void CMsgMatchMetaDataContents_Players::_internal_set_abandon_match_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.abandon_match_time_s_ = value;
}
inline void CMsgMatchMetaDataContents_Players::set_abandon_match_time_s(uint32_t value) {
  _internal_set_abandon_match_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Players.abandon_match_time_s)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_Objective

// optional .ECitadelObjective legacy_objective_id = 1 [default = k_eCitadelObjective_Team0_Core];
inline bool CMsgMatchMetaDataContents_Objective::_internal_has_legacy_objective_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Objective::has_legacy_objective_id() const {
  return _internal_has_legacy_objective_id();
}
inline void CMsgMatchMetaDataContents_Objective::clear_legacy_objective_id() {
  _impl_.legacy_objective_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::ECitadelObjective CMsgMatchMetaDataContents_Objective::_internal_legacy_objective_id() const {
  return static_cast< ::ECitadelObjective >(_impl_.legacy_objective_id_);
}
inline ::ECitadelObjective CMsgMatchMetaDataContents_Objective::legacy_objective_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Objective.legacy_objective_id)
  return _internal_legacy_objective_id();
}
inline void CMsgMatchMetaDataContents_Objective::_internal_set_legacy_objective_id(::ECitadelObjective value) {
  assert(::ECitadelObjective_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.legacy_objective_id_ = value;
}
inline void CMsgMatchMetaDataContents_Objective::set_legacy_objective_id(::ECitadelObjective value) {
  _internal_set_legacy_objective_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Objective.legacy_objective_id)
}

// optional uint32 destroyed_time_s = 2;
inline bool CMsgMatchMetaDataContents_Objective::_internal_has_destroyed_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Objective::has_destroyed_time_s() const {
  return _internal_has_destroyed_time_s();
}
inline void CMsgMatchMetaDataContents_Objective::clear_destroyed_time_s() {
  _impl_.destroyed_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::_internal_destroyed_time_s() const {
  return _impl_.destroyed_time_s_;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::destroyed_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Objective.destroyed_time_s)
  return _internal_destroyed_time_s();
}
inline void CMsgMatchMetaDataContents_Objective::_internal_set_destroyed_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.destroyed_time_s_ = value;
}
inline void CMsgMatchMetaDataContents_Objective::set_destroyed_time_s(uint32_t value) {
  _internal_set_destroyed_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Objective.destroyed_time_s)
}

// optional uint32 creep_damage = 4;
inline bool CMsgMatchMetaDataContents_Objective::_internal_has_creep_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Objective::has_creep_damage() const {
  return _internal_has_creep_damage();
}
inline void CMsgMatchMetaDataContents_Objective::clear_creep_damage() {
  _impl_.creep_damage_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::_internal_creep_damage() const {
  return _impl_.creep_damage_;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::creep_damage() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Objective.creep_damage)
  return _internal_creep_damage();
}
inline void CMsgMatchMetaDataContents_Objective::_internal_set_creep_damage(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.creep_damage_ = value;
}
inline void CMsgMatchMetaDataContents_Objective::set_creep_damage(uint32_t value) {
  _internal_set_creep_damage(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Objective.creep_damage)
}

// optional uint32 creep_damage_mitigated = 5;
inline bool CMsgMatchMetaDataContents_Objective::_internal_has_creep_damage_mitigated() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Objective::has_creep_damage_mitigated() const {
  return _internal_has_creep_damage_mitigated();
}
inline void CMsgMatchMetaDataContents_Objective::clear_creep_damage_mitigated() {
  _impl_.creep_damage_mitigated_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::_internal_creep_damage_mitigated() const {
  return _impl_.creep_damage_mitigated_;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::creep_damage_mitigated() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Objective.creep_damage_mitigated)
  return _internal_creep_damage_mitigated();
}
inline void CMsgMatchMetaDataContents_Objective::_internal_set_creep_damage_mitigated(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.creep_damage_mitigated_ = value;
}
inline void CMsgMatchMetaDataContents_Objective::set_creep_damage_mitigated(uint32_t value) {
  _internal_set_creep_damage_mitigated(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Objective.creep_damage_mitigated)
}

// optional uint32 player_damage = 6;
inline bool CMsgMatchMetaDataContents_Objective::_internal_has_player_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Objective::has_player_damage() const {
  return _internal_has_player_damage();
}
inline void CMsgMatchMetaDataContents_Objective::clear_player_damage() {
  _impl_.player_damage_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::_internal_player_damage() const {
  return _impl_.player_damage_;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::player_damage() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Objective.player_damage)
  return _internal_player_damage();
}
inline void CMsgMatchMetaDataContents_Objective::_internal_set_player_damage(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.player_damage_ = value;
}
inline void CMsgMatchMetaDataContents_Objective::set_player_damage(uint32_t value) {
  _internal_set_player_damage(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Objective.player_damage)
}

// optional uint32 player_damage_mitigated = 7;
inline bool CMsgMatchMetaDataContents_Objective::_internal_has_player_damage_mitigated() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Objective::has_player_damage_mitigated() const {
  return _internal_has_player_damage_mitigated();
}
inline void CMsgMatchMetaDataContents_Objective::clear_player_damage_mitigated() {
  _impl_.player_damage_mitigated_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::_internal_player_damage_mitigated() const {
  return _impl_.player_damage_mitigated_;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::player_damage_mitigated() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Objective.player_damage_mitigated)
  return _internal_player_damage_mitigated();
}
inline void CMsgMatchMetaDataContents_Objective::_internal_set_player_damage_mitigated(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.player_damage_mitigated_ = value;
}
inline void CMsgMatchMetaDataContents_Objective::set_player_damage_mitigated(uint32_t value) {
  _internal_set_player_damage_mitigated(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Objective.player_damage_mitigated)
}

// optional uint32 first_damage_time_s = 8;
inline bool CMsgMatchMetaDataContents_Objective::_internal_has_first_damage_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Objective::has_first_damage_time_s() const {
  return _internal_has_first_damage_time_s();
}
inline void CMsgMatchMetaDataContents_Objective::clear_first_damage_time_s() {
  _impl_.first_damage_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::_internal_first_damage_time_s() const {
  return _impl_.first_damage_time_s_;
}
inline uint32_t CMsgMatchMetaDataContents_Objective::first_damage_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Objective.first_damage_time_s)
  return _internal_first_damage_time_s();
}
inline void CMsgMatchMetaDataContents_Objective::_internal_set_first_damage_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.first_damage_time_s_ = value;
}
inline void CMsgMatchMetaDataContents_Objective::set_first_damage_time_s(uint32_t value) {
  _internal_set_first_damage_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Objective.first_damage_time_s)
}

// optional .ECitadelTeamObjective team_objective_id = 9 [default = k_eCitadelTeamObjective_Core];
inline bool CMsgMatchMetaDataContents_Objective::_internal_has_team_objective_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Objective::has_team_objective_id() const {
  return _internal_has_team_objective_id();
}
inline void CMsgMatchMetaDataContents_Objective::clear_team_objective_id() {
  _impl_.team_objective_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::ECitadelTeamObjective CMsgMatchMetaDataContents_Objective::_internal_team_objective_id() const {
  return static_cast< ::ECitadelTeamObjective >(_impl_.team_objective_id_);
}
inline ::ECitadelTeamObjective CMsgMatchMetaDataContents_Objective::team_objective_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Objective.team_objective_id)
  return _internal_team_objective_id();
}
inline void CMsgMatchMetaDataContents_Objective::_internal_set_team_objective_id(::ECitadelTeamObjective value) {
  assert(::ECitadelTeamObjective_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.team_objective_id_ = value;
}
inline void CMsgMatchMetaDataContents_Objective::set_team_objective_id(::ECitadelTeamObjective value) {
  _internal_set_team_objective_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Objective.team_objective_id)
}

// optional .ECitadelLobbyTeam team = 10 [default = k_ECitadelLobbyTeam_Team0];
inline bool CMsgMatchMetaDataContents_Objective::_internal_has_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Objective::has_team() const {
  return _internal_has_team();
}
inline void CMsgMatchMetaDataContents_Objective::clear_team() {
  _impl_.team_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::ECitadelLobbyTeam CMsgMatchMetaDataContents_Objective::_internal_team() const {
  return static_cast< ::ECitadelLobbyTeam >(_impl_.team_);
}
inline ::ECitadelLobbyTeam CMsgMatchMetaDataContents_Objective::team() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Objective.team)
  return _internal_team();
}
inline void CMsgMatchMetaDataContents_Objective::_internal_set_team(::ECitadelLobbyTeam value) {
  assert(::ECitadelLobbyTeam_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.team_ = value;
}
inline void CMsgMatchMetaDataContents_Objective::set_team(::ECitadelLobbyTeam value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Objective.team)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_MidBoss

// optional .ECitadelLobbyTeam team_killed = 1 [default = k_ECitadelLobbyTeam_Team0];
inline bool CMsgMatchMetaDataContents_MidBoss::_internal_has_team_killed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MidBoss::has_team_killed() const {
  return _internal_has_team_killed();
}
inline void CMsgMatchMetaDataContents_MidBoss::clear_team_killed() {
  _impl_.team_killed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::ECitadelLobbyTeam CMsgMatchMetaDataContents_MidBoss::_internal_team_killed() const {
  return static_cast< ::ECitadelLobbyTeam >(_impl_.team_killed_);
}
inline ::ECitadelLobbyTeam CMsgMatchMetaDataContents_MidBoss::team_killed() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MidBoss.team_killed)
  return _internal_team_killed();
}
inline void CMsgMatchMetaDataContents_MidBoss::_internal_set_team_killed(::ECitadelLobbyTeam value) {
  assert(::ECitadelLobbyTeam_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.team_killed_ = value;
}
inline void CMsgMatchMetaDataContents_MidBoss::set_team_killed(::ECitadelLobbyTeam value) {
  _internal_set_team_killed(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MidBoss.team_killed)
}

// optional .ECitadelLobbyTeam team_claimed = 2 [default = k_ECitadelLobbyTeam_Team0];
inline bool CMsgMatchMetaDataContents_MidBoss::_internal_has_team_claimed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MidBoss::has_team_claimed() const {
  return _internal_has_team_claimed();
}
inline void CMsgMatchMetaDataContents_MidBoss::clear_team_claimed() {
  _impl_.team_claimed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::ECitadelLobbyTeam CMsgMatchMetaDataContents_MidBoss::_internal_team_claimed() const {
  return static_cast< ::ECitadelLobbyTeam >(_impl_.team_claimed_);
}
inline ::ECitadelLobbyTeam CMsgMatchMetaDataContents_MidBoss::team_claimed() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MidBoss.team_claimed)
  return _internal_team_claimed();
}
inline void CMsgMatchMetaDataContents_MidBoss::_internal_set_team_claimed(::ECitadelLobbyTeam value) {
  assert(::ECitadelLobbyTeam_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.team_claimed_ = value;
}
inline void CMsgMatchMetaDataContents_MidBoss::set_team_claimed(::ECitadelLobbyTeam value) {
  _internal_set_team_claimed(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MidBoss.team_claimed)
}

// optional uint32 destroyed_time_s = 3;
inline bool CMsgMatchMetaDataContents_MidBoss::_internal_has_destroyed_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MidBoss::has_destroyed_time_s() const {
  return _internal_has_destroyed_time_s();
}
inline void CMsgMatchMetaDataContents_MidBoss::clear_destroyed_time_s() {
  _impl_.destroyed_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_MidBoss::_internal_destroyed_time_s() const {
  return _impl_.destroyed_time_s_;
}
inline uint32_t CMsgMatchMetaDataContents_MidBoss::destroyed_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MidBoss.destroyed_time_s)
  return _internal_destroyed_time_s();
}
inline void CMsgMatchMetaDataContents_MidBoss::_internal_set_destroyed_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.destroyed_time_s_ = value;
}
inline void CMsgMatchMetaDataContents_MidBoss::set_destroyed_time_s(uint32_t value) {
  _internal_set_destroyed_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MidBoss.destroyed_time_s)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_Pause

// optional uint32 game_time_s = 1;
inline bool CMsgMatchMetaDataContents_Pause::_internal_has_game_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Pause::has_game_time_s() const {
  return _internal_has_game_time_s();
}
inline void CMsgMatchMetaDataContents_Pause::clear_game_time_s() {
  _impl_.game_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_Pause::_internal_game_time_s() const {
  return _impl_.game_time_s_;
}
inline uint32_t CMsgMatchMetaDataContents_Pause::game_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Pause.game_time_s)
  return _internal_game_time_s();
}
inline void CMsgMatchMetaDataContents_Pause::_internal_set_game_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.game_time_s_ = value;
}
inline void CMsgMatchMetaDataContents_Pause::set_game_time_s(uint32_t value) {
  _internal_set_game_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Pause.game_time_s)
}

// optional uint32 pause_duration_s = 2;
inline bool CMsgMatchMetaDataContents_Pause::_internal_has_pause_duration_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Pause::has_pause_duration_s() const {
  return _internal_has_pause_duration_s();
}
inline void CMsgMatchMetaDataContents_Pause::clear_pause_duration_s() {
  _impl_.pause_duration_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_Pause::_internal_pause_duration_s() const {
  return _impl_.pause_duration_s_;
}
inline uint32_t CMsgMatchMetaDataContents_Pause::pause_duration_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Pause.pause_duration_s)
  return _internal_pause_duration_s();
}
inline void CMsgMatchMetaDataContents_Pause::_internal_set_pause_duration_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pause_duration_s_ = value;
}
inline void CMsgMatchMetaDataContents_Pause::set_pause_duration_s(uint32_t value) {
  _internal_set_pause_duration_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Pause.pause_duration_s)
}

// optional uint32 player_slot = 3;
inline bool CMsgMatchMetaDataContents_Pause::_internal_has_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_Pause::has_player_slot() const {
  return _internal_has_player_slot();
}
inline void CMsgMatchMetaDataContents_Pause::clear_player_slot() {
  _impl_.player_slot_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_Pause::_internal_player_slot() const {
  return _impl_.player_slot_;
}
inline uint32_t CMsgMatchMetaDataContents_Pause::player_slot() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.Pause.player_slot)
  return _internal_player_slot();
}
inline void CMsgMatchMetaDataContents_Pause::_internal_set_player_slot(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.player_slot_ = value;
}
inline void CMsgMatchMetaDataContents_Pause::set_player_slot(uint32_t value) {
  _internal_set_player_slot(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.Pause.player_slot)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_WatchedDeathReplay

// optional uint32 game_time_s = 1;
inline bool CMsgMatchMetaDataContents_WatchedDeathReplay::_internal_has_game_time_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_WatchedDeathReplay::has_game_time_s() const {
  return _internal_has_game_time_s();
}
inline void CMsgMatchMetaDataContents_WatchedDeathReplay::clear_game_time_s() {
  _impl_.game_time_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgMatchMetaDataContents_WatchedDeathReplay::_internal_game_time_s() const {
  return _impl_.game_time_s_;
}
inline uint32_t CMsgMatchMetaDataContents_WatchedDeathReplay::game_time_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.WatchedDeathReplay.game_time_s)
  return _internal_game_time_s();
}
inline void CMsgMatchMetaDataContents_WatchedDeathReplay::_internal_set_game_time_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.game_time_s_ = value;
}
inline void CMsgMatchMetaDataContents_WatchedDeathReplay::set_game_time_s(uint32_t value) {
  _internal_set_game_time_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.WatchedDeathReplay.game_time_s)
}

// optional uint32 player_slot = 2;
inline bool CMsgMatchMetaDataContents_WatchedDeathReplay::_internal_has_player_slot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_WatchedDeathReplay::has_player_slot() const {
  return _internal_has_player_slot();
}
inline void CMsgMatchMetaDataContents_WatchedDeathReplay::clear_player_slot() {
  _impl_.player_slot_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgMatchMetaDataContents_WatchedDeathReplay::_internal_player_slot() const {
  return _impl_.player_slot_;
}
inline uint32_t CMsgMatchMetaDataContents_WatchedDeathReplay::player_slot() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.WatchedDeathReplay.player_slot)
  return _internal_player_slot();
}
inline void CMsgMatchMetaDataContents_WatchedDeathReplay::_internal_set_player_slot(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.player_slot_ = value;
}
inline void CMsgMatchMetaDataContents_WatchedDeathReplay::set_player_slot(uint32_t value) {
  _internal_set_player_slot(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.WatchedDeathReplay.player_slot)
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents_MatchInfo

// optional uint32 duration_s = 1;
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_duration_s() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_duration_s() const {
  return _internal_has_duration_s();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_duration_s() {
  _impl_.duration_s_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaDataContents_MatchInfo::_internal_duration_s() const {
  return _impl_.duration_s_;
}
inline uint32_t CMsgMatchMetaDataContents_MatchInfo::duration_s() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.duration_s)
  return _internal_duration_s();
}
inline void CMsgMatchMetaDataContents_MatchInfo::_internal_set_duration_s(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.duration_s_ = value;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_duration_s(uint32_t value) {
  _internal_set_duration_s(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MatchInfo.duration_s)
}

// optional .CMsgMatchMetaDataContents.EMatchOutcome match_outcome = 2 [default = k_eOutcome_TeamWin];
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_match_outcome() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_match_outcome() const {
  return _internal_has_match_outcome();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_match_outcome() {
  _impl_.match_outcome_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::CMsgMatchMetaDataContents_EMatchOutcome CMsgMatchMetaDataContents_MatchInfo::_internal_match_outcome() const {
  return static_cast< ::CMsgMatchMetaDataContents_EMatchOutcome >(_impl_.match_outcome_);
}
inline ::CMsgMatchMetaDataContents_EMatchOutcome CMsgMatchMetaDataContents_MatchInfo::match_outcome() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.match_outcome)
  return _internal_match_outcome();
}
inline void CMsgMatchMetaDataContents_MatchInfo::_internal_set_match_outcome(::CMsgMatchMetaDataContents_EMatchOutcome value) {
  assert(::CMsgMatchMetaDataContents_EMatchOutcome_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.match_outcome_ = value;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_match_outcome(::CMsgMatchMetaDataContents_EMatchOutcome value) {
  _internal_set_match_outcome(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MatchInfo.match_outcome)
}

// optional .ECitadelLobbyTeam winning_team = 3 [default = k_ECitadelLobbyTeam_Team0];
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_winning_team() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_winning_team() const {
  return _internal_has_winning_team();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_winning_team() {
  _impl_.winning_team_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::ECitadelLobbyTeam CMsgMatchMetaDataContents_MatchInfo::_internal_winning_team() const {
  return static_cast< ::ECitadelLobbyTeam >(_impl_.winning_team_);
}
inline ::ECitadelLobbyTeam CMsgMatchMetaDataContents_MatchInfo::winning_team() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.winning_team)
  return _internal_winning_team();
}
inline void CMsgMatchMetaDataContents_MatchInfo::_internal_set_winning_team(::ECitadelLobbyTeam value) {
  assert(::ECitadelLobbyTeam_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.winning_team_ = value;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_winning_team(::ECitadelLobbyTeam value) {
  _internal_set_winning_team(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MatchInfo.winning_team)
}

// repeated .CMsgMatchMetaDataContents.Players players = 4;
inline int CMsgMatchMetaDataContents_MatchInfo::_internal_players_size() const {
  return _impl_.players_.size();
}
inline int CMsgMatchMetaDataContents_MatchInfo::players_size() const {
  return _internal_players_size();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_players() {
  _impl_.players_.Clear();
}
inline ::CMsgMatchMetaDataContents_Players* CMsgMatchMetaDataContents_MatchInfo::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.MatchInfo.players)
  return _impl_.players_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Players >*
CMsgMatchMetaDataContents_MatchInfo::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.MatchInfo.players)
  return &_impl_.players_;
}
inline const ::CMsgMatchMetaDataContents_Players& CMsgMatchMetaDataContents_MatchInfo::_internal_players(int index) const {
  return _impl_.players_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_Players& CMsgMatchMetaDataContents_MatchInfo::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.players)
  return _internal_players(index);
}
inline ::CMsgMatchMetaDataContents_Players* CMsgMatchMetaDataContents_MatchInfo::_internal_add_players() {
  return _impl_.players_.Add();
}
inline ::CMsgMatchMetaDataContents_Players* CMsgMatchMetaDataContents_MatchInfo::add_players() {
  ::CMsgMatchMetaDataContents_Players* _add = _internal_add_players();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.MatchInfo.players)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Players >&
CMsgMatchMetaDataContents_MatchInfo::players() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.MatchInfo.players)
  return _impl_.players_;
}

// optional uint32 start_time = 5;
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_start_time() const {
  return _internal_has_start_time();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_start_time() {
  _impl_.start_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline uint32_t CMsgMatchMetaDataContents_MatchInfo::_internal_start_time() const {
  return _impl_.start_time_;
}
inline uint32_t CMsgMatchMetaDataContents_MatchInfo::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.start_time)
  return _internal_start_time();
}
inline void CMsgMatchMetaDataContents_MatchInfo::_internal_set_start_time(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.start_time_ = value;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_start_time(uint32_t value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MatchInfo.start_time)
}

// optional uint64 match_id = 6;
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline uint64_t CMsgMatchMetaDataContents_MatchInfo::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgMatchMetaDataContents_MatchInfo::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.match_id)
  return _internal_match_id();
}
inline void CMsgMatchMetaDataContents_MatchInfo::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.match_id_ = value;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MatchInfo.match_id)
}

// optional uint32 legacy_objectives_mask = 8;
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_legacy_objectives_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_legacy_objectives_mask() const {
  return _internal_has_legacy_objectives_mask();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_legacy_objectives_mask() {
  _impl_.legacy_objectives_mask_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline uint32_t CMsgMatchMetaDataContents_MatchInfo::_internal_legacy_objectives_mask() const {
  return _impl_.legacy_objectives_mask_;
}
inline uint32_t CMsgMatchMetaDataContents_MatchInfo::legacy_objectives_mask() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.legacy_objectives_mask)
  return _internal_legacy_objectives_mask();
}
inline void CMsgMatchMetaDataContents_MatchInfo::_internal_set_legacy_objectives_mask(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.legacy_objectives_mask_ = value;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_legacy_objectives_mask(uint32_t value) {
  _internal_set_legacy_objectives_mask(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MatchInfo.legacy_objectives_mask)
}

// optional .ECitadelGameMode game_mode = 9 [default = k_ECitadelGameMode_Invalid];
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_game_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_game_mode() const {
  return _internal_has_game_mode();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_game_mode() {
  _impl_.game_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::ECitadelGameMode CMsgMatchMetaDataContents_MatchInfo::_internal_game_mode() const {
  return static_cast< ::ECitadelGameMode >(_impl_.game_mode_);
}
inline ::ECitadelGameMode CMsgMatchMetaDataContents_MatchInfo::game_mode() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.game_mode)
  return _internal_game_mode();
}
inline void CMsgMatchMetaDataContents_MatchInfo::_internal_set_game_mode(::ECitadelGameMode value) {
  assert(::ECitadelGameMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.game_mode_ = value;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_game_mode(::ECitadelGameMode value) {
  _internal_set_game_mode(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MatchInfo.game_mode)
}

// optional .ECitadelMatchMode match_mode = 10 [default = k_ECitadelMatchMode_Invalid];
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_match_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_match_mode() const {
  return _internal_has_match_mode();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_match_mode() {
  _impl_.match_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::ECitadelMatchMode CMsgMatchMetaDataContents_MatchInfo::_internal_match_mode() const {
  return static_cast< ::ECitadelMatchMode >(_impl_.match_mode_);
}
inline ::ECitadelMatchMode CMsgMatchMetaDataContents_MatchInfo::match_mode() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.match_mode)
  return _internal_match_mode();
}
inline void CMsgMatchMetaDataContents_MatchInfo::_internal_set_match_mode(::ECitadelMatchMode value) {
  assert(::ECitadelMatchMode_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.match_mode_ = value;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_match_mode(::ECitadelMatchMode value) {
  _internal_set_match_mode(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MatchInfo.match_mode)
}

// repeated .CMsgMatchMetaDataContents.Objective objectives = 11;
inline int CMsgMatchMetaDataContents_MatchInfo::_internal_objectives_size() const {
  return _impl_.objectives_.size();
}
inline int CMsgMatchMetaDataContents_MatchInfo::objectives_size() const {
  return _internal_objectives_size();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_objectives() {
  _impl_.objectives_.Clear();
}
inline ::CMsgMatchMetaDataContents_Objective* CMsgMatchMetaDataContents_MatchInfo::mutable_objectives(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.MatchInfo.objectives)
  return _impl_.objectives_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Objective >*
CMsgMatchMetaDataContents_MatchInfo::mutable_objectives() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.MatchInfo.objectives)
  return &_impl_.objectives_;
}
inline const ::CMsgMatchMetaDataContents_Objective& CMsgMatchMetaDataContents_MatchInfo::_internal_objectives(int index) const {
  return _impl_.objectives_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_Objective& CMsgMatchMetaDataContents_MatchInfo::objectives(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.objectives)
  return _internal_objectives(index);
}
inline ::CMsgMatchMetaDataContents_Objective* CMsgMatchMetaDataContents_MatchInfo::_internal_add_objectives() {
  return _impl_.objectives_.Add();
}
inline ::CMsgMatchMetaDataContents_Objective* CMsgMatchMetaDataContents_MatchInfo::add_objectives() {
  ::CMsgMatchMetaDataContents_Objective* _add = _internal_add_objectives();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.MatchInfo.objectives)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Objective >&
CMsgMatchMetaDataContents_MatchInfo::objectives() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.MatchInfo.objectives)
  return _impl_.objectives_;
}

// optional .CMsgMatchPlayerPathsData match_paths = 12;
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_match_paths() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.match_paths_ != nullptr);
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_match_paths() const {
  return _internal_has_match_paths();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_match_paths() {
  if (_impl_.match_paths_ != nullptr) _impl_.match_paths_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgMatchPlayerPathsData& CMsgMatchMetaDataContents_MatchInfo::_internal_match_paths() const {
  const ::CMsgMatchPlayerPathsData* p = _impl_.match_paths_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgMatchPlayerPathsData&>(
      ::_CMsgMatchPlayerPathsData_default_instance_);
}
inline const ::CMsgMatchPlayerPathsData& CMsgMatchMetaDataContents_MatchInfo::match_paths() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.match_paths)
  return _internal_match_paths();
}
inline void CMsgMatchMetaDataContents_MatchInfo::unsafe_arena_set_allocated_match_paths(
    ::CMsgMatchPlayerPathsData* match_paths) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.match_paths_);
  }
  _impl_.match_paths_ = match_paths;
  if (match_paths) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgMatchMetaDataContents.MatchInfo.match_paths)
}
inline ::CMsgMatchPlayerPathsData* CMsgMatchMetaDataContents_MatchInfo::release_match_paths() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgMatchPlayerPathsData* temp = _impl_.match_paths_;
  _impl_.match_paths_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgMatchPlayerPathsData* CMsgMatchMetaDataContents_MatchInfo::unsafe_arena_release_match_paths() {
  // @@protoc_insertion_point(field_release:CMsgMatchMetaDataContents.MatchInfo.match_paths)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgMatchPlayerPathsData* temp = _impl_.match_paths_;
  _impl_.match_paths_ = nullptr;
  return temp;
}
inline ::CMsgMatchPlayerPathsData* CMsgMatchMetaDataContents_MatchInfo::_internal_mutable_match_paths() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.match_paths_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgMatchPlayerPathsData>(GetArenaForAllocation());
    _impl_.match_paths_ = p;
  }
  return _impl_.match_paths_;
}
inline ::CMsgMatchPlayerPathsData* CMsgMatchMetaDataContents_MatchInfo::mutable_match_paths() {
  ::CMsgMatchPlayerPathsData* _msg = _internal_mutable_match_paths();
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.MatchInfo.match_paths)
  return _msg;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_allocated_match_paths(::CMsgMatchPlayerPathsData* match_paths) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.match_paths_;
  }
  if (match_paths) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(match_paths);
    if (message_arena != submessage_arena) {
      match_paths = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, match_paths, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.match_paths_ = match_paths;
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchMetaDataContents.MatchInfo.match_paths)
}

// optional .CMsgMatchPlayerDamageMatrix damage_matrix = 13;
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_damage_matrix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.damage_matrix_ != nullptr);
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_damage_matrix() const {
  return _internal_has_damage_matrix();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_damage_matrix() {
  if (_impl_.damage_matrix_ != nullptr) _impl_.damage_matrix_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgMatchPlayerDamageMatrix& CMsgMatchMetaDataContents_MatchInfo::_internal_damage_matrix() const {
  const ::CMsgMatchPlayerDamageMatrix* p = _impl_.damage_matrix_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgMatchPlayerDamageMatrix&>(
      ::_CMsgMatchPlayerDamageMatrix_default_instance_);
}
inline const ::CMsgMatchPlayerDamageMatrix& CMsgMatchMetaDataContents_MatchInfo::damage_matrix() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.damage_matrix)
  return _internal_damage_matrix();
}
inline void CMsgMatchMetaDataContents_MatchInfo::unsafe_arena_set_allocated_damage_matrix(
    ::CMsgMatchPlayerDamageMatrix* damage_matrix) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.damage_matrix_);
  }
  _impl_.damage_matrix_ = damage_matrix;
  if (damage_matrix) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgMatchMetaDataContents.MatchInfo.damage_matrix)
}
inline ::CMsgMatchPlayerDamageMatrix* CMsgMatchMetaDataContents_MatchInfo::release_damage_matrix() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgMatchPlayerDamageMatrix* temp = _impl_.damage_matrix_;
  _impl_.damage_matrix_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgMatchPlayerDamageMatrix* CMsgMatchMetaDataContents_MatchInfo::unsafe_arena_release_damage_matrix() {
  // @@protoc_insertion_point(field_release:CMsgMatchMetaDataContents.MatchInfo.damage_matrix)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgMatchPlayerDamageMatrix* temp = _impl_.damage_matrix_;
  _impl_.damage_matrix_ = nullptr;
  return temp;
}
inline ::CMsgMatchPlayerDamageMatrix* CMsgMatchMetaDataContents_MatchInfo::_internal_mutable_damage_matrix() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.damage_matrix_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgMatchPlayerDamageMatrix>(GetArenaForAllocation());
    _impl_.damage_matrix_ = p;
  }
  return _impl_.damage_matrix_;
}
inline ::CMsgMatchPlayerDamageMatrix* CMsgMatchMetaDataContents_MatchInfo::mutable_damage_matrix() {
  ::CMsgMatchPlayerDamageMatrix* _msg = _internal_mutable_damage_matrix();
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.MatchInfo.damage_matrix)
  return _msg;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_allocated_damage_matrix(::CMsgMatchPlayerDamageMatrix* damage_matrix) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.damage_matrix_;
  }
  if (damage_matrix) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(damage_matrix);
    if (message_arena != submessage_arena) {
      damage_matrix = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, damage_matrix, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.damage_matrix_ = damage_matrix;
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchMetaDataContents.MatchInfo.damage_matrix)
}

// repeated .CMsgMatchMetaDataContents.Pause match_pauses = 14;
inline int CMsgMatchMetaDataContents_MatchInfo::_internal_match_pauses_size() const {
  return _impl_.match_pauses_.size();
}
inline int CMsgMatchMetaDataContents_MatchInfo::match_pauses_size() const {
  return _internal_match_pauses_size();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_match_pauses() {
  _impl_.match_pauses_.Clear();
}
inline ::CMsgMatchMetaDataContents_Pause* CMsgMatchMetaDataContents_MatchInfo::mutable_match_pauses(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.MatchInfo.match_pauses)
  return _impl_.match_pauses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Pause >*
CMsgMatchMetaDataContents_MatchInfo::mutable_match_pauses() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.MatchInfo.match_pauses)
  return &_impl_.match_pauses_;
}
inline const ::CMsgMatchMetaDataContents_Pause& CMsgMatchMetaDataContents_MatchInfo::_internal_match_pauses(int index) const {
  return _impl_.match_pauses_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_Pause& CMsgMatchMetaDataContents_MatchInfo::match_pauses(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.match_pauses)
  return _internal_match_pauses(index);
}
inline ::CMsgMatchMetaDataContents_Pause* CMsgMatchMetaDataContents_MatchInfo::_internal_add_match_pauses() {
  return _impl_.match_pauses_.Add();
}
inline ::CMsgMatchMetaDataContents_Pause* CMsgMatchMetaDataContents_MatchInfo::add_match_pauses() {
  ::CMsgMatchMetaDataContents_Pause* _add = _internal_add_match_pauses();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.MatchInfo.match_pauses)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_Pause >&
CMsgMatchMetaDataContents_MatchInfo::match_pauses() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.MatchInfo.match_pauses)
  return _impl_.match_pauses_;
}

// repeated .CMsgMatchMetaDataContents.CustomUserStatInfo custom_user_stats = 15;
inline int CMsgMatchMetaDataContents_MatchInfo::_internal_custom_user_stats_size() const {
  return _impl_.custom_user_stats_.size();
}
inline int CMsgMatchMetaDataContents_MatchInfo::custom_user_stats_size() const {
  return _internal_custom_user_stats_size();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_custom_user_stats() {
  _impl_.custom_user_stats_.Clear();
}
inline ::CMsgMatchMetaDataContents_CustomUserStatInfo* CMsgMatchMetaDataContents_MatchInfo::mutable_custom_user_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.MatchInfo.custom_user_stats)
  return _impl_.custom_user_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_CustomUserStatInfo >*
CMsgMatchMetaDataContents_MatchInfo::mutable_custom_user_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.MatchInfo.custom_user_stats)
  return &_impl_.custom_user_stats_;
}
inline const ::CMsgMatchMetaDataContents_CustomUserStatInfo& CMsgMatchMetaDataContents_MatchInfo::_internal_custom_user_stats(int index) const {
  return _impl_.custom_user_stats_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_CustomUserStatInfo& CMsgMatchMetaDataContents_MatchInfo::custom_user_stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.custom_user_stats)
  return _internal_custom_user_stats(index);
}
inline ::CMsgMatchMetaDataContents_CustomUserStatInfo* CMsgMatchMetaDataContents_MatchInfo::_internal_add_custom_user_stats() {
  return _impl_.custom_user_stats_.Add();
}
inline ::CMsgMatchMetaDataContents_CustomUserStatInfo* CMsgMatchMetaDataContents_MatchInfo::add_custom_user_stats() {
  ::CMsgMatchMetaDataContents_CustomUserStatInfo* _add = _internal_add_custom_user_stats();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.MatchInfo.custom_user_stats)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_CustomUserStatInfo >&
CMsgMatchMetaDataContents_MatchInfo::custom_user_stats() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.MatchInfo.custom_user_stats)
  return _impl_.custom_user_stats_;
}

// repeated .CMsgMatchMetaDataContents.WatchedDeathReplay watched_death_replays = 16;
inline int CMsgMatchMetaDataContents_MatchInfo::_internal_watched_death_replays_size() const {
  return _impl_.watched_death_replays_.size();
}
inline int CMsgMatchMetaDataContents_MatchInfo::watched_death_replays_size() const {
  return _internal_watched_death_replays_size();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_watched_death_replays() {
  _impl_.watched_death_replays_.Clear();
}
inline ::CMsgMatchMetaDataContents_WatchedDeathReplay* CMsgMatchMetaDataContents_MatchInfo::mutable_watched_death_replays(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.MatchInfo.watched_death_replays)
  return _impl_.watched_death_replays_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_WatchedDeathReplay >*
CMsgMatchMetaDataContents_MatchInfo::mutable_watched_death_replays() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.MatchInfo.watched_death_replays)
  return &_impl_.watched_death_replays_;
}
inline const ::CMsgMatchMetaDataContents_WatchedDeathReplay& CMsgMatchMetaDataContents_MatchInfo::_internal_watched_death_replays(int index) const {
  return _impl_.watched_death_replays_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_WatchedDeathReplay& CMsgMatchMetaDataContents_MatchInfo::watched_death_replays(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.watched_death_replays)
  return _internal_watched_death_replays(index);
}
inline ::CMsgMatchMetaDataContents_WatchedDeathReplay* CMsgMatchMetaDataContents_MatchInfo::_internal_add_watched_death_replays() {
  return _impl_.watched_death_replays_.Add();
}
inline ::CMsgMatchMetaDataContents_WatchedDeathReplay* CMsgMatchMetaDataContents_MatchInfo::add_watched_death_replays() {
  ::CMsgMatchMetaDataContents_WatchedDeathReplay* _add = _internal_add_watched_death_replays();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.MatchInfo.watched_death_replays)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_WatchedDeathReplay >&
CMsgMatchMetaDataContents_MatchInfo::watched_death_replays() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.MatchInfo.watched_death_replays)
  return _impl_.watched_death_replays_;
}

// optional uint64 objectives_mask_team0 = 17;
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_objectives_mask_team0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_objectives_mask_team0() const {
  return _internal_has_objectives_mask_team0();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_objectives_mask_team0() {
  _impl_.objectives_mask_team0_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline uint64_t CMsgMatchMetaDataContents_MatchInfo::_internal_objectives_mask_team0() const {
  return _impl_.objectives_mask_team0_;
}
inline uint64_t CMsgMatchMetaDataContents_MatchInfo::objectives_mask_team0() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.objectives_mask_team0)
  return _internal_objectives_mask_team0();
}
inline void CMsgMatchMetaDataContents_MatchInfo::_internal_set_objectives_mask_team0(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.objectives_mask_team0_ = value;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_objectives_mask_team0(uint64_t value) {
  _internal_set_objectives_mask_team0(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MatchInfo.objectives_mask_team0)
}

// optional uint64 objectives_mask_team1 = 18;
inline bool CMsgMatchMetaDataContents_MatchInfo::_internal_has_objectives_mask_team1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgMatchMetaDataContents_MatchInfo::has_objectives_mask_team1() const {
  return _internal_has_objectives_mask_team1();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_objectives_mask_team1() {
  _impl_.objectives_mask_team1_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline uint64_t CMsgMatchMetaDataContents_MatchInfo::_internal_objectives_mask_team1() const {
  return _impl_.objectives_mask_team1_;
}
inline uint64_t CMsgMatchMetaDataContents_MatchInfo::objectives_mask_team1() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.objectives_mask_team1)
  return _internal_objectives_mask_team1();
}
inline void CMsgMatchMetaDataContents_MatchInfo::_internal_set_objectives_mask_team1(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.objectives_mask_team1_ = value;
}
inline void CMsgMatchMetaDataContents_MatchInfo::set_objectives_mask_team1(uint64_t value) {
  _internal_set_objectives_mask_team1(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaDataContents.MatchInfo.objectives_mask_team1)
}

// repeated .CMsgMatchMetaDataContents.MidBoss mid_boss = 19;
inline int CMsgMatchMetaDataContents_MatchInfo::_internal_mid_boss_size() const {
  return _impl_.mid_boss_.size();
}
inline int CMsgMatchMetaDataContents_MatchInfo::mid_boss_size() const {
  return _internal_mid_boss_size();
}
inline void CMsgMatchMetaDataContents_MatchInfo::clear_mid_boss() {
  _impl_.mid_boss_.Clear();
}
inline ::CMsgMatchMetaDataContents_MidBoss* CMsgMatchMetaDataContents_MatchInfo::mutable_mid_boss(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.MatchInfo.mid_boss)
  return _impl_.mid_boss_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_MidBoss >*
CMsgMatchMetaDataContents_MatchInfo::mutable_mid_boss() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchMetaDataContents.MatchInfo.mid_boss)
  return &_impl_.mid_boss_;
}
inline const ::CMsgMatchMetaDataContents_MidBoss& CMsgMatchMetaDataContents_MatchInfo::_internal_mid_boss(int index) const {
  return _impl_.mid_boss_.Get(index);
}
inline const ::CMsgMatchMetaDataContents_MidBoss& CMsgMatchMetaDataContents_MatchInfo::mid_boss(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.MatchInfo.mid_boss)
  return _internal_mid_boss(index);
}
inline ::CMsgMatchMetaDataContents_MidBoss* CMsgMatchMetaDataContents_MatchInfo::_internal_add_mid_boss() {
  return _impl_.mid_boss_.Add();
}
inline ::CMsgMatchMetaDataContents_MidBoss* CMsgMatchMetaDataContents_MatchInfo::add_mid_boss() {
  ::CMsgMatchMetaDataContents_MidBoss* _add = _internal_add_mid_boss();
  // @@protoc_insertion_point(field_add:CMsgMatchMetaDataContents.MatchInfo.mid_boss)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgMatchMetaDataContents_MidBoss >&
CMsgMatchMetaDataContents_MatchInfo::mid_boss() const {
  // @@protoc_insertion_point(field_list:CMsgMatchMetaDataContents.MatchInfo.mid_boss)
  return _impl_.mid_boss_;
}

// -------------------------------------------------------------------

// CMsgMatchMetaDataContents

// optional .CMsgMatchMetaDataContents.MatchInfo match_info = 2;
inline bool CMsgMatchMetaDataContents::_internal_has_match_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.match_info_ != nullptr);
  return value;
}
inline bool CMsgMatchMetaDataContents::has_match_info() const {
  return _internal_has_match_info();
}
inline void CMsgMatchMetaDataContents::clear_match_info() {
  if (_impl_.match_info_ != nullptr) _impl_.match_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgMatchMetaDataContents_MatchInfo& CMsgMatchMetaDataContents::_internal_match_info() const {
  const ::CMsgMatchMetaDataContents_MatchInfo* p = _impl_.match_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgMatchMetaDataContents_MatchInfo&>(
      ::_CMsgMatchMetaDataContents_MatchInfo_default_instance_);
}
inline const ::CMsgMatchMetaDataContents_MatchInfo& CMsgMatchMetaDataContents::match_info() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaDataContents.match_info)
  return _internal_match_info();
}
inline void CMsgMatchMetaDataContents::unsafe_arena_set_allocated_match_info(
    ::CMsgMatchMetaDataContents_MatchInfo* match_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.match_info_);
  }
  _impl_.match_info_ = match_info;
  if (match_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgMatchMetaDataContents.match_info)
}
inline ::CMsgMatchMetaDataContents_MatchInfo* CMsgMatchMetaDataContents::release_match_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgMatchMetaDataContents_MatchInfo* temp = _impl_.match_info_;
  _impl_.match_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgMatchMetaDataContents_MatchInfo* CMsgMatchMetaDataContents::unsafe_arena_release_match_info() {
  // @@protoc_insertion_point(field_release:CMsgMatchMetaDataContents.match_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgMatchMetaDataContents_MatchInfo* temp = _impl_.match_info_;
  _impl_.match_info_ = nullptr;
  return temp;
}
inline ::CMsgMatchMetaDataContents_MatchInfo* CMsgMatchMetaDataContents::_internal_mutable_match_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.match_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgMatchMetaDataContents_MatchInfo>(GetArenaForAllocation());
    _impl_.match_info_ = p;
  }
  return _impl_.match_info_;
}
inline ::CMsgMatchMetaDataContents_MatchInfo* CMsgMatchMetaDataContents::mutable_match_info() {
  ::CMsgMatchMetaDataContents_MatchInfo* _msg = _internal_mutable_match_info();
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaDataContents.match_info)
  return _msg;
}
inline void CMsgMatchMetaDataContents::set_allocated_match_info(::CMsgMatchMetaDataContents_MatchInfo* match_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.match_info_;
  }
  if (match_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(match_info);
    if (message_arena != submessage_arena) {
      match_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, match_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.match_info_ = match_info;
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchMetaDataContents.match_info)
}

// -------------------------------------------------------------------

// CMsgMatchMetaData

// optional uint32 version = 1;
inline bool CMsgMatchMetaData::_internal_has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMatchMetaData::has_version() const {
  return _internal_has_version();
}
inline void CMsgMatchMetaData::clear_version() {
  _impl_.version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgMatchMetaData::_internal_version() const {
  return _impl_.version_;
}
inline uint32_t CMsgMatchMetaData::version() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaData.version)
  return _internal_version();
}
inline void CMsgMatchMetaData::_internal_set_version(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.version_ = value;
}
inline void CMsgMatchMetaData::set_version(uint32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaData.version)
}

// optional bytes match_details = 2;
inline bool CMsgMatchMetaData::_internal_has_match_details() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMatchMetaData::has_match_details() const {
  return _internal_has_match_details();
}
inline void CMsgMatchMetaData::clear_match_details() {
  _impl_.match_details_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgMatchMetaData::match_details() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaData.match_details)
  return _internal_match_details();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgMatchMetaData::set_match_details(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.match_details_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgMatchMetaData.match_details)
}
inline std::string* CMsgMatchMetaData::mutable_match_details() {
  std::string* _s = _internal_mutable_match_details();
  // @@protoc_insertion_point(field_mutable:CMsgMatchMetaData.match_details)
  return _s;
}
inline const std::string& CMsgMatchMetaData::_internal_match_details() const {
  return _impl_.match_details_.Get();
}
inline void CMsgMatchMetaData::_internal_set_match_details(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.match_details_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgMatchMetaData::_internal_mutable_match_details() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.match_details_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgMatchMetaData::release_match_details() {
  // @@protoc_insertion_point(field_release:CMsgMatchMetaData.match_details)
  if (!_internal_has_match_details()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.match_details_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.match_details_.IsDefault()) {
    _impl_.match_details_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgMatchMetaData::set_allocated_match_details(std::string* match_details) {
  if (match_details != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.match_details_.SetAllocated(match_details, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.match_details_.IsDefault()) {
    _impl_.match_details_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchMetaData.match_details)
}

// optional uint64 match_id = 3;
inline bool CMsgMatchMetaData::_internal_has_match_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMatchMetaData::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgMatchMetaData::clear_match_id() {
  _impl_.match_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgMatchMetaData::_internal_match_id() const {
  return _impl_.match_id_;
}
inline uint64_t CMsgMatchMetaData::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgMatchMetaData.match_id)
  return _internal_match_id();
}
inline void CMsgMatchMetaData::_internal_set_match_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.match_id_ = value;
}
inline void CMsgMatchMetaData::set_match_id(uint64_t value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgMatchMetaData.match_id)
}

// -------------------------------------------------------------------

// CMsgMapLine

// optional int32 x = 1;
inline bool CMsgMapLine::_internal_has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgMapLine::has_x() const {
  return _internal_has_x();
}
inline void CMsgMapLine::clear_x() {
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CMsgMapLine::_internal_x() const {
  return _impl_.x_;
}
inline int32_t CMsgMapLine::x() const {
  // @@protoc_insertion_point(field_get:CMsgMapLine.x)
  return _internal_x();
}
inline void CMsgMapLine::_internal_set_x(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.x_ = value;
}
inline void CMsgMapLine::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:CMsgMapLine.x)
}

// optional int32 y = 2;
inline bool CMsgMapLine::_internal_has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgMapLine::has_y() const {
  return _internal_has_y();
}
inline void CMsgMapLine::clear_y() {
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CMsgMapLine::_internal_y() const {
  return _impl_.y_;
}
inline int32_t CMsgMapLine::y() const {
  // @@protoc_insertion_point(field_get:CMsgMapLine.y)
  return _internal_y();
}
inline void CMsgMapLine::_internal_set_y(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.y_ = value;
}
inline void CMsgMapLine::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:CMsgMapLine.y)
}

// optional bool initial = 3;
inline bool CMsgMapLine::_internal_has_initial() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgMapLine::has_initial() const {
  return _internal_has_initial();
}
inline void CMsgMapLine::clear_initial() {
  _impl_.initial_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgMapLine::_internal_initial() const {
  return _impl_.initial_;
}
inline bool CMsgMapLine::initial() const {
  // @@protoc_insertion_point(field_get:CMsgMapLine.initial)
  return _internal_initial();
}
inline void CMsgMapLine::_internal_set_initial(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.initial_ = value;
}
inline void CMsgMapLine::set_initial(bool value) {
  _internal_set_initial(value);
  // @@protoc_insertion_point(field_set:CMsgMapLine.initial)
}

// -------------------------------------------------------------------

// CMsgAccountHeroStats

// optional uint32 hero_id = 1;
inline bool CMsgAccountHeroStats::_internal_has_hero_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAccountHeroStats::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgAccountHeroStats::clear_hero_id() {
  _impl_.hero_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgAccountHeroStats::_internal_hero_id() const {
  return _impl_.hero_id_;
}
inline uint32_t CMsgAccountHeroStats::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgAccountHeroStats.hero_id)
  return _internal_hero_id();
}
inline void CMsgAccountHeroStats::_internal_set_hero_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hero_id_ = value;
}
inline void CMsgAccountHeroStats::set_hero_id(uint32_t value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgAccountHeroStats.hero_id)
}

// repeated uint32 stat_id = 2;
inline int CMsgAccountHeroStats::_internal_stat_id_size() const {
  return _impl_.stat_id_.size();
}
inline int CMsgAccountHeroStats::stat_id_size() const {
  return _internal_stat_id_size();
}
inline void CMsgAccountHeroStats::clear_stat_id() {
  _impl_.stat_id_.Clear();
}
inline uint32_t CMsgAccountHeroStats::_internal_stat_id(int index) const {
  return _impl_.stat_id_.Get(index);
}
inline uint32_t CMsgAccountHeroStats::stat_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountHeroStats.stat_id)
  return _internal_stat_id(index);
}
inline void CMsgAccountHeroStats::set_stat_id(int index, uint32_t value) {
  _impl_.stat_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAccountHeroStats.stat_id)
}
inline void CMsgAccountHeroStats::_internal_add_stat_id(uint32_t value) {
  _impl_.stat_id_.Add(value);
}
inline void CMsgAccountHeroStats::add_stat_id(uint32_t value) {
  _internal_add_stat_id(value);
  // @@protoc_insertion_point(field_add:CMsgAccountHeroStats.stat_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAccountHeroStats::_internal_stat_id() const {
  return _impl_.stat_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAccountHeroStats::stat_id() const {
  // @@protoc_insertion_point(field_list:CMsgAccountHeroStats.stat_id)
  return _internal_stat_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAccountHeroStats::_internal_mutable_stat_id() {
  return &_impl_.stat_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAccountHeroStats::mutable_stat_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountHeroStats.stat_id)
  return _internal_mutable_stat_id();
}

// repeated uint64 total_value = 3;
inline int CMsgAccountHeroStats::_internal_total_value_size() const {
  return _impl_.total_value_.size();
}
inline int CMsgAccountHeroStats::total_value_size() const {
  return _internal_total_value_size();
}
inline void CMsgAccountHeroStats::clear_total_value() {
  _impl_.total_value_.Clear();
}
inline uint64_t CMsgAccountHeroStats::_internal_total_value(int index) const {
  return _impl_.total_value_.Get(index);
}
inline uint64_t CMsgAccountHeroStats::total_value(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountHeroStats.total_value)
  return _internal_total_value(index);
}
inline void CMsgAccountHeroStats::set_total_value(int index, uint64_t value) {
  _impl_.total_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAccountHeroStats.total_value)
}
inline void CMsgAccountHeroStats::_internal_add_total_value(uint64_t value) {
  _impl_.total_value_.Add(value);
}
inline void CMsgAccountHeroStats::add_total_value(uint64_t value) {
  _internal_add_total_value(value);
  // @@protoc_insertion_point(field_add:CMsgAccountHeroStats.total_value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgAccountHeroStats::_internal_total_value() const {
  return _impl_.total_value_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgAccountHeroStats::total_value() const {
  // @@protoc_insertion_point(field_list:CMsgAccountHeroStats.total_value)
  return _internal_total_value();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgAccountHeroStats::_internal_mutable_total_value() {
  return &_impl_.total_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgAccountHeroStats::mutable_total_value() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountHeroStats.total_value)
  return _internal_mutable_total_value();
}

// repeated uint32 medals_bronze = 4;
inline int CMsgAccountHeroStats::_internal_medals_bronze_size() const {
  return _impl_.medals_bronze_.size();
}
inline int CMsgAccountHeroStats::medals_bronze_size() const {
  return _internal_medals_bronze_size();
}
inline void CMsgAccountHeroStats::clear_medals_bronze() {
  _impl_.medals_bronze_.Clear();
}
inline uint32_t CMsgAccountHeroStats::_internal_medals_bronze(int index) const {
  return _impl_.medals_bronze_.Get(index);
}
inline uint32_t CMsgAccountHeroStats::medals_bronze(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountHeroStats.medals_bronze)
  return _internal_medals_bronze(index);
}
inline void CMsgAccountHeroStats::set_medals_bronze(int index, uint32_t value) {
  _impl_.medals_bronze_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAccountHeroStats.medals_bronze)
}
inline void CMsgAccountHeroStats::_internal_add_medals_bronze(uint32_t value) {
  _impl_.medals_bronze_.Add(value);
}
inline void CMsgAccountHeroStats::add_medals_bronze(uint32_t value) {
  _internal_add_medals_bronze(value);
  // @@protoc_insertion_point(field_add:CMsgAccountHeroStats.medals_bronze)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAccountHeroStats::_internal_medals_bronze() const {
  return _impl_.medals_bronze_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAccountHeroStats::medals_bronze() const {
  // @@protoc_insertion_point(field_list:CMsgAccountHeroStats.medals_bronze)
  return _internal_medals_bronze();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAccountHeroStats::_internal_mutable_medals_bronze() {
  return &_impl_.medals_bronze_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAccountHeroStats::mutable_medals_bronze() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountHeroStats.medals_bronze)
  return _internal_mutable_medals_bronze();
}

// repeated uint32 medals_silver = 5;
inline int CMsgAccountHeroStats::_internal_medals_silver_size() const {
  return _impl_.medals_silver_.size();
}
inline int CMsgAccountHeroStats::medals_silver_size() const {
  return _internal_medals_silver_size();
}
inline void CMsgAccountHeroStats::clear_medals_silver() {
  _impl_.medals_silver_.Clear();
}
inline uint32_t CMsgAccountHeroStats::_internal_medals_silver(int index) const {
  return _impl_.medals_silver_.Get(index);
}
inline uint32_t CMsgAccountHeroStats::medals_silver(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountHeroStats.medals_silver)
  return _internal_medals_silver(index);
}
inline void CMsgAccountHeroStats::set_medals_silver(int index, uint32_t value) {
  _impl_.medals_silver_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAccountHeroStats.medals_silver)
}
inline void CMsgAccountHeroStats::_internal_add_medals_silver(uint32_t value) {
  _impl_.medals_silver_.Add(value);
}
inline void CMsgAccountHeroStats::add_medals_silver(uint32_t value) {
  _internal_add_medals_silver(value);
  // @@protoc_insertion_point(field_add:CMsgAccountHeroStats.medals_silver)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAccountHeroStats::_internal_medals_silver() const {
  return _impl_.medals_silver_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAccountHeroStats::medals_silver() const {
  // @@protoc_insertion_point(field_list:CMsgAccountHeroStats.medals_silver)
  return _internal_medals_silver();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAccountHeroStats::_internal_mutable_medals_silver() {
  return &_impl_.medals_silver_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAccountHeroStats::mutable_medals_silver() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountHeroStats.medals_silver)
  return _internal_mutable_medals_silver();
}

// repeated uint32 medals_gold = 6;
inline int CMsgAccountHeroStats::_internal_medals_gold_size() const {
  return _impl_.medals_gold_.size();
}
inline int CMsgAccountHeroStats::medals_gold_size() const {
  return _internal_medals_gold_size();
}
inline void CMsgAccountHeroStats::clear_medals_gold() {
  _impl_.medals_gold_.Clear();
}
inline uint32_t CMsgAccountHeroStats::_internal_medals_gold(int index) const {
  return _impl_.medals_gold_.Get(index);
}
inline uint32_t CMsgAccountHeroStats::medals_gold(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountHeroStats.medals_gold)
  return _internal_medals_gold(index);
}
inline void CMsgAccountHeroStats::set_medals_gold(int index, uint32_t value) {
  _impl_.medals_gold_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgAccountHeroStats.medals_gold)
}
inline void CMsgAccountHeroStats::_internal_add_medals_gold(uint32_t value) {
  _impl_.medals_gold_.Add(value);
}
inline void CMsgAccountHeroStats::add_medals_gold(uint32_t value) {
  _internal_add_medals_gold(value);
  // @@protoc_insertion_point(field_add:CMsgAccountHeroStats.medals_gold)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAccountHeroStats::_internal_medals_gold() const {
  return _impl_.medals_gold_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgAccountHeroStats::medals_gold() const {
  // @@protoc_insertion_point(field_list:CMsgAccountHeroStats.medals_gold)
  return _internal_medals_gold();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAccountHeroStats::_internal_mutable_medals_gold() {
  return &_impl_.medals_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgAccountHeroStats::mutable_medals_gold() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountHeroStats.medals_gold)
  return _internal_mutable_medals_gold();
}

// -------------------------------------------------------------------

// CMsgAccountBookStats

// optional uint32 book_id = 1;
inline bool CMsgAccountBookStats::_internal_has_book_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAccountBookStats::has_book_id() const {
  return _internal_has_book_id();
}
inline void CMsgAccountBookStats::clear_book_id() {
  _impl_.book_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgAccountBookStats::_internal_book_id() const {
  return _impl_.book_id_;
}
inline uint32_t CMsgAccountBookStats::book_id() const {
  // @@protoc_insertion_point(field_get:CMsgAccountBookStats.book_id)
  return _internal_book_id();
}
inline void CMsgAccountBookStats::_internal_set_book_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.book_id_ = value;
}
inline void CMsgAccountBookStats::set_book_id(uint32_t value) {
  _internal_set_book_id(value);
  // @@protoc_insertion_point(field_set:CMsgAccountBookStats.book_id)
}

// optional uint32 book_xp = 2;
inline bool CMsgAccountBookStats::_internal_has_book_xp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAccountBookStats::has_book_xp() const {
  return _internal_has_book_xp();
}
inline void CMsgAccountBookStats::clear_book_xp() {
  _impl_.book_xp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgAccountBookStats::_internal_book_xp() const {
  return _impl_.book_xp_;
}
inline uint32_t CMsgAccountBookStats::book_xp() const {
  // @@protoc_insertion_point(field_get:CMsgAccountBookStats.book_xp)
  return _internal_book_xp();
}
inline void CMsgAccountBookStats::_internal_set_book_xp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.book_xp_ = value;
}
inline void CMsgAccountBookStats::set_book_xp(uint32_t value) {
  _internal_set_book_xp(value);
  // @@protoc_insertion_point(field_set:CMsgAccountBookStats.book_xp)
}

// optional uint32 book_max_xp = 3;
inline bool CMsgAccountBookStats::_internal_has_book_max_xp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgAccountBookStats::has_book_max_xp() const {
  return _internal_has_book_max_xp();
}
inline void CMsgAccountBookStats::clear_book_max_xp() {
  _impl_.book_max_xp_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgAccountBookStats::_internal_book_max_xp() const {
  return _impl_.book_max_xp_;
}
inline uint32_t CMsgAccountBookStats::book_max_xp() const {
  // @@protoc_insertion_point(field_get:CMsgAccountBookStats.book_max_xp)
  return _internal_book_max_xp();
}
inline void CMsgAccountBookStats::_internal_set_book_max_xp(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.book_max_xp_ = value;
}
inline void CMsgAccountBookStats::set_book_max_xp(uint32_t value) {
  _internal_set_book_max_xp(value);
  // @@protoc_insertion_point(field_set:CMsgAccountBookStats.book_max_xp)
}

// -------------------------------------------------------------------

// CMsgAccountStats

// optional uint32 account_id = 1;
inline bool CMsgAccountStats::_internal_has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAccountStats::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgAccountStats::clear_account_id() {
  _impl_.account_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgAccountStats::_internal_account_id() const {
  return _impl_.account_id_;
}
inline uint32_t CMsgAccountStats::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgAccountStats.account_id)
  return _internal_account_id();
}
inline void CMsgAccountStats::_internal_set_account_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_id_ = value;
}
inline void CMsgAccountStats::set_account_id(uint32_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgAccountStats.account_id)
}

// repeated .CMsgAccountHeroStats stats = 2;
inline int CMsgAccountStats::_internal_stats_size() const {
  return _impl_.stats_.size();
}
inline int CMsgAccountStats::stats_size() const {
  return _internal_stats_size();
}
inline void CMsgAccountStats::clear_stats() {
  _impl_.stats_.Clear();
}
inline ::CMsgAccountHeroStats* CMsgAccountStats::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAccountStats.stats)
  return _impl_.stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountHeroStats >*
CMsgAccountStats::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountStats.stats)
  return &_impl_.stats_;
}
inline const ::CMsgAccountHeroStats& CMsgAccountStats::_internal_stats(int index) const {
  return _impl_.stats_.Get(index);
}
inline const ::CMsgAccountHeroStats& CMsgAccountStats::stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountStats.stats)
  return _internal_stats(index);
}
inline ::CMsgAccountHeroStats* CMsgAccountStats::_internal_add_stats() {
  return _impl_.stats_.Add();
}
inline ::CMsgAccountHeroStats* CMsgAccountStats::add_stats() {
  ::CMsgAccountHeroStats* _add = _internal_add_stats();
  // @@protoc_insertion_point(field_add:CMsgAccountStats.stats)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAccountHeroStats >&
CMsgAccountStats::stats() const {
  // @@protoc_insertion_point(field_list:CMsgAccountStats.stats)
  return _impl_.stats_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CSOCitadelParty_EMemberRights> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOCitadelParty_EMemberRights>() {
  return ::CSOCitadelParty_EMemberRights_descriptor();
}
template <> struct is_proto_enum< ::CSOCitadelParty_EPlayerType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOCitadelParty_EPlayerType>() {
  return ::CSOCitadelParty_EPlayerType_descriptor();
}
template <> struct is_proto_enum< ::CSOCitadelParty_EChatMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOCitadelParty_EChatMode>() {
  return ::CSOCitadelParty_EChatMode_descriptor();
}
template <> struct is_proto_enum< ::CMsgMatchPlayerDamageMatrix_EStatType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgMatchPlayerDamageMatrix_EStatType>() {
  return ::CMsgMatchPlayerDamageMatrix_EStatType_descriptor();
}
template <> struct is_proto_enum< ::CMsgMatchMetaDataContents_EMatchOutcome> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgMatchMetaDataContents_EMatchOutcome>() {
  return ::CMsgMatchMetaDataContents_EMatchOutcome_descriptor();
}
template <> struct is_proto_enum< ::CMsgMatchMetaDataContents_EGoldSource> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgMatchMetaDataContents_EGoldSource>() {
  return ::CMsgMatchMetaDataContents_EGoldSource_descriptor();
}
template <> struct is_proto_enum< ::CMsgLaneColor> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgLaneColor>() {
  return ::CMsgLaneColor_descriptor();
}
template <> struct is_proto_enum< ::EGCCitadelCommonMessages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCCitadelCommonMessages>() {
  return ::EGCCitadelCommonMessages_descriptor();
}
template <> struct is_proto_enum< ::ECitadelMatchMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelMatchMode>() {
  return ::ECitadelMatchMode_descriptor();
}
template <> struct is_proto_enum< ::ECitadelLobbyTeam> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelLobbyTeam>() {
  return ::ECitadelLobbyTeam_descriptor();
}
template <> struct is_proto_enum< ::ECitadelAccountStatMedal> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelAccountStatMedal>() {
  return ::ECitadelAccountStatMedal_descriptor();
}
template <> struct is_proto_enum< ::ECitadelObjective> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelObjective>() {
  return ::ECitadelObjective_descriptor();
}
template <> struct is_proto_enum< ::ECitadelTeamObjective> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelTeamObjective>() {
  return ::ECitadelTeamObjective_descriptor();
}
template <> struct is_proto_enum< ::ECitadelBotDifficulty> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelBotDifficulty>() {
  return ::ECitadelBotDifficulty_descriptor();
}
template <> struct is_proto_enum< ::ECitadelRegionMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelRegionMode>() {
  return ::ECitadelRegionMode_descriptor();
}
template <> struct is_proto_enum< ::ECitadelGameMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECitadelGameMode>() {
  return ::ECitadelGameMode_descriptor();
}
template <> struct is_proto_enum< ::ELobbyServerState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ELobbyServerState>() {
  return ::ELobbyServerState_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_citadel_5fgcmessages_5fcommon_2eproto
